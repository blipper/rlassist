

-----------------------| Started logging at: Jun 22 2021 22:33:41 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
num_workers: 8
GE_selection_probability: 1
---------
Variables: name (type shape) [size]
---------
global/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
global/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
global/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
global/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
global/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
global/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
global/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_0/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_0/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_0/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_0/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_0/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_0/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_0/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
Total size of variables: 427792
Total bytes of variables: 1711168
will train for 605100 max_episodes
---------
Variables: name (type shape) [size]
---------
global/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
global/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
global/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
global/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
global/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
global/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
global/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_0/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_0/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_0/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_0/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_0/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_0/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_0/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_1/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_1/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_1/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_1/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_1/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_1/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_1/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
Total size of variables: 641688
Total bytes of variables: 2566752
---------
Variables: name (type shape) [size]
---------
global/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
global/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
global/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
global/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
global/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
global/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
global/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_0/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_0/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_0/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_0/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_0/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_0/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_0/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_1/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_1/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_1/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_1/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_1/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_1/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_1/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_2/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_2/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_2/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_2/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_2/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_2/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_2/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
Total size of variables: 855584
Total bytes of variables: 3422336
---------
Variables: name (type shape) [size]
---------
global/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
global/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
global/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
global/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
global/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
global/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
global/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_0/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_0/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_0/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_0/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_0/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_0/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_0/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_1/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_1/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_1/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_1/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_1/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_1/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_1/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_2/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_2/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_2/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_2/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_2/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_2/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_2/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_3/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_3/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_3/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_3/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_3/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_3/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_3/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
Total size of variables: 1069480
Total bytes of variables: 4277920
---------
Variables: name (type shape) [size]
---------
global/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
global/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
global/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
global/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
global/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
global/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
global/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_0/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_0/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_0/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_0/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_0/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_0/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_0/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_1/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_1/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_1/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_1/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_1/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_1/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_1/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_2/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_2/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_2/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_2/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_2/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_2/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_2/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_3/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_3/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_3/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_3/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_3/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_3/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_3/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_4/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_4/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_4/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_4/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_4/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_4/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_4/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
Total size of variables: 1283376
Total bytes of variables: 5133504
---------
Variables: name (type shape) [size]
---------
global/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
global/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
global/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
global/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
global/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
global/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
global/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_0/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_0/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_0/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_0/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_0/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_0/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_0/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_1/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_1/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_1/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_1/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_1/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_1/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_1/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_2/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_2/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_2/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_2/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_2/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_2/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_2/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_3/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_3/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_3/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_3/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_3/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_3/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_3/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_4/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_4/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_4/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_4/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_4/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_4/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_4/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_5/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_5/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_5/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_5/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_5/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_5/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_5/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
Total size of variables: 1497272
Total bytes of variables: 5989088
---------
Variables: name (type shape) [size]
---------
global/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
global/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
global/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
global/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
global/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
global/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
global/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_0/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_0/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_0/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_0/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_0/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_0/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_0/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_1/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_1/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_1/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_1/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_1/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_1/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_1/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_2/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_2/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_2/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_2/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_2/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_2/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_2/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_3/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_3/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_3/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_3/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_3/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_3/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_3/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_4/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_4/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_4/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_4/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_4/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_4/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_4/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_5/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_5/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_5/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_5/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_5/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_5/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_5/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_6/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_6/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_6/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_6/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_6/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_6/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_6/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
Total size of variables: 1711168
Total bytes of variables: 6844672
---------
Variables: name (type shape) [size]
---------
global/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
global/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
global/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
global/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
global/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
global/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
global/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_0/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_0/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_0/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_0/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_0/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_0/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_0/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_1/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_1/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_1/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_1/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_1/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_1/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_1/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_2/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_2/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_2/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_2/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_2/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_2/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_2/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_3/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_3/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_3/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_3/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_3/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_3/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_3/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_4/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_4/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_4/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_4/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_4/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_4/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_4/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_5/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_5/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_5/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_5/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_5/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_5/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_5/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_6/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_6/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_6/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_6/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_6/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_6/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_6/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
worker_7/embedding_matrix:0 (float32_ref 91x24) [2184, bytes: 8736]
worker_7/rnn/multi_rnn_cell/cell_0/lstm_cell/kernel:0 (float32_ref 152x512) [77824, bytes: 311296]
worker_7/rnn/multi_rnn_cell/cell_0/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_7/rnn/multi_rnn_cell/cell_1/lstm_cell/kernel:0 (float32_ref 256x512) [131072, bytes: 524288]
worker_7/rnn/multi_rnn_cell/cell_1/lstm_cell/bias:0 (float32_ref 512) [512, bytes: 2048]
worker_7/fully_connected/weights:0 (float32_ref 128x13) [1664, bytes: 6656]
worker_7/fully_connected_1/weights:0 (float32_ref 128x1) [128, bytes: 512]
Total size of variables: 1925064
Total bytes of variables: 7700256
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 1, T: 22, GE: 1.000000, labelled_data: 6051
TRAIN || T:23 | GE:1 | epochs:0.0  | ep_lens:22.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.00  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
Starting worker: 2, T: 35, GE: 1.000000, labelled_data: 6051
Starting worker: 3, T: 91, GE: 1.000000, labelled_data: 6051
Starting worker: 4, T: 94, GE: 1.000000, labelled_data: 6051
Starting worker: 5, T: 103, GE: 1.000000, labelled_data: 6051
Starting worker: 6, T: 226, GE: 1.000000, labelled_data: 6051
Starting worker: 7, T: 242, GE: 1.000000, labelled_data: 6051
TRAIN || T:567 | GE:3 | epochs:0.0  | ep_lens:100.0 | edits:90.0 (spuriousE:90.0, 100.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:-2.75 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1505 | GE:14 | epochs:0.0  | ep_lens:100.0 | edits:82.0 (spuriousE:82.0, 100.0%) | moves:18.0 (spuriousM:4.0 ,  22.2%) | ep_rewards:-2.55 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2253 | GE:22 | epochs:0.0  | ep_lens:100.0 | edits:69.0 (spuriousE:69.0, 100.0%) | moves:31.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:-2.22 | mean_Q:-2.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2975 | GE:31 | epochs:0.0  | ep_lens:100.0 | edits:72.0 (spuriousE:72.0, 100.0%) | moves:28.0 (spuriousM:4.0 ,  14.3%) | ep_rewards:-2.30 | mean_Q:-1.70  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:4278 | GE:44 | epochs:0.0  | ep_lens:100.0 | edits:54.0 (spuriousE:54.0, 100.0%) | moves:46.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:-1.85 | mean_Q:-1.41  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:5459 | GE:58 | epochs:0.0  | ep_lens:100.0 | edits:51.0 (spuriousE:51.0, 100.0%) | moves:49.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-1.77 | mean_Q:-1.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:5792 | GE:62 | epochs:0.0  | ep_lens:68.0 | edits:39.0 (spuriousE:39.0, 100.0%) | moves:29.0 (spuriousM:7.0 ,  24.1%) | ep_rewards:-1.31 | mean_Q:-1.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:6326 | GE:71 | epochs:0.0  | ep_lens:83.0 | edits:40.0 (spuriousE:40.0, 100.0%) | moves:43.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-1.41 | mean_Q:-1.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:7063 | GE:80 | epochs:0.0  | ep_lens:75.0 | edits:19.0 (spuriousE:19.0, 100.0%) | moves:56.0 (spuriousM:3.0 ,   5.4%) | ep_rewards:-0.85 | mean_Q:-0.57  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:7583 | GE:88 | epochs:0.0  | ep_lens:72.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:56.0 (spuriousM:5.0 ,   8.9%) | ep_rewards:-0.76 | mean_Q:-0.49  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:7704 | GE:91 | epochs:0.0  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.66  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:7969 | GE:94 | epochs:0.0  | ep_lens:54.0 | edits:19.0 (spuriousE:19.0, 100.0%) | moves:35.0 (spuriousM:5.0 ,  14.3%) | ep_rewards:-0.75 | mean_Q:-0.49  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:8258 | GE:97 | epochs:0.0  | ep_lens:54.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:41.0 (spuriousM:7.0 ,  17.1%) | ep_rewards:-0.60 | mean_Q:-0.40  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:9350 | GE:113 | epochs:0.0  | ep_lens:100.0 | edits:21.0 (spuriousE:21.0, 100.0%) | moves:79.0 (spuriousM:4.0 ,   5.1%) | ep_rewards:-1.03 | mean_Q:-0.49  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:9545 | GE:119 | epochs:0.0  | ep_lens:36.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:24.0 (spuriousM:4.0 ,  16.7%) | ep_rewards:-0.48 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:10382 | GE:131 | epochs:0.0  | ep_lens:91.0 | edits:29.0 (spuriousE:29.0, 100.0%) | moves:62.0 (spuriousM:4.0 ,   6.5%) | ep_rewards:-1.18 | mean_Q:-0.31  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:11195 | GE:145 | epochs:0.0  | ep_lens:74.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:57.0 (spuriousM:8.0 ,  14.0%) | ep_rewards:-0.80 | mean_Q:-0.34  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:11708 | GE:155 | epochs:0.0  | ep_lens:65.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:53.0 (spuriousM:12.0,  22.6%) | ep_rewards:-0.63 | mean_Q:-0.31  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:11866 | GE:158 | epochs:0.0  | ep_lens:20.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.28  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:12025 | GE:166 | epochs:0.0  | ep_lens:22.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.15  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:12298 | GE:171 | epochs:0.0  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:14.0,  36.8%) | ep_rewards:-0.31 | mean_Q:0.06   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:12400 | GE:173 | epochs:0.0  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:0.20   | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:12858 | GE:185 | epochs:0.0  | ep_lens:51.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:39.0 (spuriousM:12.0,  30.8%) | ep_rewards:-0.56 | mean_Q:0.20   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:13186 | GE:192 | epochs:0.0  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:7.0 ,  19.4%) | ep_rewards:-0.39 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:13741 | GE:205 | epochs:0.0  | ep_lens:54.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:49.0 (spuriousM:5.0 ,  10.2%) | ep_rewards:-0.40 | mean_Q:-0.35  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:14116 | GE:213 | epochs:0.0  | ep_lens:47.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:35.0 (spuriousM:10.0,  28.6%) | ep_rewards:-0.54 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:14450 | GE:222 | epochs:0.0  | ep_lens:47.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:38.0 (spuriousM:7.0 ,  18.4%) | ep_rewards:-0.46 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:14907 | GE:231 | epochs:0.0  | ep_lens:36.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:35.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.79  | mean_Q:-0.05  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:15201 | GE:238 | epochs:0.0  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:11.0,  29.7%) | ep_rewards:-0.31 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:15886 | GE:253 | epochs:0.0  | ep_lens:59.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:52.0 (spuriousM:10.0,  19.2%) | ep_rewards:-0.47 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:16118 | GE:261 | epochs:0.0  | ep_lens:28.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.17 | mean_Q:-0.31  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:16289 | GE:265 | epochs:0.0  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.27  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:16697 | GE:273 | epochs:0.0  | ep_lens:49.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:43.0 (spuriousM:16.0,  37.2%) | ep_rewards:-0.40 | mean_Q:0.00   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:16946 | GE:279 | epochs:0.0  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:6.0 ,  19.4%) | ep_rewards:-0.31 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:17463 | GE:289 | epochs:0.0  | ep_lens:51.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:45.0 (spuriousM:14.0,  31.1%) | ep_rewards:-0.41 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:17602 | GE:293 | epochs:0.0  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:17920 | GE:300 | epochs:0.0  | ep_lens:43.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:32.0 (spuriousM:6.0 ,  18.8%) | ep_rewards:-0.49 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:18110 | GE:304 | epochs:0.0  | ep_lens:32.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:28.0 (spuriousM:9.0 ,  32.1%) | ep_rewards:-0.26 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:18419 | GE:310 | epochs:0.0  | ep_lens:47.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:35.0 (spuriousM:6.0 ,  17.1%) | ep_rewards:-0.54 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:18744 | GE:317 | epochs:0.0  | ep_lens:38.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.44 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:19208 | GE:325 | epochs:0.0  | ep_lens:52.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:46.0 (spuriousM:7.0 ,  15.2%) | ep_rewards:-0.41 | mean_Q:-0.31  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:19909 | GE:339 | epochs:0.0  | ep_lens:80.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:63.0 (spuriousM:15.0,  23.8%) | ep_rewards:-0.83 | mean_Q:-0.30  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:20247 | GE:347 | epochs:0.0  | ep_lens:38.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.24 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:20615 | GE:356 | epochs:0.0  | ep_lens:52.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:42.0 (spuriousM:9.0 ,  21.4%) | ep_rewards:-0.51 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:20874 | GE:362 | epochs:0.0  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:6.0 ,  19.4%) | ep_rewards:-0.25 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:21549 | GE:377 | epochs:0.0  | ep_lens:61.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:54.0 (spuriousM:8.0 ,  14.8%) | ep_rewards:-0.48 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:22220 | GE:390 | epochs:0.0  | ep_lens:63.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.54 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:22390 | GE:395 | epochs:0.0  | ep_lens:33.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:24.0 (spuriousM:6.0 ,  25.0%) | ep_rewards:-0.39 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:22643 | GE:402 | epochs:0.0  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.36 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:23228 | GE:412 | epochs:0.0  | ep_lens:58.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:50.0 (spuriousM:8.0 ,  16.0%) | ep_rewards:-0.49 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:23604 | GE:419 | epochs:0.0  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:6.0 ,  14.6%) | ep_rewards:-0.36 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:23723 | GE:421 | epochs:0.0  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.30  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:24060 | GE:430 | epochs:0.0  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:5.0 ,  12.8%) | ep_rewards:-0.35 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:24277 | GE:435 | epochs:0.0  | ep_lens:42.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:32.0 (spuriousM:11.0,  34.4%) | ep_rewards:-0.46 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:24843 | GE:444 | epochs:0.0  | ep_lens:62.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:58.0 (spuriousM:5.0 ,   8.6%) | ep_rewards:-0.41 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:25056 | GE:448 | epochs:0.0  | ep_lens:27.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:26.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.25  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:25288 | GE:456 | epochs:0.0  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:12.0,  31.6%) | ep_rewards:-0.37 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:25411 | GE:460 | epochs:0.0  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.13  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:25944 | GE:471 | epochs:0.0  | ep_lens:62.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:58.0 (spuriousM:5.0 ,   8.6%) | ep_rewards:-0.41 | mean_Q:0.10   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:26283 | GE:476 | epochs:0.0  | ep_lens:53.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:45.0 (spuriousM:10.0,  22.2%) | ep_rewards:-0.47 | mean_Q:0.04   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:26853 | GE:483 | epochs:0.0  | ep_lens:61.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:53.0 (spuriousM:4.0 ,   7.5%) | ep_rewards:-0.51 | mean_Q:-0.30  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:27038 | GE:488 | epochs:0.0  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.29 | mean_Q:-0.39  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:27373 | GE:495 | epochs:0.0  | ep_lens:52.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.41 | mean_Q:-0.30  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:27875 | GE:502 | epochs:0.0  | ep_lens:74.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:67.0 (spuriousM:12.0,  17.9%) | ep_rewards:-0.55 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:28123 | GE:506 | epochs:0.0  | ep_lens:51.0 | edits:9.0  (spuriousE:8.0 ,  88.9%) | moves:42.0 (spuriousM:10.0,  23.8%) | ep_rewards:0.52  | mean_Q:-0.29  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:28277 | GE:511 | epochs:0.0  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.28 | mean_Q:-0.32  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:28757 | GE:518 | epochs:0.0  | ep_lens:78.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:67.0 (spuriousM:15.0,  22.4%) | ep_rewards:-0.67 | mean_Q:-0.33  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:29106 | GE:523 | epochs:0.0  | ep_lens:55.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:46.0 (spuriousM:8.0 ,  17.4%) | ep_rewards:-0.50 | mean_Q:-0.37  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:29458 | GE:530 | epochs:0.0  | ep_lens:44.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.30 | mean_Q:-0.33  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:29660 | GE:535 | epochs:0.0  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:8.0 ,  22.2%) | ep_rewards:-0.36 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:29941 | GE:540 | epochs:0.0  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:6.0 ,  15.0%) | ep_rewards:-0.35 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:30257 | GE:546 | epochs:0.0  | ep_lens:63.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:51.0 (spuriousM:8.0 ,  15.7%) | ep_rewards:-0.62 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:30601 | GE:555 | epochs:0.0  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:10.0,  26.3%) | ep_rewards:-0.28 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:30945 | GE:560 | epochs:0.0  | ep_lens:48.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:40.0 (spuriousM:8.0 ,  20.0%) | ep_rewards:-0.44 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:31297 | GE:569 | epochs:0.0  | ep_lens:44.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:42.0 (spuriousM:5.0 ,  11.9%) | ep_rewards:-0.27 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:31495 | GE:574 | epochs:0.0  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:5.0 ,  14.7%) | ep_rewards:-0.26 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:31809 | GE:581 | epochs:0.0  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:7.0 ,  16.7%) | ep_rewards:-0.39 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:32050 | GE:585 | epochs:0.0  | ep_lens:41.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:29.0 (spuriousM:7.0 ,  24.1%) | ep_rewards:-0.51 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:32351 | GE:591 | epochs:0.0  | ep_lens:29.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:28.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:32624 | GE:600 | epochs:0.0  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.23 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:33204 | GE:611 | epochs:0.0  | ep_lens:53.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.44 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:33527 | GE:616 | epochs:0.0  | ep_lens:51.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:44.0 (spuriousM:12.0,  27.3%) | ep_rewards:-0.43 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:33730 | GE:622 | epochs:0.0  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.28 | mean_Q:-0.30  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:34602 | GE:636 | epochs:0.0  | ep_lens:78.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:66.0 (spuriousM:12.0,  18.2%) | ep_rewards:-0.69 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:34856 | GE:642 | epochs:0.0  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:6.0 ,  17.6%) | ep_rewards:-0.32 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:35565 | GE:655 | epochs:0.0  | ep_lens:65.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:61.0 (spuriousM:4.0 ,   6.6%) | ep_rewards:-0.43 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:35736 | GE:658 | epochs:0.0  | ep_lens:39.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.40 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:36185 | GE:669 | epochs:0.0  | ep_lens:63.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:57.0 (spuriousM:20.0,  35.1%) | ep_rewards:-0.47 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:36507 | GE:677 | epochs:0.0  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:8.0 ,  22.2%) | ep_rewards:-0.36 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:36687 | GE:681 | epochs:0.0  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:5.0 ,  16.7%) | ep_rewards:-0.24 | mean_Q:-0.03  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:36946 | GE:687 | epochs:0.0  | ep_lens:33.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.19 | mean_Q:0.01   | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:37273 | GE:692 | epochs:0.0  | ep_lens:51.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:48.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.33 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:37509 | GE:697 | epochs:0.0  | ep_lens:41.0 | edits:9.0  (spuriousE:8.0 ,  88.9%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:0.57  | mean_Q:-0.23  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:37770 | GE:702 | epochs:0.0  | ep_lens:37.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.36 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:38135 | GE:710 | epochs:0.0  | ep_lens:40.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:38.0 (spuriousM:5.0 ,  13.2%) | ep_rewards:-0.25 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:38754 | GE:719 | epochs:0.0  | ep_lens:88.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:81.0 (spuriousM:20.0,  24.7%) | ep_rewards:-0.62 | mean_Q:-0.29  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:39301 | GE:730 | epochs:0.0  | ep_lens:72.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:56.0 (spuriousM:2.0 ,   3.6%) | ep_rewards:-0.76 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:40035 | GE:742 | epochs:0.0  | ep_lens:74.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:62.0 (spuriousM:5.0 ,   8.1%) | ep_rewards:-0.67 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:40244 | GE:747 | epochs:0.0  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.36 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:41066 | GE:760 | epochs:0.0  | ep_lens:96.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:81.0 (spuriousM:9.0 ,  11.1%) | ep_rewards:-0.86 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:41572 | GE:772 | epochs:0.0  | ep_lens:55.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:46.0 (spuriousM:10.0,  21.7%) | ep_rewards:-0.50 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:41842 | GE:777 | epochs:0.0  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:4.0 ,  10.0%) | ep_rewards:-0.35 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:42290 | GE:786 | epochs:0.0  | ep_lens:55.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:47.0 (spuriousM:6.0 ,  12.8%) | ep_rewards:-0.48 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:42514 | GE:790 | epochs:0.0  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.32 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:42952 | GE:800 | epochs:0.0  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:5.0 ,  10.0%) | ep_rewards:-0.46 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:43396 | GE:809 | epochs:0.0  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:9.0 ,  21.4%) | ep_rewards:-0.36 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:43646 | GE:816 | epochs:0.0  | ep_lens:42.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:31.0 (spuriousM:9.0 ,  29.0%) | ep_rewards:-0.49 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:44037 | GE:827 | epochs:0.0  | ep_lens:57.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:47.0 (spuriousM:10.0,  21.3%) | ep_rewards:-0.54 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:44457 | GE:834 | epochs:0.0  | ep_lens:53.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:46.0 (spuriousM:8.0 ,  17.4%) | ep_rewards:-0.44 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:44716 | GE:841 | epochs:0.0  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.30 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:45276 | GE:853 | epochs:0.0  | ep_lens:53.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:46.0 (spuriousM:14.0,  30.4%) | ep_rewards:-0.44 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:45968 | GE:869 | epochs:0.0  | ep_lens:54.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:51.0 (spuriousM:6.0 ,  11.8%) | ep_rewards:-0.35 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:46844 | GE:887 | epochs:0.0  | ep_lens:79.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:71.0 (spuriousM:6.0 ,   8.5%) | ep_rewards:-0.60 | mean_Q:-0.31  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:47557 | GE:905 | epochs:0.0  | ep_lens:65.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:62.0 (spuriousM:2.0 ,   3.2%) | ep_rewards:-0.40 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:48030 | GE:915 | epochs:0.0  | ep_lens:59.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:52.0 (spuriousM:5.0 ,   9.6%) | ep_rewards:-0.47 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:48596 | GE:926 | epochs:0.0  | ep_lens:54.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:49.0 (spuriousM:10.0,  20.4%) | ep_rewards:-0.40 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:49078 | GE:937 | epochs:0.0  | ep_lens:58.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:51.0 (spuriousM:10.0,  19.6%) | ep_rewards:-0.47 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:49403 | GE:944 | epochs:0.0  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.31 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:49478 | GE:945 | epochs:0.0  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.24  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:49908 | GE:958 | epochs:0.0  | ep_lens:51.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:45.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.41 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:50134 | GE:960 | epochs:0.0  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.29 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:50542 | GE:968 | epochs:0.0  | ep_lens:51.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:44.0 (spuriousM:7.0 ,  15.9%) | ep_rewards:-0.43 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:51050 | GE:978 | epochs:0.0  | ep_lens:58.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:50.0 (spuriousM:8.0 ,  16.0%) | ep_rewards:-0.49 | mean_Q:-0.31  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:51231 | GE:983 | epochs:0.0  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:5.0 ,  16.7%) | ep_rewards:-0.24 | mean_Q:-0.31  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:51653 | GE:992 | epochs:0.0  | ep_lens:57.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:47.0 (spuriousM:9.0 ,  19.1%) | ep_rewards:-0.54 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:52608 | GE:1010 | epochs:0.0  | ep_lens:89.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:75.0 (spuriousM:11.0,  14.7%) | ep_rewards:-0.80 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:52783 | GE:1013 | epochs:0.0  | ep_lens:30.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.20 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:52942 | GE:1020 | epochs:0.0  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:6.0 ,  23.1%) | ep_rewards:-0.19 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:53109 | GE:1023 | epochs:0.0  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.23  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:53499 | GE:1030 | epochs:0.0  | ep_lens:48.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:40.0 (spuriousM:6.0 ,  15.0%) | ep_rewards:-0.44 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:53781 | GE:1038 | epochs:0.0  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:7.0 ,  18.4%) | ep_rewards:-0.37 | mean_Q:0.05   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:54273 | GE:1048 | epochs:0.0  | ep_lens:67.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:61.0 (spuriousM:16.0,  26.2%) | ep_rewards:-0.49 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:54438 | GE:1049 | epochs:0.0  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:6.0 ,  18.8%) | ep_rewards:-0.28 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:54650 | GE:1055 | epochs:0.0  | ep_lens:31.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:26.0 (spuriousM:7.0 ,  26.9%) | ep_rewards:-0.28 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:54861 | GE:1061 | epochs:0.0  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:11.0,  34.4%) | ep_rewards:-0.28 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:55367 | GE:1074 | epochs:0.0  | ep_lens:66.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:52.0 (spuriousM:14.0,  26.9%) | ep_rewards:-0.68 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:55940 | GE:1086 | epochs:0.0  | ep_lens:50.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.48 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:56384 | GE:1096 | epochs:0.0  | ep_lens:56.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:51.0 (spuriousM:5.0 ,   9.8%) | ep_rewards:-0.41 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:56629 | GE:1102 | epochs:0.0  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:6.0 ,  20.7%) | ep_rewards:-0.24 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:57094 | GE:1113 | epochs:0.0  | ep_lens:53.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:49.0 (spuriousM:9.0 ,  18.4%) | ep_rewards:-0.37 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:57486 | GE:1122 | epochs:0.0  | ep_lens:47.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:45.0 (spuriousM:4.0 ,   8.9%) | ep_rewards:-0.29 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:57945 | GE:1130 | epochs:0.0  | ep_lens:58.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:53.0 (spuriousM:16.0,  30.2%) | ep_rewards:-0.42 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:58212 | GE:1134 | epochs:0.0  | ep_lens:37.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:35.0 (spuriousM:5.0 ,  14.3%) | ep_rewards:-0.24 | mean_Q:-0.29  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:58551 | GE:1141 | epochs:0.0  | ep_lens:57.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:52.0 (spuriousM:17.0,  32.7%) | ep_rewards:-0.41 | mean_Q:-0.31  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:58724 | GE:1145 | epochs:0.0  | ep_lens:28.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:23.0 (spuriousM:3.0 ,  13.0%) | ep_rewards:-0.27 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:58948 | GE:1149 | epochs:0.0  | ep_lens:30.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:25.0 (spuriousM:5.0 ,  20.0%) | ep_rewards:-0.28 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:59072 | GE:1155 | epochs:0.0  | ep_lens:19.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.24  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:59881 | GE:1169 | epochs:0.0  | ep_lens:79.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:69.0 (spuriousM:4.0 ,   5.8%) | ep_rewards:-0.65 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:60280 | GE:1177 | epochs:0.0  | ep_lens:48.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:43.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.37 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:60819 | GE:1189 | epochs:0.0  | ep_lens:59.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:54.0 (spuriousM:5.0 ,   9.3%) | ep_rewards:-0.42 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:61187 | GE:1196 | epochs:0.0  | ep_lens:45.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.28 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:61745 | GE:1204 | epochs:0.0  | ep_lens:65.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:56.0 (spuriousM:5.0 ,   8.9%) | ep_rewards:-0.55 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:62054 | GE:1212 | epochs:0.0  | ep_lens:44.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:40.0 (spuriousM:10.0,  25.0%) | ep_rewards:-0.32 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:62452 | GE:1222 | epochs:0.0  | ep_lens:58.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:48.0 (spuriousM:9.0 ,  18.8%) | ep_rewards:-0.54 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:62805 | GE:1229 | epochs:0.0  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.34 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:63094 | GE:1236 | epochs:0.0  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.26 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:63299 | GE:1240 | epochs:0.0  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:5.0 ,  18.5%) | ep_rewards:-0.26 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:63584 | GE:1245 | epochs:0.0  | ep_lens:52.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:41.0 (spuriousM:8.0 ,  19.5%) | ep_rewards:-0.54 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:64571 | GE:1265 | epochs:0.0  | ep_lens:86.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:69.0 (spuriousM:4.0 ,   5.8%) | ep_rewards:-0.86 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:65510 | GE:1283 | epochs:0.0  | ep_lens:82.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:69.0 (spuriousM:12.0,  17.4%) | ep_rewards:-0.74 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:65950 | GE:1292 | epochs:0.0  | ep_lens:41.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.23 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:66446 | GE:1299 | epochs:0.0  | ep_lens:69.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:61.0 (spuriousM:13.0,  21.3%) | ep_rewards:-0.55 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:66730 | GE:1305 | epochs:0.0  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.27 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:67374 | GE:1316 | epochs:0.0  | ep_lens:76.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:68.0 (spuriousM:12.0,  17.6%) | ep_rewards:-0.58 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:67635 | GE:1323 | epochs:0.0  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.33 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:67937 | GE:1328 | epochs:0.0  | ep_lens:45.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.43 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:68155 | GE:1334 | epochs:0.0  | ep_lens:47.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.34 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:68331 | GE:1337 | epochs:0.0  | ep_lens:32.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:26.0 (spuriousM:7.0 ,  26.9%) | ep_rewards:-0.31 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:68717 | GE:1343 | epochs:0.0  | ep_lens:71.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:55.0 (spuriousM:16.0,  29.1%) | ep_rewards:-0.76 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:68909 | GE:1347 | epochs:0.0  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:7.0 ,  25.0%) | ep_rewards:-0.23 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:69231 | GE:1353 | epochs:0.0  | ep_lens:44.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:41.0 (spuriousM:7.0 ,  17.1%) | ep_rewards:-0.30 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:69390 | GE:1356 | epochs:0.0  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.25 | mean_Q:-0.28  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:70143 | GE:1369 | epochs:0.0  | ep_lens:75.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:65.0 (spuriousM:5.0 ,   7.7%) | ep_rewards:-0.63 | mean_Q:-0.30  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:70512 | GE:1376 | epochs:0.0  | ep_lens:55.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:46.0 (spuriousM:6.0 ,  13.0%) | ep_rewards:-0.50 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:70806 | GE:1383 | epochs:0.0  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.34 | mean_Q:-0.31  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:71585 | GE:1397 | epochs:0.0  | ep_lens:77.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:73.0 (spuriousM:3.0 ,   4.1%) | ep_rewards:-0.49 | mean_Q:-0.31  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:72008 | GE:1404 | epochs:0.0  | ep_lens:52.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:46.0 (spuriousM:3.0 ,   6.5%) | ep_rewards:-0.41 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:72256 | GE:1410 | epochs:0.0  | ep_lens:41.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.41 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:72991 | GE:1423 | epochs:0.0  | ep_lens:74.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:61.0 (spuriousM:8.0 ,  13.1%) | ep_rewards:-0.70 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:73341 | GE:1430 | epochs:0.0  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:6.0 ,  14.3%) | ep_rewards:-0.36 | mean_Q:-0.30  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:73584 | GE:1435 | epochs:0.0  | ep_lens:46.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:38.0 (spuriousM:9.0 ,  23.7%) | ep_rewards:-0.43 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:73836 | GE:1441 | epochs:0.0  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:7.0 ,  18.4%) | ep_rewards:-0.28 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:74477 | GE:1455 | epochs:0.0  | ep_lens:64.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:53.0 (spuriousM:3.0 ,   5.7%) | ep_rewards:-0.60 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:74726 | GE:1460 | epochs:0.0  | ep_lens:45.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:36.0 (spuriousM:6.0 ,  16.7%) | ep_rewards:-0.45 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:75437 | GE:1475 | epochs:0.0  | ep_lens:64.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:59.0 (spuriousM:4.0 ,   6.8%) | ep_rewards:-0.45 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:75652 | GE:1482 | epochs:0.0  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.37 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:76135 | GE:1493 | epochs:0.0  | ep_lens:48.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:46.0 (spuriousM:9.0 ,  19.6%) | ep_rewards:-0.29 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:76864 | GE:1506 | epochs:0.0  | ep_lens:72.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:66.0 (spuriousM:5.0 ,   7.6%) | ep_rewards:-0.51 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:77087 | GE:1513 | epochs:0.0  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.23 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:77667 | GE:1524 | epochs:0.0  | ep_lens:72.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:63.0 (spuriousM:8.0 ,  12.7%) | ep_rewards:-0.59 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:77774 | GE:1528 | epochs:0.0  | ep_lens:10.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:9.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.33  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:78180 | GE:1533 | epochs:0.0  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:5.0 ,  12.2%) | ep_rewards:-0.33 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:78396 | GE:1539 | epochs:0.0  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:10.0,  27.0%) | ep_rewards:-0.31 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:78577 | GE:1544 | epochs:0.0  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:6.0 ,  20.0%) | ep_rewards:-0.24 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:78845 | GE:1549 | epochs:0.0  | ep_lens:45.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:43.0 (spuriousM:5.0 ,  11.6%) | ep_rewards:-0.28 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:79298 | GE:1558 | epochs:0.0  | ep_lens:60.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:52.0 (spuriousM:10.0,  19.2%) | ep_rewards:-0.50 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:79383 | GE:1560 | epochs:0.0  | ep_lens:10.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:9.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.26  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:79757 | GE:1567 | epochs:0.0  | ep_lens:49.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.35 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:80287 | GE:1579 | epochs:0.0  | ep_lens:49.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:45.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.35 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:80407 | GE:1583 | epochs:0.0  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.21  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:80757 | GE:1591 | epochs:0.0  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:8.0 ,  19.0%) | ep_rewards:-0.36 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:81032 | GE:1598 | epochs:0.0  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.33 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:81665 | GE:1610 | epochs:0.0  | ep_lens:58.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:52.0 (spuriousM:5.0 ,   9.6%) | ep_rewards:-0.44 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:82195 | GE:1620 | epochs:0.0  | ep_lens:59.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:50.0 (spuriousM:3.0 ,   6.0%) | ep_rewards:-0.52 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:82251 | GE:1622 | epochs:0.0  | ep_lens:10.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:9.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.27  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:82589 | GE:1629 | epochs:0.0  | ep_lens:49.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:41.0 (spuriousM:5.0 ,  12.2%) | ep_rewards:-0.45 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:83068 | GE:1640 | epochs:0.0  | ep_lens:57.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:54.0 (spuriousM:8.0 ,  14.8%) | ep_rewards:-0.36 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:83366 | GE:1646 | epochs:0.0  | ep_lens:50.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:46.0 (spuriousM:11.0,  23.9%) | ep_rewards:-0.35 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:83466 | GE:1648 | epochs:0.0  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.08  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:83872 | GE:1657 | epochs:0.0  | ep_lens:51.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:47.0 (spuriousM:6.0 ,  12.8%) | ep_rewards:-0.36 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:84157 | GE:1663 | epochs:0.0  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.38 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:84227 | GE:1665 | epochs:0.0  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.13  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:84429 | GE:1668 | epochs:0.0  | ep_lens:38.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.34 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:85322 | GE:1684 | epochs:0.0  | ep_lens:80.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:71.0 (spuriousM:9.0 ,  12.7%) | ep_rewards:-0.63 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:85398 | GE:1688 | epochs:0.0  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.23  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:85583 | GE:1691 | epochs:0.0  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:4.0 ,  16.7%) | ep_rewards:-0.24 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:85936 | GE:1699 | epochs:0.0  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.43 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:86601 | GE:1713 | epochs:0.0  | ep_lens:69.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:58.0 (spuriousM:3.0 ,   5.2%) | ep_rewards:-0.62 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:87170 | GE:1724 | epochs:0.0  | ep_lens:57.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:48.0 (spuriousM:5.0 ,  10.4%) | ep_rewards:-0.51 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:87425 | GE:1729 | epochs:0.0  | ep_lens:47.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:37.0 (spuriousM:9.0 ,  24.3%) | ep_rewards:-0.49 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:88233 | GE:1747 | epochs:0.0  | ep_lens:80.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:69.0 (spuriousM:7.0 ,  10.1%) | ep_rewards:-0.68 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:88521 | GE:1751 | epochs:0.0  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:10.0,  27.0%) | ep_rewards:-0.31 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:88936 | GE:1760 | epochs:0.0  | ep_lens:49.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:41.0 (spuriousM:5.0 ,  12.2%) | ep_rewards:-0.45 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:89767 | GE:1777 | epochs:0.0  | ep_lens:77.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:68.0 (spuriousM:3.0 ,   4.4%) | ep_rewards:-0.61 | mean_Q:-0.29  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:90084 | GE:1786 | epochs:0.0  | ep_lens:47.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:43.0 (spuriousM:7.0 ,  16.3%) | ep_rewards:-0.34 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:90323 | GE:1787 | epochs:0.0  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.34 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:90922 | GE:1799 | epochs:0.0  | ep_lens:76.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:63.0 (spuriousM:2.0 ,   3.2%) | ep_rewards:-0.71 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:91003 | GE:1801 | epochs:0.0  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:91245 | GE:1809 | epochs:0.0  | ep_lens:42.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.46 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:91443 | GE:1812 | epochs:0.0  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.30 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:91706 | GE:1819 | epochs:0.0  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.33 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:92175 | GE:1825 | epochs:0.0  | ep_lens:71.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:58.0 (spuriousM:12.0,  20.7%) | ep_rewards:-0.68 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:92856 | GE:1841 | epochs:0.0  | ep_lens:68.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:59.0 (spuriousM:7.0 ,  11.9%) | ep_rewards:-0.57 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:93123 | GE:1846 | epochs:0.0  | ep_lens:44.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:41.0 (spuriousM:8.0 ,  19.5%) | ep_rewards:-0.30 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:93362 | GE:1852 | epochs:0.0  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.37 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:94241 | GE:1870 | epochs:0.0  | ep_lens:70.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:63.0 (spuriousM:3.0 ,   4.8%) | ep_rewards:-0.53 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:94721 | GE:1880 | epochs:0.0  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.46 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:94838 | GE:1881 | epochs:0.0  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:95008 | GE:1890 | epochs:0.0  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.21  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:95511 | GE:1897 | epochs:0.0  | ep_lens:60.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:55.0 (spuriousM:7.0 ,  12.7%) | ep_rewards:-0.43 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:95972 | GE:1906 | epochs:0.0  | ep_lens:66.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:61.0 (spuriousM:5.0 ,   8.2%) | ep_rewards:-0.46 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:96487 | GE:1914 | epochs:0.0  | ep_lens:59.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:49.0 (spuriousM:6.0 ,  12.2%) | ep_rewards:-0.55 | mean_Q:-0.30  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:96700 | GE:1919 | epochs:0.0  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:11.0,  28.9%) | ep_rewards:-0.31 | mean_Q:-0.33  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:97691 | GE:1938 | epochs:0.0  | ep_lens:73.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:66.0 (spuriousM:5.0 ,   7.6%) | ep_rewards:-0.54 | mean_Q:-0.30  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:97993 | GE:1946 | epochs:0.0  | ep_lens:51.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:45.0 (spuriousM:10.0,  22.2%) | ep_rewards:-0.41 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:98749 | GE:1959 | epochs:0.0  | ep_lens:77.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:66.0 (spuriousM:4.0 ,   6.1%) | ep_rewards:-0.66 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:99188 | GE:1965 | epochs:0.0  | ep_lens:63.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:50.0 (spuriousM:8.0 ,  16.0%) | ep_rewards:-0.64 | mean_Q:-0.29  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:99424 | GE:1970 | epochs:0.0  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.30 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:99884 | GE:1979 | epochs:0.0  | ep_lens:59.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:51.0 (spuriousM:4.0 ,   7.8%) | ep_rewards:-0.50 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:100115 | GE:1983 | epochs:0.0  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.38 | mean_Q:-0.29  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:100306 | GE:1987 | epochs:0.0  | ep_lens:30.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:29.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.82  | mean_Q:-0.29  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:100466 | GE:1991 | epochs:0.0  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:4.0 ,  14.3%) | ep_rewards:-0.23 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:100641 | GE:1995 | epochs:0.0  | ep_lens:17.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.14  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:100834 | GE:1997 | epochs:0.0  | ep_lens:33.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.22 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:101095 | GE:2005 | epochs:0.0  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:10.0,  25.6%) | ep_rewards:-0.29 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:101658 | GE:2014 | epochs:0.0  | ep_lens:69.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:53.0 (spuriousM:6.0 ,  11.3%) | ep_rewards:-0.75 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:102240 | GE:2025 | epochs:0.0  | ep_lens:68.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:59.0 (spuriousM:6.0 ,  10.2%) | ep_rewards:-0.57 | mean_Q:-0.31  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:102619 | GE:2032 | epochs:0.0  | ep_lens:28.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:26.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.31  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:102897 | GE:2037 | epochs:0.0  | ep_lens:36.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.33 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:103345 | GE:2047 | epochs:0.0  | ep_lens:65.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:51.0 (spuriousM:6.0 ,  11.8%) | ep_rewards:-0.68 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:104351 | GE:2067 | epochs:0.0  | ep_lens:90.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:78.0 (spuriousM:10.0,  12.8%) | ep_rewards:-0.75 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:104601 | GE:2073 | epochs:0.0  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:7.0 ,  30.4%) | ep_rewards:-0.18 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:105569 | GE:2095 | epochs:0.0  | ep_lens:86.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:71.0 (spuriousM:9.0 ,  12.7%) | ep_rewards:-0.81 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:105953 | GE:2101 | epochs:0.0  | ep_lens:51.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.46 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:106523 | GE:2115 | epochs:0.0  | ep_lens:63.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:56.0 (spuriousM:11.0,  19.6%) | ep_rewards:-0.49 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:107028 | GE:2122 | epochs:0.0  | ep_lens:83.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:65.0 (spuriousM:8.0 ,  12.3%) | ep_rewards:-0.87 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:107341 | GE:2128 | epochs:0.0  | ep_lens:51.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.51 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:107599 | GE:2133 | epochs:0.0  | ep_lens:42.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:34.0 (spuriousM:13.0,  38.2%) | ep_rewards:-0.41 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:107848 | GE:2137 | epochs:0.0  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:5.0 ,  14.3%) | ep_rewards:-0.36 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:108008 | GE:2140 | epochs:0.0  | ep_lens:36.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.33 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:108189 | GE:2144 | epochs:0.0  | ep_lens:34.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:25.0 (spuriousM:4.0 ,  16.0%) | ep_rewards:-0.40 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:109116 | GE:2163 | epochs:0.0  | ep_lens:80.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:66.0 (spuriousM:4.0 ,   6.1%) | ep_rewards:-0.75 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:109649 | GE:2171 | epochs:0.0  | ep_lens:64.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:54.0 (spuriousM:8.0 ,  14.8%) | ep_rewards:-0.57 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:109953 | GE:2179 | epochs:0.0  | ep_lens:53.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.57 | mean_Q:-0.33  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:110190 | GE:2182 | epochs:0.0  | ep_lens:28.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:27.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.34  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:110665 | GE:2191 | epochs:0.0  | ep_lens:53.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.49 | mean_Q:-0.28  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:110822 | GE:2193 | epochs:0.0  | ep_lens:19.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.24  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:111108 | GE:2201 | epochs:0.0  | ep_lens:50.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:45.0 (spuriousM:14.0,  31.1%) | ep_rewards:-0.38 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:111297 | GE:2203 | epochs:0.0  | ep_lens:34.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.40 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:111522 | GE:2208 | epochs:0.0  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.37 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:112108 | GE:2221 | epochs:0.0  | ep_lens:92.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:77.0 (spuriousM:27.0,  35.1%) | ep_rewards:-0.84 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:112719 | GE:2232 | epochs:0.0  | ep_lens:60.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:56.0 (spuriousM:5.0 ,   8.9%) | ep_rewards:-0.40 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:112891 | GE:2236 | epochs:0.0  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.34 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:113130 | GE:2241 | epochs:0.0  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:5.0 ,  14.3%) | ep_rewards:-0.33 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:113330 | GE:2243 | epochs:0.0  | ep_lens:42.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.56 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:113594 | GE:2249 | epochs:0.0  | ep_lens:47.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:39.0 (spuriousM:7.0 ,  17.9%) | ep_rewards:-0.44 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:113911 | GE:2254 | epochs:0.0  | ep_lens:49.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:42.0 (spuriousM:6.0 ,  14.3%) | ep_rewards:-0.42 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:114568 | GE:2263 | epochs:0.0  | ep_lens:82.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:70.0 (spuriousM:10.0,  14.3%) | ep_rewards:-0.71 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:114918 | GE:2271 | epochs:0.0  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.37 | mean_Q:-0.30  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:115084 | GE:2277 | epochs:0.0  | ep_lens:23.0 | edits:2.0  (spuriousE:1.0 ,  50.0%) | moves:21.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.28  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:115667 | GE:2288 | epochs:0.0  | ep_lens:64.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:57.0 (spuriousM:12.0,  21.1%) | ep_rewards:-0.50 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:116087 | GE:2298 | epochs:0.0  | ep_lens:56.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.56 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:116718 | GE:2309 | epochs:0.0  | ep_lens:65.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:57.0 (spuriousM:6.0 ,  10.5%) | ep_rewards:-0.53 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:117186 | GE:2319 | epochs:0.0  | ep_lens:56.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.56 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:117458 | GE:2326 | epochs:0.0  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:6.0 ,  16.7%) | ep_rewards:-0.39 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:118151 | GE:2336 | epochs:0.0  | ep_lens:90.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:79.0 (spuriousM:24.0,  30.4%) | ep_rewards:-0.73 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:118307 | GE:2339 | epochs:0.0  | ep_lens:29.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.27 | mean_Q:-0.29  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:118740 | GE:2348 | epochs:0.0  | ep_lens:50.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.45 | mean_Q:-0.31  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:119370 | GE:2361 | epochs:0.0  | ep_lens:69.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:61.0 (spuriousM:2.0 ,   3.3%) | ep_rewards:-0.55 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:119561 | GE:2368 | epochs:0.0  | ep_lens:26.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:24.0 (spuriousM:5.0 ,  20.8%) | ep_rewards:-0.18 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:119735 | GE:2371 | epochs:0.0  | ep_lens:24.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.15  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:120308 | GE:2382 | epochs:0.0  | ep_lens:60.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:57.0 (spuriousM:5.0 ,   8.8%) | ep_rewards:-0.38 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:120673 | GE:2388 | epochs:0.0  | ep_lens:43.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:41.0 (spuriousM:8.0 ,  19.5%) | ep_rewards:-0.27 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:121246 | GE:2400 | epochs:0.0  | ep_lens:69.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:59.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.60 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:121354 | GE:2404 | epochs:0.0  | ep_lens:10.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:9.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.23  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:121589 | GE:2410 | epochs:0.0  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.25 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:122019 | GE:2417 | epochs:0.0  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.40 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:122184 | GE:2423 | epochs:0.0  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:6.0 ,  17.6%) | ep_rewards:-0.32 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:122429 | GE:2426 | epochs:0.0  | ep_lens:45.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:38.0 (spuriousM:6.0 ,  15.8%) | ep_rewards:-0.40 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:122621 | GE:2430 | epochs:0.0  | ep_lens:35.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:27.0 (spuriousM:5.0 ,  18.5%) | ep_rewards:-0.38 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:122649 | GE:2433 | epochs:0.0  | ep_lens:5.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:4.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.95  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:123278 | GE:2443 | epochs:0.0  | ep_lens:61.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:53.0 (spuriousM:9.0 ,  17.0%) | ep_rewards:-0.51 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:123448 | GE:2446 | epochs:0.0  | ep_lens:39.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.35 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:123697 | GE:2452 | epochs:0.0  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:5.0 ,  13.9%) | ep_rewards:-0.33 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:124055 | GE:2460 | epochs:0.0  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:6.0 ,  16.7%) | ep_rewards:-0.39 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:124393 | GE:2468 | epochs:0.0  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:9.0 ,  25.0%) | ep_rewards:-0.33 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:125117 | GE:2479 | epochs:0.0  | ep_lens:63.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:57.0 (spuriousM:6.0 ,  10.5%) | ep_rewards:-0.47 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:125280 | GE:2483 | epochs:0.0  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.33  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:125773 | GE:2496 | epochs:0.0  | ep_lens:54.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.55 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:125964 | GE:2500 | epochs:0.0  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.25 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:126092 | GE:2503 | epochs:0.0  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:127172 | GE:2521 | epochs:0.0  | ep_lens:96.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:89.0 (spuriousM:8.0 ,   9.0%) | ep_rewards:-0.66 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:127257 | GE:2524 | epochs:0.0  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:127811 | GE:2533 | epochs:0.0  | ep_lens:58.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:51.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.47 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:128284 | GE:2542 | epochs:0.0  | ep_lens:57.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:51.0 (spuriousM:2.0 ,   3.9%) | ep_rewards:-0.44 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:128561 | GE:2546 | epochs:0.0  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.28 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:128883 | GE:2554 | epochs:0.0  | ep_lens:53.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:48.0 (spuriousM:12.0,  25.0%) | ep_rewards:-0.39 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:128980 | GE:2556 | epochs:0.0  | ep_lens:22.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:21.0 (spuriousM:6.0 ,  28.6%) | ep_rewards:-0.14 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:129410 | GE:2564 | epochs:0.0  | ep_lens:64.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:52.0 (spuriousM:7.0 ,  13.5%) | ep_rewards:-0.62 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:129585 | GE:2571 | epochs:0.0  | ep_lens:32.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:27.0 (spuriousM:7.0 ,  25.9%) | ep_rewards:-0.29 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:130106 | GE:2580 | epochs:0.0  | ep_lens:67.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:60.0 (spuriousM:7.0 ,  11.7%) | ep_rewards:-0.51 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:131008 | GE:2595 | epochs:0.0  | ep_lens:88.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:77.0 (spuriousM:7.0 ,   9.1%) | ep_rewards:-0.72 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:132045 | GE:2614 | epochs:0.0  | ep_lens:97.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:81.0 (spuriousM:11.0,  13.6%) | ep_rewards:-0.89 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:132230 | GE:2619 | epochs:0.0  | ep_lens:27.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:21.0 (spuriousM:5.0 ,  23.8%) | ep_rewards:-0.29 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:132822 | GE:2631 | epochs:0.0  | ep_lens:74.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:68.0 (spuriousM:6.0 ,   8.8%) | ep_rewards:-0.52 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:133062 | GE:2636 | epochs:0.0  | ep_lens:36.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:27.0 (spuriousM:4.0 ,  14.8%) | ep_rewards:-0.41 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:133169 | GE:2640 | epochs:0.0  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:133606 | GE:2651 | epochs:0.0  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:4.0 ,  10.0%) | ep_rewards:-0.35 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:133882 | GE:2656 | epochs:0.0  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:9.0 ,  23.7%) | ep_rewards:-0.28 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:134307 | GE:2664 | epochs:0.0  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:4.0 ,   8.0%) | ep_rewards:-0.46 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:134770 | GE:2675 | epochs:0.0  | ep_lens:50.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:46.0 (spuriousM:5.0 ,  10.9%) | ep_rewards:-0.35 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:135111 | GE:2684 | epochs:0.0  | ep_lens:50.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:42.0 (spuriousM:5.0 ,  11.9%) | ep_rewards:-0.45 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:135603 | GE:2694 | epochs:0.0  | ep_lens:53.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:49.0 (spuriousM:8.0 ,  16.3%) | ep_rewards:-0.37 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:136423 | GE:2709 | epochs:0.0  | ep_lens:79.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:69.0 (spuriousM:10.0,  14.5%) | ep_rewards:-0.65 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:136964 | GE:2721 | epochs:0.0  | ep_lens:54.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:49.0 (spuriousM:5.0 ,  10.2%) | ep_rewards:-0.40 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:137181 | GE:2727 | epochs:0.0  | ep_lens:47.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:35.0 (spuriousM:10.0,  28.6%) | ep_rewards:-0.54 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:137626 | GE:2737 | epochs:0.0  | ep_lens:54.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.50 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:138012 | GE:2744 | epochs:0.0  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:6.0 ,  13.6%) | ep_rewards:-0.40 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:138369 | GE:2751 | epochs:0.0  | ep_lens:59.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:47.0 (spuriousM:10.0,  21.3%) | ep_rewards:-0.60 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:138782 | GE:2760 | epochs:0.0  | ep_lens:53.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:46.0 (spuriousM:7.0 ,  15.2%) | ep_rewards:-0.44 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:138972 | GE:2764 | epochs:0.0  | ep_lens:39.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.40 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:139287 | GE:2770 | epochs:0.0  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.36 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:139717 | GE:2778 | epochs:0.0  | ep_lens:62.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:56.0 (spuriousM:14.0,  25.0%) | ep_rewards:-0.46 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:140566 | GE:2793 | epochs:0.0  | ep_lens:85.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:75.0 (spuriousM:11.0,  14.7%) | ep_rewards:-0.68 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:141151 | GE:2806 | epochs:0.0  | ep_lens:54.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.50 | mean_Q:-0.28  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:141324 | GE:2809 | epochs:0.0  | ep_lens:35.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:27.0 (spuriousM:5.0 ,  18.5%) | ep_rewards:-0.38 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:141470 | GE:2811 | epochs:0.0  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.29  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:142075 | GE:2825 | epochs:0.0  | ep_lens:74.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:58.0 (spuriousM:6.0 ,  10.3%) | ep_rewards:-0.77 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:142335 | GE:2830 | epochs:0.0  | ep_lens:37.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.31 | mean_Q:-0.28  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:142725 | GE:2835 | epochs:0.0  | ep_lens:63.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:54.0 (spuriousM:6.0 ,  11.1%) | ep_rewards:-0.54 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:142957 | GE:2840 | epochs:0.0  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.33 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:143217 | GE:2846 | epochs:0.0  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:7.0 ,  17.9%) | ep_rewards:-0.35 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:143830 | GE:2857 | epochs:0.0  | ep_lens:70.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:62.0 (spuriousM:2.0 ,   3.2%) | ep_rewards:-0.55 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:144308 | GE:2867 | epochs:0.0  | ep_lens:59.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:50.0 (spuriousM:5.0 ,  10.0%) | ep_rewards:-0.52 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:144655 | GE:2873 | epochs:0.0  | ep_lens:58.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:51.0 (spuriousM:11.0,  21.6%) | ep_rewards:-0.47 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:145015 | GE:2879 | epochs:0.0  | ep_lens:47.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:38.0 (spuriousM:7.0 ,  18.4%) | ep_rewards:-0.46 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:145266 | GE:2884 | epochs:0.0  | ep_lens:47.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:36.0 (spuriousM:7.0 ,  19.4%) | ep_rewards:-0.51 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:145763 | GE:2892 | epochs:0.0  | ep_lens:53.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:51.0 (spuriousM:4.0 ,   7.8%) | ep_rewards:-0.32 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:145992 | GE:2897 | epochs:0.0  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:6.0 ,  16.7%) | ep_rewards:-0.39 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:146500 | GE:2906 | epochs:0.0  | ep_lens:62.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:53.0 (spuriousM:3.0 ,   5.7%) | ep_rewards:-0.54 | mean_Q:-0.33  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:147285 | GE:2916 | epochs:0.0  | ep_lens:100.0 | edits:48.0 (spuriousE:48.0, 100.0%) | moves:52.0 (spuriousM:4.0 ,   7.7%) | ep_rewards:-1.70 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:147538 | GE:2920 | epochs:0.0  | ep_lens:33.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.37 | mean_Q:0.19   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:147848 | GE:2927 | epochs:0.0  | ep_lens:49.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.47 | mean_Q:-0.39  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:147952 | GE:2928 | epochs:0.0  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.43  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:148335 | GE:2935 | epochs:0.0  | ep_lens:60.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:51.0 (spuriousM:9.0 ,  17.6%) | ep_rewards:-0.53 | mean_Q:-0.37  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:148504 | GE:2938 | epochs:0.0  | ep_lens:38.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:32.0 (spuriousM:7.0 ,  21.9%) | ep_rewards:-0.34 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:148946 | GE:2947 | epochs:0.0  | ep_lens:52.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:45.0 (spuriousM:10.0,  22.2%) | ep_rewards:-0.44 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:149555 | GE:2960 | epochs:0.0  | ep_lens:69.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:63.0 (spuriousM:7.0 ,  11.1%) | ep_rewards:-0.50 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:150019 | GE:2967 | epochs:0.0  | ep_lens:67.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:56.0 (spuriousM:6.0 ,  10.7%) | ep_rewards:-0.61 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:150248 | GE:2969 | epochs:0.0  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.31 | mean_Q:-0.32  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:150669 | GE:2978 | epochs:0.0  | ep_lens:61.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:52.0 (spuriousM:4.0 ,   7.7%) | ep_rewards:-0.53 | mean_Q:-0.35  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:151375 | GE:2993 | epochs:0.0  | ep_lens:70.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:61.0 (spuriousM:3.0 ,   4.9%) | ep_rewards:-0.58 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:151834 | GE:3001 | epochs:0.0  | ep_lens:55.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:48.0 (spuriousM:6.0 ,  12.5%) | ep_rewards:-0.45 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:152012 | GE:3005 | epochs:0.0  | ep_lens:30.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:28.0 (spuriousM:4.0 ,  14.3%) | ep_rewards:-0.20 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:152473 | GE:3013 | epochs:0.0  | ep_lens:60.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.65 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:152716 | GE:3018 | epochs:0.0  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:8.0 ,  21.6%) | ep_rewards:-0.31 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:152836 | GE:3022 | epochs:0.0  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.30  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:153192 | GE:3030 | epochs:0.1  | ep_lens:56.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:49.0 (spuriousM:6.0 ,  12.2%) | ep_rewards:-0.46 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:153389 | GE:3035 | epochs:0.1  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:153751 | GE:3045 | epochs:0.1  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.37 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:154060 | GE:3050 | epochs:0.1  | ep_lens:45.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:42.0 (spuriousM:4.0 ,   9.5%) | ep_rewards:-0.30 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:154624 | GE:3061 | epochs:0.1  | ep_lens:72.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:65.0 (spuriousM:12.0,  18.5%) | ep_rewards:-0.54 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:154850 | GE:3069 | epochs:0.1  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:6.0 ,  20.0%) | ep_rewards:-0.30 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:155385 | GE:3078 | epochs:0.1  | ep_lens:81.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:65.0 (spuriousM:18.0,  27.7%) | ep_rewards:-0.81 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:155875 | GE:3088 | epochs:0.1  | ep_lens:64.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:56.0 (spuriousM:6.0 ,  10.7%) | ep_rewards:-0.52 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:156025 | GE:3091 | epochs:0.1  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:156274 | GE:3096 | epochs:0.1  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.37 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:156507 | GE:3101 | epochs:0.1  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:8.0 ,  23.5%) | ep_rewards:-0.38 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:156736 | GE:3106 | epochs:0.1  | ep_lens:47.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:36.0 (spuriousM:9.0 ,  25.0%) | ep_rewards:-0.51 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:157425 | GE:3121 | epochs:0.1  | ep_lens:73.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:68.0 (spuriousM:6.0 ,   8.8%) | ep_rewards:-0.49 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:158325 | GE:3138 | epochs:0.1  | ep_lens:92.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:81.0 (spuriousM:6.0 ,   7.4%) | ep_rewards:-0.74 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:158593 | GE:3145 | epochs:0.1  | ep_lens:30.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:29.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.82  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:158758 | GE:3148 | epochs:0.1  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.20 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:159247 | GE:3159 | epochs:0.1  | ep_lens:58.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:49.0 (spuriousM:7.0 ,  14.3%) | ep_rewards:-0.52 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:159430 | GE:3162 | epochs:0.1  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.26 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:159645 | GE:3164 | epochs:0.1  | ep_lens:31.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:30.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.82  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:159876 | GE:3170 | epochs:0.1  | ep_lens:40.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:34.0 (spuriousM:6.0 ,  17.6%) | ep_rewards:-0.35 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:159934 | GE:3171 | epochs:0.1  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:160042 | GE:3174 | epochs:0.1  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:160296 | GE:3180 | epochs:0.1  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.29 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:160684 | GE:3187 | epochs:0.1  | ep_lens:31.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:30.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.82  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:161099 | GE:3199 | epochs:0.1  | ep_lens:45.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:34.0 (spuriousM:7.0 ,  20.6%) | ep_rewards:-0.50 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:161320 | GE:3204 | epochs:0.1  | ep_lens:39.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:35.0 (spuriousM:7.0 ,  20.0%) | ep_rewards:-0.30 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:162039 | GE:3217 | epochs:0.1  | ep_lens:63.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:61.0 (spuriousM:5.0 ,   8.2%) | ep_rewards:-0.37 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:162325 | GE:3225 | epochs:0.1  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.26  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:163050 | GE:3240 | epochs:0.1  | ep_lens:72.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:60.0 (spuriousM:8.0 ,  13.3%) | ep_rewards:-0.66 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:163483 | GE:3248 | epochs:0.1  | ep_lens:54.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.47 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:163745 | GE:3254 | epochs:0.1  | ep_lens:35.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.20 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:164225 | GE:3260 | epochs:0.1  | ep_lens:60.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:49.0 (spuriousM:7.0 ,  14.3%) | ep_rewards:-0.58 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:164473 | GE:3268 | epochs:0.1  | ep_lens:40.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:39.0 (spuriousM:5.0 ,  12.8%) | ep_rewards:-0.23 | mean_Q:-0.30  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:164686 | GE:3272 | epochs:0.1  | ep_lens:39.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:35.0 (spuriousM:6.0 ,  17.1%) | ep_rewards:-0.30 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:165127 | GE:3281 | epochs:0.1  | ep_lens:46.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.41 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:165639 | GE:3291 | epochs:0.1  | ep_lens:59.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:55.0 (spuriousM:7.0 ,  12.7%) | ep_rewards:-0.40 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:166005 | GE:3300 | epochs:0.1  | ep_lens:50.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:46.0 (spuriousM:9.0 ,  19.6%) | ep_rewards:-0.35 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:167042 | GE:3323 | epochs:0.1  | ep_lens:100.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:82.0 (spuriousM:19.0,  23.2%) | ep_rewards:-0.95 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:167253 | GE:3326 | epochs:0.1  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.25 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:167905 | GE:3338 | epochs:0.1  | ep_lens:66.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:60.0 (spuriousM:15.0,  25.0%) | ep_rewards:-0.48 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:168154 | GE:3345 | epochs:0.1  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:6.0 ,  18.2%) | ep_rewards:-0.29 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:168627 | GE:3355 | epochs:0.1  | ep_lens:53.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:44.0 (spuriousM:6.0 ,  13.6%) | ep_rewards:-0.49 | mean_Q:-0.29  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:168860 | GE:3361 | epochs:0.1  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.24 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:169028 | GE:3365 | epochs:0.1  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:5.0 ,  17.2%) | ep_rewards:-0.24 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:169296 | GE:3371 | epochs:0.1  | ep_lens:38.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.34 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:170094 | GE:3386 | epochs:0.1  | ep_lens:82.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:77.0 (spuriousM:13.0,  16.9%) | ep_rewards:-0.54 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:170407 | GE:3393 | epochs:0.1  | ep_lens:42.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.54 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:170743 | GE:3401 | epochs:0.1  | ep_lens:46.0 | edits:6.0  (spuriousE:5.0 ,  83.3%) | moves:40.0 (spuriousM:4.0 ,  10.0%) | ep_rewards:-0.34 | mean_Q:-0.22  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:171105 | GE:3411 | epochs:0.1  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.37 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:171291 | GE:3413 | epochs:0.1  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.23 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:171631 | GE:3420 | epochs:0.1  | ep_lens:51.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:45.0 (spuriousM:5.0 ,  11.1%) | ep_rewards:-0.41 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:171844 | GE:3428 | epochs:0.1  | ep_lens:47.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:37.0 (spuriousM:13.0,  35.1%) | ep_rewards:-0.49 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:172516 | GE:3441 | epochs:0.1  | ep_lens:57.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:52.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.41 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:172760 | GE:3448 | epochs:0.1  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.32 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:173067 | GE:3455 | epochs:0.1  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:7.0 ,  18.9%) | ep_rewards:-0.31 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:173283 | GE:3461 | epochs:0.1  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:6.0 ,  20.7%) | ep_rewards:-0.27 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:173827 | GE:3472 | epochs:0.1  | ep_lens:52.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:48.0 (spuriousM:8.0 ,  16.7%) | ep_rewards:-0.36 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:174097 | GE:3478 | epochs:0.1  | ep_lens:39.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.40 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:174481 | GE:3487 | epochs:0.1  | ep_lens:50.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:47.0 (spuriousM:8.0 ,  17.0%) | ep_rewards:-0.33 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:174669 | GE:3490 | epochs:0.1  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:7.0 ,  24.1%) | ep_rewards:-0.33 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:175117 | GE:3501 | epochs:0.1  | ep_lens:52.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:45.0 (spuriousM:4.0 ,   8.9%) | ep_rewards:-0.44 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:175255 | GE:3504 | epochs:0.1  | ep_lens:29.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.27 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:175675 | GE:3512 | epochs:0.1  | ep_lens:57.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:51.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.44 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:175997 | GE:3521 | epochs:0.1  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.31 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:176277 | GE:3528 | epochs:0.1  | ep_lens:37.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:32.0 (spuriousM:8.0 ,  25.0%) | ep_rewards:-0.31 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:176805 | GE:3537 | epochs:0.1  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:8.0 ,  16.0%) | ep_rewards:-0.46 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:177203 | GE:3545 | epochs:0.1  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.33 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:177338 | GE:3548 | epochs:0.1  | ep_lens:29.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:23.0 (spuriousM:3.0 ,  13.0%) | ep_rewards:-0.30 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:177504 | GE:3553 | epochs:0.1  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:10.0,  33.3%) | ep_rewards:-0.21 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:177772 | GE:3558 | epochs:0.1  | ep_lens:45.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:38.0 (spuriousM:9.0 ,  23.7%) | ep_rewards:-0.40 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:178427 | GE:3573 | epochs:0.1  | ep_lens:70.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:65.0 (spuriousM:10.0,  15.4%) | ep_rewards:-0.48 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:178676 | GE:3578 | epochs:0.1  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:8.0 ,  25.0%) | ep_rewards:-0.37 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:179182 | GE:3587 | epochs:0.1  | ep_lens:69.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:54.0 (spuriousM:4.0 ,   7.4%) | ep_rewards:-0.72 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:179654 | GE:3599 | epochs:0.1  | ep_lens:49.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:43.0 (spuriousM:8.0 ,  18.6%) | ep_rewards:-0.40 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:179865 | GE:3604 | epochs:0.1  | ep_lens:48.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:39.0 (spuriousM:8.0 ,  20.5%) | ep_rewards:-0.47 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:180297 | GE:3612 | epochs:0.1  | ep_lens:55.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:47.0 (spuriousM:8.0 ,  17.0%) | ep_rewards:-0.48 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:180425 | GE:3613 | epochs:0.1  | ep_lens:32.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:27.0 (spuriousM:6.0 ,  22.2%) | ep_rewards:-0.29 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:181229 | GE:3631 | epochs:0.1  | ep_lens:74.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:66.0 (spuriousM:10.0,  15.2%) | ep_rewards:-0.57 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:181777 | GE:3643 | epochs:0.1  | ep_lens:62.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:54.0 (spuriousM:9.0 ,  16.7%) | ep_rewards:-0.51 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:182203 | GE:3653 | epochs:0.1  | ep_lens:54.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:49.0 (spuriousM:8.0 ,  16.3%) | ep_rewards:-0.40 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:182391 | GE:3655 | epochs:0.1  | ep_lens:40.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:40.0 (spuriousM:7.0 ,  17.5%) | ep_rewards:-0.20 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:182580 | GE:3660 | epochs:0.1  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:5.0 ,  20.0%) | ep_rewards:-0.19 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:183304 | GE:3678 | epochs:0.1  | ep_lens:73.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:68.0 (spuriousM:11.0,  16.2%) | ep_rewards:-0.49 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:183771 | GE:3683 | epochs:0.1  | ep_lens:56.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:49.0 (spuriousM:3.0 ,   6.1%) | ep_rewards:-0.46 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:184199 | GE:3698 | epochs:0.1  | ep_lens:51.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:47.0 (spuriousM:5.0 ,  10.6%) | ep_rewards:-0.36 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:184438 | GE:3704 | epochs:0.1  | ep_lens:36.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.21 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:184870 | GE:3710 | epochs:0.1  | ep_lens:56.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:48.0 (spuriousM:8.0 ,  16.7%) | ep_rewards:-0.48 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:185176 | GE:3716 | epochs:0.1  | ep_lens:53.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:48.0 (spuriousM:7.0 ,  14.6%) | ep_rewards:-0.39 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:185551 | GE:3722 | epochs:0.1  | ep_lens:50.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.35 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:186103 | GE:3737 | epochs:0.1  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.40 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:186404 | GE:3744 | epochs:0.1  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:7.0 ,  19.4%) | ep_rewards:-0.39 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:186739 | GE:3754 | epochs:0.1  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:10.0,  25.0%) | ep_rewards:-0.35 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:187165 | GE:3763 | epochs:0.1  | ep_lens:48.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.32 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:187540 | GE:3769 | epochs:0.1  | ep_lens:47.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:45.0 (spuriousM:13.0,  28.9%) | ep_rewards:-0.29 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:188445 | GE:3788 | epochs:0.1  | ep_lens:82.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:75.0 (spuriousM:18.0,  24.0%) | ep_rewards:-0.59 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:188619 | GE:3791 | epochs:0.1  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:4.0 ,  14.8%) | ep_rewards:-0.26 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:188925 | GE:3798 | epochs:0.1  | ep_lens:51.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:45.0 (spuriousM:14.0,  31.1%) | ep_rewards:-0.41 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:189116 | GE:3801 | epochs:0.1  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:5.0 ,  20.0%) | ep_rewards:-0.22 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:189360 | GE:3806 | epochs:0.1  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:7.0 ,  22.6%) | ep_rewards:-0.34 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:189560 | GE:3809 | epochs:0.1  | ep_lens:35.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:28.0 (spuriousM:4.0 ,  14.3%) | ep_rewards:-0.35 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:189865 | GE:3820 | epochs:0.1  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:6.0 ,  15.8%) | ep_rewards:-0.31 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:190264 | GE:3826 | epochs:0.1  | ep_lens:52.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:47.0 (spuriousM:8.0 ,  17.0%) | ep_rewards:-0.39 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:190496 | GE:3832 | epochs:0.1  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.27 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:190989 | GE:3845 | epochs:0.1  | ep_lens:60.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:53.0 (spuriousM:8.0 ,  15.1%) | ep_rewards:-0.48 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:191142 | GE:3848 | epochs:0.1  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:191442 | GE:3854 | epochs:0.1  | ep_lens:37.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:36.0 (spuriousM:5.0 ,  13.9%) | ep_rewards:-0.21 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:191733 | GE:3858 | epochs:0.1  | ep_lens:48.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:41.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.42 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:192090 | GE:3869 | epochs:0.1  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.39 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:192387 | GE:3874 | epochs:0.1  | ep_lens:46.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.28 | mean_Q:0.01   | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:192541 | GE:3879 | epochs:0.1  | ep_lens:35.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:28.0 (spuriousM:8.0 ,  28.6%) | ep_rewards:-0.35 | mean_Q:0.04   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:193070 | GE:3891 | epochs:0.1  | ep_lens:54.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:49.0 (spuriousM:8.0 ,  16.3%) | ep_rewards:-0.40 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:193533 | GE:3903 | epochs:0.1  | ep_lens:47.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:45.0 (spuriousM:4.0 ,   8.9%) | ep_rewards:-0.29 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:193651 | GE:3907 | epochs:0.1  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.17  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:193918 | GE:3914 | epochs:0.1  | ep_lens:27.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:23.0 (spuriousM:4.0 ,  17.4%) | ep_rewards:-0.24 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:194737 | GE:3930 | epochs:0.1  | ep_lens:81.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:76.0 (spuriousM:20.0,  26.3%) | ep_rewards:-0.53 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:195023 | GE:3937 | epochs:0.1  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.29 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:195611 | GE:3951 | epochs:0.1  | ep_lens:55.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:47.0 (spuriousM:6.0 ,  12.8%) | ep_rewards:-0.48 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:195920 | GE:3957 | epochs:0.1  | ep_lens:28.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:27.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.25  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:196438 | GE:3968 | epochs:0.1  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:7.0 ,  16.3%) | ep_rewards:-0.43 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:196981 | GE:3981 | epochs:0.1  | ep_lens:67.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:59.0 (spuriousM:16.0,  27.1%) | ep_rewards:-0.54 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:197270 | GE:3987 | epochs:0.1  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.37 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:197499 | GE:3991 | epochs:0.1  | ep_lens:51.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:41.0 (spuriousM:10.0,  24.4%) | ep_rewards:-0.51 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:197854 | GE:3998 | epochs:0.1  | ep_lens:47.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:41.0 (spuriousM:9.0 ,  22.0%) | ep_rewards:-0.39 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:198132 | GE:4004 | epochs:0.1  | ep_lens:48.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:46.0 (spuriousM:13.0,  28.3%) | ep_rewards:-0.29 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:198394 | GE:4013 | epochs:0.1  | ep_lens:40.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.40 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:198904 | GE:4026 | epochs:0.1  | ep_lens:54.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:46.0 (spuriousM:3.0 ,   6.5%) | ep_rewards:-0.47 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:199228 | GE:4034 | epochs:0.1  | ep_lens:39.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:38.0 (spuriousM:8.0 ,  21.1%) | ep_rewards:-0.22 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:199663 | GE:4043 | epochs:0.1  | ep_lens:64.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:55.0 (spuriousM:3.0 ,   5.5%) | ep_rewards:-0.55 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:199856 | GE:4046 | epochs:0.1  | ep_lens:27.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.29 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:200244 | GE:4052 | epochs:0.1  | ep_lens:49.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:47.0 (spuriousM:7.0 ,  14.9%) | ep_rewards:-0.30 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:200790 | GE:4065 | epochs:0.1  | ep_lens:60.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:54.0 (spuriousM:7.0 ,  13.0%) | ep_rewards:-0.45 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:201228 | GE:4073 | epochs:0.1  | ep_lens:58.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:55.0 (spuriousM:9.0 ,  16.4%) | ep_rewards:-0.37 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:201561 | GE:4080 | epochs:0.1  | ep_lens:45.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.43 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:201957 | GE:4085 | epochs:0.1  | ep_lens:60.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:52.0 (spuriousM:8.0 ,  15.4%) | ep_rewards:-0.50 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:202467 | GE:4096 | epochs:0.1  | ep_lens:62.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:54.0 (spuriousM:10.0,  18.5%) | ep_rewards:-0.51 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:203077 | GE:4107 | epochs:0.1  | ep_lens:53.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:51.0 (spuriousM:3.0 ,   5.9%) | ep_rewards:-0.32 | mean_Q:-0.34  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:203148 | GE:4109 | epochs:0.1  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.29  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:204006 | GE:4124 | epochs:0.1  | ep_lens:79.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:66.0 (spuriousM:6.0 ,   9.1%) | ep_rewards:-0.72 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:204273 | GE:4131 | epochs:0.1  | ep_lens:50.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:39.0 (spuriousM:13.0,  33.3%) | ep_rewards:-0.53 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:204907 | GE:4141 | epochs:0.1  | ep_lens:67.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:61.0 (spuriousM:7.0 ,  11.5%) | ep_rewards:-0.49 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:205168 | GE:4145 | epochs:0.1  | ep_lens:45.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:36.0 (spuriousM:9.0 ,  25.0%) | ep_rewards:-0.45 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:205361 | GE:4150 | epochs:0.1  | ep_lens:32.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.26 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:205681 | GE:4157 | epochs:0.1  | ep_lens:45.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.28 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:206018 | GE:4163 | epochs:0.1  | ep_lens:47.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:40.0 (spuriousM:12.0,  30.0%) | ep_rewards:-0.41 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:206509 | GE:4173 | epochs:0.1  | ep_lens:55.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:49.0 (spuriousM:2.0 ,   4.1%) | ep_rewards:-0.43 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:206963 | GE:4182 | epochs:0.1  | ep_lens:52.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:45.0 (spuriousM:5.0 ,  11.1%) | ep_rewards:-0.44 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:207241 | GE:4188 | epochs:0.1  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:9.0 ,  23.7%) | ep_rewards:-0.31 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:207792 | GE:4197 | epochs:0.1  | ep_lens:60.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.55 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:208247 | GE:4207 | epochs:0.1  | ep_lens:55.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:46.0 (spuriousM:8.0 ,  17.4%) | ep_rewards:-0.50 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:208496 | GE:4214 | epochs:0.1  | ep_lens:45.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.43 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:208680 | GE:4219 | epochs:0.1  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:4.0 ,  13.8%) | ep_rewards:-0.30 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:209189 | GE:4228 | epochs:0.1  | ep_lens:57.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:53.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.39 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:209320 | GE:4235 | epochs:0.1  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:209601 | GE:4242 | epochs:0.1  | ep_lens:46.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:39.0 (spuriousM:6.0 ,  15.4%) | ep_rewards:-0.41 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:209920 | GE:4248 | epochs:0.1  | ep_lens:47.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.39 | mean_Q:0.01   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:210338 | GE:4257 | epochs:0.1  | ep_lens:51.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:47.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.36 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:210838 | GE:4265 | epochs:0.1  | ep_lens:63.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:54.0 (spuriousM:7.0 ,  13.0%) | ep_rewards:-0.54 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:211186 | GE:4271 | epochs:0.1  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.36 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:211481 | GE:4279 | epochs:0.1  | ep_lens:48.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.34 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:211678 | GE:4281 | epochs:0.1  | ep_lens:24.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.28  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:211831 | GE:4288 | epochs:0.1  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.23  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:211999 | GE:4294 | epochs:0.1  | ep_lens:22.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.21  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:212503 | GE:4303 | epochs:0.1  | ep_lens:58.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:51.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.47 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:212707 | GE:4307 | epochs:0.1  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.31 | mean_Q:0.03   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:212974 | GE:4310 | epochs:0.1  | ep_lens:40.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:37.0 (spuriousM:5.0 ,  13.5%) | ep_rewards:-0.28 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:213382 | GE:4321 | epochs:0.1  | ep_lens:62.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:52.0 (spuriousM:9.0 ,  17.3%) | ep_rewards:-0.56 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:213723 | GE:4328 | epochs:0.1  | ep_lens:55.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:49.0 (spuriousM:9.0 ,  18.4%) | ep_rewards:-0.43 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:214132 | GE:4336 | epochs:0.1  | ep_lens:70.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:58.0 (spuriousM:12.0,  20.7%) | ep_rewards:-0.65 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:214396 | GE:4342 | epochs:0.1  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.30 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:214632 | GE:4348 | epochs:0.1  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:5.0 ,  14.7%) | ep_rewards:-0.26 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:214889 | GE:4352 | epochs:0.1  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.30 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:215018 | GE:4355 | epochs:0.1  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.26  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:215416 | GE:4362 | epochs:0.1  | ep_lens:52.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:49.0 (spuriousM:8.0 ,  16.3%) | ep_rewards:-0.34 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:215681 | GE:4366 | epochs:0.1  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:7.0 ,  18.9%) | ep_rewards:-0.31 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:215905 | GE:4373 | epochs:0.1  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:6.0 ,  14.3%) | ep_rewards:-0.33 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:216364 | GE:4385 | epochs:0.1  | ep_lens:54.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:47.0 (spuriousM:5.0 ,  10.6%) | ep_rewards:-0.45 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:216743 | GE:4390 | epochs:0.1  | ep_lens:56.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:52.0 (spuriousM:15.0,  28.8%) | ep_rewards:-0.38 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:217562 | GE:4406 | epochs:0.1  | ep_lens:66.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:60.0 (spuriousM:4.0 ,   6.7%) | ep_rewards:-0.48 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:217615 | GE:4409 | epochs:0.1  | ep_lens:12.0 | edits:5.0  (spuriousE:4.0 ,  80.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.81  | mean_Q:-0.21  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:217929 | GE:4415 | epochs:0.1  | ep_lens:28.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:27.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.21  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:218471 | GE:4428 | epochs:0.1  | ep_lens:57.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:48.0 (spuriousM:5.0 ,  10.4%) | ep_rewards:-0.51 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:218907 | GE:4435 | epochs:0.1  | ep_lens:55.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:50.0 (spuriousM:3.0 ,   6.0%) | ep_rewards:-0.40 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:219413 | GE:4445 | epochs:0.1  | ep_lens:52.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:50.0 (spuriousM:11.0,  22.0%) | ep_rewards:-0.31 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:219562 | GE:4450 | epochs:0.1  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:6.0 ,  21.4%) | ep_rewards:-0.23 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:219755 | GE:4453 | epochs:0.1  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:8.0 ,  23.5%) | ep_rewards:-0.32 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:219885 | GE:4457 | epochs:0.1  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.26  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:220328 | GE:4466 | epochs:0.1  | ep_lens:51.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:48.0 (spuriousM:8.0 ,  16.7%) | ep_rewards:-0.33 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:220699 | GE:4474 | epochs:0.1  | ep_lens:47.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:40.0 (spuriousM:7.0 ,  17.5%) | ep_rewards:-0.41 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:220971 | GE:4478 | epochs:0.1  | ep_lens:41.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.41 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:221198 | GE:4484 | epochs:0.1  | ep_lens:50.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:42.0 (spuriousM:8.0 ,  19.0%) | ep_rewards:-0.45 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:221453 | GE:4489 | epochs:0.1  | ep_lens:42.0 | edits:4.0  (spuriousE:3.0 ,  75.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:0.69  | mean_Q:-0.20  | Errs:2  | Fixes:2  (100.0%) | TF:No 
TRAIN || T:221599 | GE:4491 | epochs:0.1  | ep_lens:26.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.21 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:221750 | GE:4496 | epochs:0.1  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:6.0 ,  23.1%) | ep_rewards:-0.25 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:222738 | GE:4517 | epochs:0.1  | ep_lens:89.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:82.0 (spuriousM:3.0 ,   3.7%) | ep_rewards:-0.62 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:222800 | GE:4519 | epochs:0.1  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:223074 | GE:4522 | epochs:0.1  | ep_lens:35.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:35.0 (spuriousM:7.0 ,  20.0%) | ep_rewards:-0.18 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:223581 | GE:4535 | epochs:0.1  | ep_lens:53.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:47.0 (spuriousM:6.0 ,  12.8%) | ep_rewards:-0.42 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:223852 | GE:4541 | epochs:0.1  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:4.0 ,  11.8%) | ep_rewards:-0.29 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:224077 | GE:4545 | epochs:0.1  | ep_lens:31.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.21 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:224367 | GE:4551 | epochs:0.1  | ep_lens:43.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.32 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:225016 | GE:4565 | epochs:0.1  | ep_lens:74.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:65.0 (spuriousM:12.0,  18.5%) | ep_rewards:-0.60 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:225626 | GE:4577 | epochs:0.1  | ep_lens:70.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:60.0 (spuriousM:5.0 ,   8.3%) | ep_rewards:-0.60 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:225838 | GE:4582 | epochs:0.1  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.29 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:226409 | GE:4598 | epochs:0.1  | ep_lens:51.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:48.0 (spuriousM:3.0 ,   6.2%) | ep_rewards:-0.33 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:226988 | GE:4611 | epochs:0.1  | ep_lens:60.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:56.0 (spuriousM:6.0 ,  10.7%) | ep_rewards:-0.40 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:228050 | GE:4630 | epochs:0.1  | ep_lens:95.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:86.0 (spuriousM:7.0 ,   8.1%) | ep_rewards:-0.70 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:228508 | GE:4640 | epochs:0.1  | ep_lens:42.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:41.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.76  | mean_Q:-0.26  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:228956 | GE:4650 | epochs:0.1  | ep_lens:53.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:48.0 (spuriousM:5.0 ,  10.4%) | ep_rewards:-0.39 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:229449 | GE:4662 | epochs:0.1  | ep_lens:55.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:49.0 (spuriousM:11.0,  22.4%) | ep_rewards:-0.43 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:229831 | GE:4669 | epochs:0.1  | ep_lens:47.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:45.0 (spuriousM:5.0 ,  11.1%) | ep_rewards:-0.29 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:229994 | GE:4673 | epochs:0.1  | ep_lens:32.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:26.0 (spuriousM:5.0 ,  19.2%) | ep_rewards:-0.31 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:230125 | GE:4679 | epochs:0.1  | ep_lens:23.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.22 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:230365 | GE:4682 | epochs:0.1  | ep_lens:45.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:37.0 (spuriousM:11.0,  29.7%) | ep_rewards:-0.43 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:230734 | GE:4691 | epochs:0.1  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:5.0 ,  11.9%) | ep_rewards:-0.36 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:231010 | GE:4696 | epochs:0.1  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.25  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:231442 | GE:4705 | epochs:0.1  | ep_lens:52.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:48.0 (spuriousM:7.0 ,  14.6%) | ep_rewards:-0.36 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:232166 | GE:4720 | epochs:0.1  | ep_lens:67.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:58.0 (spuriousM:6.0 ,  10.3%) | ep_rewards:-0.56 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:232782 | GE:4732 | epochs:0.1  | ep_lens:62.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:56.0 (spuriousM:7.0 ,  12.5%) | ep_rewards:-0.46 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:232902 | GE:4735 | epochs:0.1  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:233176 | GE:4741 | epochs:0.1  | ep_lens:46.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:39.0 (spuriousM:7.0 ,  17.9%) | ep_rewards:-0.41 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:233479 | GE:4748 | epochs:0.1  | ep_lens:47.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.39 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:233870 | GE:4755 | epochs:0.1  | ep_lens:51.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:42.0 (spuriousM:11.0,  26.2%) | ep_rewards:-0.48 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:234225 | GE:4764 | epochs:0.1  | ep_lens:44.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.40 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:234562 | GE:4771 | epochs:0.1  | ep_lens:49.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:39.0 (spuriousM:8.0 ,  20.5%) | ep_rewards:-0.50 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:234896 | GE:4778 | epochs:0.1  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:5.0 ,  12.2%) | ep_rewards:-0.36 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:235115 | GE:4785 | epochs:0.1  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.23 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:235488 | GE:4791 | epochs:0.1  | ep_lens:49.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:43.0 (spuriousM:7.0 ,  16.3%) | ep_rewards:-0.40 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:235635 | GE:4796 | epochs:0.1  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:5.0 ,  20.0%) | ep_rewards:-0.31 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:235780 | GE:4798 | epochs:0.1  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:5.0 ,  20.8%) | ep_rewards:-0.24 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:236108 | GE:4807 | epochs:0.1  | ep_lens:45.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:42.0 (spuriousM:8.0 ,  19.0%) | ep_rewards:-0.30 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:236705 | GE:4817 | epochs:0.1  | ep_lens:60.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:52.0 (spuriousM:12.0,  23.1%) | ep_rewards:-0.50 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:236968 | GE:4823 | epochs:0.1  | ep_lens:51.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:41.0 (spuriousM:11.0,  26.8%) | ep_rewards:-0.51 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:237475 | GE:4836 | epochs:0.1  | ep_lens:54.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:46.0 (spuriousM:5.0 ,  10.9%) | ep_rewards:-0.47 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:237839 | GE:4841 | epochs:0.1  | ep_lens:47.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.39 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:238317 | GE:4850 | epochs:0.1  | ep_lens:59.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:55.0 (spuriousM:8.0 ,  14.5%) | ep_rewards:-0.40 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:238534 | GE:4857 | epochs:0.1  | ep_lens:34.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.37 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:238735 | GE:4860 | epochs:0.1  | ep_lens:45.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:35.0 (spuriousM:8.0 ,  22.9%) | ep_rewards:-0.48 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:239139 | GE:4868 | epochs:0.1  | ep_lens:56.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:45.0 (spuriousM:5.0 ,  11.1%) | ep_rewards:-0.56 | mean_Q:-0.29  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:239418 | GE:4872 | epochs:0.1  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:10.0,  27.8%) | ep_rewards:-0.39 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:239729 | GE:4880 | epochs:0.1  | ep_lens:51.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:43.0 (spuriousM:5.0 ,  11.6%) | ep_rewards:-0.46 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:240768 | GE:4901 | epochs:0.1  | ep_lens:75.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:67.0 (spuriousM:8.0 ,  11.9%) | ep_rewards:-0.58 | mean_Q:-0.31  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:241274 | GE:4913 | epochs:0.1  | ep_lens:57.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:48.0 (spuriousM:6.0 ,  12.5%) | ep_rewards:-0.51 | mean_Q:-0.30  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:241494 | GE:4918 | epochs:0.1  | ep_lens:39.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.35 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:241873 | GE:4924 | epochs:0.1  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.35 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:242418 | GE:4935 | epochs:0.1  | ep_lens:57.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:51.0 (spuriousM:12.0,  23.5%) | ep_rewards:-0.44 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:242543 | GE:4939 | epochs:0.1  | ep_lens:27.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:26.0 (spuriousM:4.0 ,  15.4%) | ep_rewards:-0.16 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:242682 | GE:4943 | epochs:0.1  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:3.0 ,  13.0%) | ep_rewards:-0.18 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:243376 | GE:4955 | epochs:0.1  | ep_lens:88.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:77.0 (spuriousM:11.0,  14.3%) | ep_rewards:-0.72 | mean_Q:-0.30  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:243969 | GE:4968 | epochs:0.1  | ep_lens:71.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:58.0 (spuriousM:9.0 ,  15.5%) | ep_rewards:-0.68 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:244365 | GE:4980 | epochs:0.1  | ep_lens:49.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:44.0 (spuriousM:7.0 ,  15.9%) | ep_rewards:-0.37 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:244743 | GE:4987 | epochs:0.1  | ep_lens:43.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:41.0 (spuriousM:9.0 ,  22.0%) | ep_rewards:-0.27 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:245629 | GE:5005 | epochs:0.1  | ep_lens:83.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:72.0 (spuriousM:1.0 ,   1.4%) | ep_rewards:-0.69 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:246535 | GE:5023 | epochs:0.1  | ep_lens:67.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:59.0 (spuriousM:6.0 ,  10.2%) | ep_rewards:-0.54 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:246844 | GE:5030 | epochs:0.1  | ep_lens:44.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:42.0 (spuriousM:4.0 ,   9.5%) | ep_rewards:-0.27 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:247394 | GE:5041 | epochs:0.1  | ep_lens:67.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:62.0 (spuriousM:12.0,  19.4%) | ep_rewards:-0.46 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:247591 | GE:5044 | epochs:0.1  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.27 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:247796 | GE:5049 | epochs:0.1  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.22 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:248027 | GE:5053 | epochs:0.1  | ep_lens:36.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.33 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:248131 | GE:5059 | epochs:0.1  | ep_lens:24.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:21.0 (spuriousM:6.0 ,  28.6%) | ep_rewards:-0.20 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:248470 | GE:5066 | epochs:0.1  | ep_lens:55.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.55 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:248765 | GE:5072 | epochs:0.1  | ep_lens:49.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:42.0 (spuriousM:6.0 ,  14.3%) | ep_rewards:-0.42 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:249683 | GE:5091 | epochs:0.1  | ep_lens:77.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:75.0 (spuriousM:17.0,  22.7%) | ep_rewards:-0.44 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:250055 | GE:5097 | epochs:0.1  | ep_lens:45.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.28 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:250477 | GE:5106 | epochs:0.1  | ep_lens:64.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:53.0 (spuriousM:4.0 ,   7.5%) | ep_rewards:-0.60 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:250750 | GE:5110 | epochs:0.1  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.23 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:251035 | GE:5117 | epochs:0.1  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:8.0 ,  22.9%) | ep_rewards:-0.36 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:251571 | GE:5130 | epochs:0.1  | ep_lens:58.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:54.0 (spuriousM:11.0,  20.4%) | ep_rewards:-0.39 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:251675 | GE:5133 | epochs:0.1  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.22  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:251790 | GE:5136 | epochs:0.1  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:252052 | GE:5143 | epochs:0.1  | ep_lens:38.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:32.0 (spuriousM:8.0 ,  25.0%) | ep_rewards:-0.34 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:252271 | GE:5150 | epochs:0.1  | ep_lens:27.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:26.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.01  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:252386 | GE:5154 | epochs:0.1  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:0.11   | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:252646 | GE:5161 | epochs:0.1  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:8.0 ,  23.5%) | ep_rewards:-0.26 | mean_Q:0.11   | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:252776 | GE:5164 | epochs:0.1  | ep_lens:28.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:21.0 (spuriousM:3.0 ,  14.3%) | ep_rewards:-0.32 | mean_Q:0.14   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:253154 | GE:5174 | epochs:0.1  | ep_lens:45.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:42.0 (spuriousM:7.0 ,  16.7%) | ep_rewards:-0.30 | mean_Q:0.01   | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:253533 | GE:5185 | epochs:0.1  | ep_lens:40.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:38.0 (spuriousM:10.0,  26.3%) | ep_rewards:-0.25 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:254144 | GE:5200 | epochs:0.1  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:7.0 ,  14.0%) | ep_rewards:-0.46 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:254749 | GE:5215 | epochs:0.1  | ep_lens:65.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:58.0 (spuriousM:17.0,  29.3%) | ep_rewards:-0.50 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:254912 | GE:5217 | epochs:0.1  | ep_lens:25.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:25.0 (spuriousM:5.0 ,  20.0%) | ep_rewards:-0.13 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:255342 | GE:5229 | epochs:0.1  | ep_lens:54.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:47.0 (spuriousM:7.0 ,  14.9%) | ep_rewards:-0.45 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:255930 | GE:5243 | epochs:0.1  | ep_lens:58.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:51.0 (spuriousM:3.0 ,   5.9%) | ep_rewards:-0.47 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:256067 | GE:5246 | epochs:0.1  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.08  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:256591 | GE:5257 | epochs:0.1  | ep_lens:60.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:54.0 (spuriousM:9.0 ,  16.7%) | ep_rewards:-0.45 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:257312 | GE:5273 | epochs:0.1  | ep_lens:65.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:59.0 (spuriousM:5.0 ,   8.5%) | ep_rewards:-0.48 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:257544 | GE:5277 | epochs:0.1  | ep_lens:47.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:40.0 (spuriousM:5.0 ,  12.5%) | ep_rewards:-0.41 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:258407 | GE:5294 | epochs:0.1  | ep_lens:74.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:67.0 (spuriousM:5.0 ,   7.5%) | ep_rewards:-0.55 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:258782 | GE:5300 | epochs:0.1  | ep_lens:54.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:46.0 (spuriousM:6.0 ,  13.0%) | ep_rewards:-0.47 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:259456 | GE:5318 | epochs:0.1  | ep_lens:78.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:64.0 (spuriousM:7.0 ,  10.9%) | ep_rewards:-0.74 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:259854 | GE:5326 | epochs:0.1  | ep_lens:50.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.45 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:260057 | GE:5329 | epochs:0.1  | ep_lens:37.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:35.0 (spuriousM:7.0 ,  20.0%) | ep_rewards:-0.24 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:260680 | GE:5346 | epochs:0.1  | ep_lens:59.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:55.0 (spuriousM:9.0 ,  16.4%) | ep_rewards:-0.40 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:261459 | GE:5362 | epochs:0.1  | ep_lens:90.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:80.0 (spuriousM:19.0,  23.8%) | ep_rewards:-0.70 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:261948 | GE:5372 | epochs:0.1  | ep_lens:62.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:55.0 (spuriousM:9.0 ,  16.4%) | ep_rewards:-0.49 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:262025 | GE:5373 | epochs:0.1  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.21  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:262680 | GE:5387 | epochs:0.1  | ep_lens:68.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:59.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.57 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:263035 | GE:5394 | epochs:0.1  | ep_lens:46.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:39.0 (spuriousM:10.0,  25.6%) | ep_rewards:-0.41 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:263304 | GE:5400 | epochs:0.1  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:5.0 ,  13.5%) | ep_rewards:-0.34 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:264085 | GE:5417 | epochs:0.1  | ep_lens:76.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:71.0 (spuriousM:3.0 ,   4.2%) | ep_rewards:-0.51 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:264292 | GE:5419 | epochs:0.1  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:12.0,  32.4%) | ep_rewards:-0.34 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:264829 | GE:5430 | epochs:0.1  | ep_lens:64.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:59.0 (spuriousM:5.0 ,   8.5%) | ep_rewards:-0.45 | mean_Q:-0.30  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:265091 | GE:5437 | epochs:0.1  | ep_lens:41.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.46 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:265513 | GE:5448 | epochs:0.1  | ep_lens:41.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:39.0 (spuriousM:5.0 ,  12.8%) | ep_rewards:-0.26 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:265986 | GE:5461 | epochs:0.1  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:8.0 ,  18.6%) | ep_rewards:-0.43 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:266555 | GE:5472 | epochs:0.1  | ep_lens:57.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:51.0 (spuriousM:4.0 ,   7.8%) | ep_rewards:-0.44 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:267059 | GE:5480 | epochs:0.1  | ep_lens:53.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:48.0 (spuriousM:2.0 ,   4.2%) | ep_rewards:-0.39 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:267413 | GE:5489 | epochs:0.1  | ep_lens:46.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.41 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:267892 | GE:5496 | epochs:0.1  | ep_lens:52.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:44.0 (spuriousM:5.0 ,  11.4%) | ep_rewards:-0.46 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:268456 | GE:5507 | epochs:0.1  | ep_lens:56.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:51.0 (spuriousM:6.0 ,  11.8%) | ep_rewards:-0.41 | mean_Q:-0.34  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:268656 | GE:5510 | epochs:0.1  | ep_lens:37.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:26.0 (spuriousM:4.0 ,  15.4%) | ep_rewards:-0.46 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:268800 | GE:5516 | epochs:0.1  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.21  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:269319 | GE:5526 | epochs:0.1  | ep_lens:64.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:56.0 (spuriousM:5.0 ,   8.9%) | ep_rewards:-0.52 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:269531 | GE:5531 | epochs:0.1  | ep_lens:32.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:28.0 (spuriousM:5.0 ,  17.9%) | ep_rewards:-0.26 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:270120 | GE:5545 | epochs:0.1  | ep_lens:55.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:49.0 (spuriousM:12.0,  24.5%) | ep_rewards:-0.43 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:270344 | GE:5550 | epochs:0.1  | ep_lens:37.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.24 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:270883 | GE:5561 | epochs:0.1  | ep_lens:71.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:60.0 (spuriousM:9.0 ,  15.0%) | ep_rewards:-0.63 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:271427 | GE:5568 | epochs:0.1  | ep_lens:71.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:60.0 (spuriousM:3.0 ,   5.0%) | ep_rewards:-0.63 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:271767 | GE:5576 | epochs:0.1  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:6.0 ,  15.8%) | ep_rewards:-0.31 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:272135 | GE:5582 | epochs:0.1  | ep_lens:44.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.30 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:272383 | GE:5584 | epochs:0.1  | ep_lens:42.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:34.0 (spuriousM:6.0 ,  17.6%) | ep_rewards:-0.41 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:272647 | GE:5592 | epochs:0.1  | ep_lens:53.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:46.0 (spuriousM:14.0,  30.4%) | ep_rewards:-0.44 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:273027 | GE:5599 | epochs:0.1  | ep_lens:57.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:48.0 (spuriousM:7.0 ,  14.6%) | ep_rewards:-0.51 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:273607 | GE:5611 | epochs:0.1  | ep_lens:61.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:54.0 (spuriousM:5.0 ,   9.3%) | ep_rewards:-0.48 | mean_Q:-0.30  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:273904 | GE:5618 | epochs:0.1  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:8.0 ,  20.5%) | ep_rewards:-0.29 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:274708 | GE:5633 | epochs:0.1  | ep_lens:88.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:75.0 (spuriousM:18.0,  24.0%) | ep_rewards:-0.77 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:274774 | GE:5637 | epochs:0.1  | ep_lens:5.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:4.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.95  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:275034 | GE:5640 | epochs:0.1  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.31 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:275283 | GE:5645 | epochs:0.1  | ep_lens:42.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:34.0 (spuriousM:10.0,  29.4%) | ep_rewards:-0.41 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:275977 | GE:5659 | epochs:0.1  | ep_lens:70.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:62.0 (spuriousM:7.0 ,  11.3%) | ep_rewards:-0.55 | mean_Q:-0.31  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:276475 | GE:5669 | epochs:0.1  | ep_lens:55.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:50.0 (spuriousM:4.0 ,   8.0%) | ep_rewards:-0.40 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:276792 | GE:5676 | epochs:0.1  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.29 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:276987 | GE:5680 | epochs:0.1  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:8.0 ,  28.6%) | ep_rewards:-0.29 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:277587 | GE:5693 | epochs:0.1  | ep_lens:49.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.47 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:278382 | GE:5708 | epochs:0.1  | ep_lens:73.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:64.0 (spuriousM:8.0 ,  12.5%) | ep_rewards:-0.59 | mean_Q:-0.31  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:278572 | GE:5712 | epochs:0.1  | ep_lens:42.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:35.0 (spuriousM:5.0 ,  14.3%) | ep_rewards:-0.39 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:279126 | GE:5722 | epochs:0.1  | ep_lens:61.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:51.0 (spuriousM:10.0,  19.6%) | ep_rewards:-0.56 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:279431 | GE:5728 | epochs:0.1  | ep_lens:37.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:36.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.79  | mean_Q:-0.21  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:279614 | GE:5733 | epochs:0.1  | ep_lens:33.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.32 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:279918 | GE:5737 | epochs:0.1  | ep_lens:48.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.49 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:280729 | GE:5752 | epochs:0.1  | ep_lens:87.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:76.0 (spuriousM:8.0 ,  10.5%) | ep_rewards:-0.71 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:280920 | GE:5756 | epochs:0.1  | ep_lens:46.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.51 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:281369 | GE:5765 | epochs:0.1  | ep_lens:64.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:54.0 (spuriousM:12.0,  22.2%) | ep_rewards:-0.57 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:282218 | GE:5780 | epochs:0.1  | ep_lens:72.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:66.0 (spuriousM:10.0,  15.2%) | ep_rewards:-0.51 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:282518 | GE:5789 | epochs:0.1  | ep_lens:45.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.55 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:282581 | GE:5791 | epochs:0.1  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:283326 | GE:5804 | epochs:0.1  | ep_lens:77.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:68.0 (spuriousM:15.0,  22.1%) | ep_rewards:-0.61 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:283486 | GE:5808 | epochs:0.1  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:283812 | GE:5816 | epochs:0.1  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.39 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:284445 | GE:5826 | epochs:0.1  | ep_lens:83.0 | edits:21.0 (spuriousE:21.0, 100.0%) | moves:62.0 (spuriousM:15.0,  24.2%) | ep_rewards:-0.94 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:284891 | GE:5834 | epochs:0.1  | ep_lens:49.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:40.0 (spuriousM:7.0 ,  17.5%) | ep_rewards:-0.47 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:285850 | GE:5857 | epochs:0.1  | ep_lens:77.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:68.0 (spuriousM:19.0,  27.9%) | ep_rewards:-0.61 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:286409 | GE:5866 | epochs:0.1  | ep_lens:57.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:52.0 (spuriousM:3.0 ,   5.8%) | ep_rewards:-0.41 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:286887 | GE:5876 | epochs:0.1  | ep_lens:53.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:47.0 (spuriousM:8.0 ,  17.0%) | ep_rewards:-0.42 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:288055 | GE:5901 | epochs:0.1  | ep_lens:84.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:77.0 (spuriousM:8.0 ,  10.4%) | ep_rewards:-0.60 | mean_Q:-0.30  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:288556 | GE:5910 | epochs:0.1  | ep_lens:53.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:49.0 (spuriousM:4.0 ,   8.2%) | ep_rewards:-0.37 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:288781 | GE:5916 | epochs:0.1  | ep_lens:29.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.25 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:288998 | GE:5919 | epochs:0.1  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.29 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:289430 | GE:5930 | epochs:0.1  | ep_lens:50.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:42.0 (spuriousM:4.0 ,   9.5%) | ep_rewards:-0.45 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:289819 | GE:5937 | epochs:0.1  | ep_lens:52.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.46 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:290187 | GE:5942 | epochs:0.1  | ep_lens:55.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:45.0 (spuriousM:7.0 ,  15.6%) | ep_rewards:-0.53 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:291255 | GE:5968 | epochs:0.1  | ep_lens:82.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:68.0 (spuriousM:4.0 ,   5.9%) | ep_rewards:-0.76 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:291552 | GE:5974 | epochs:0.1  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.35 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:291975 | GE:5981 | epochs:0.1  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:5.0 ,  11.6%) | ep_rewards:-0.43 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:292149 | GE:5986 | epochs:0.1  | ep_lens:21.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.27  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:292421 | GE:5992 | epochs:0.1  | ep_lens:49.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:38.0 (spuriousM:11.0,  28.9%) | ep_rewards:-0.52 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:292601 | GE:5997 | epochs:0.1  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:293775 | GE:6016 | epochs:0.1  | ep_lens:100.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:84.0 (spuriousM:10.0,  11.9%) | ep_rewards:-0.90 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:293913 | GE:6019 | epochs:0.1  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.25  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:294808 | GE:6038 | epochs:0.1  | ep_lens:95.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:85.0 (spuriousM:8.0 ,   9.4%) | ep_rewards:-0.73 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:295100 | GE:6045 | epochs:0.1  | ep_lens:42.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:32.0 (spuriousM:10.0,  31.2%) | ep_rewards:-0.46 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:295640 | GE:6056 | epochs:0.1  | ep_lens:56.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:48.0 (spuriousM:8.0 ,  16.7%) | ep_rewards:-0.48 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:296060 | GE:6063 | epochs:0.1  | ep_lens:68.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:59.0 (spuriousM:12.0,  20.3%) | ep_rewards:-0.57 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:296305 | GE:6068 | epochs:0.1  | ep_lens:40.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:39.0 (spuriousM:10.0,  25.6%) | ep_rewards:-0.23 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:296691 | GE:6077 | epochs:0.1  | ep_lens:48.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:43.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.37 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:296970 | GE:6083 | epochs:0.1  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.22  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:297214 | GE:6086 | epochs:0.1  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:7.0 ,  20.6%) | ep_rewards:-0.32 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:297615 | GE:6096 | epochs:0.1  | ep_lens:48.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:43.0 (spuriousM:6.0 ,  14.0%) | ep_rewards:-0.37 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:298195 | GE:6104 | epochs:0.1  | ep_lens:61.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:55.0 (spuriousM:1.0 ,   1.8%) | ep_rewards:-0.46 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:298754 | GE:6116 | epochs:0.1  | ep_lens:59.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:54.0 (spuriousM:4.0 ,   7.4%) | ep_rewards:-0.42 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:298939 | GE:6120 | epochs:0.1  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:6.0 ,  18.8%) | ep_rewards:-0.37 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:299202 | GE:6124 | epochs:0.1  | ep_lens:48.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:36.0 (spuriousM:10.0,  27.8%) | ep_rewards:-0.54 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:299636 | GE:6133 | epochs:0.1  | ep_lens:47.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.44 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:300047 | GE:6144 | epochs:0.1  | ep_lens:54.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:44.0 (spuriousM:5.0 ,  11.4%) | ep_rewards:-0.52 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:300114 | GE:6146 | epochs:0.1  | ep_lens:9.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:8.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.09  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:300831 | GE:6161 | epochs:0.1  | ep_lens:58.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:52.0 (spuriousM:4.0 ,   7.7%) | ep_rewards:-0.44 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:301152 | GE:6166 | epochs:0.1  | ep_lens:54.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:51.0 (spuriousM:19.0,  37.3%) | ep_rewards:-0.35 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:301653 | GE:6176 | epochs:0.1  | ep_lens:49.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.37 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:301937 | GE:6181 | epochs:0.1  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:9.0 ,  23.7%) | ep_rewards:-0.31 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:302182 | GE:6187 | epochs:0.1  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.30 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:302357 | GE:6191 | epochs:0.1  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:5.0 ,  20.0%) | ep_rewards:-0.22 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:302486 | GE:6193 | epochs:0.1  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:303087 | GE:6206 | epochs:0.1  | ep_lens:62.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:59.0 (spuriousM:9.0 ,  15.3%) | ep_rewards:-0.39 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:303272 | GE:6208 | epochs:0.1  | ep_lens:37.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:28.0 (spuriousM:7.0 ,  25.0%) | ep_rewards:-0.41 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:303840 | GE:6222 | epochs:0.1  | ep_lens:62.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:57.0 (spuriousM:10.0,  17.5%) | ep_rewards:-0.44 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:304046 | GE:6226 | epochs:0.1  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.27 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:304661 | GE:6241 | epochs:0.1  | ep_lens:61.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:55.0 (spuriousM:12.0,  21.8%) | ep_rewards:-0.46 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:305384 | GE:6256 | epochs:0.1  | ep_lens:56.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:51.0 (spuriousM:5.0 ,   9.8%) | ep_rewards:-0.41 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:305679 | GE:6263 | epochs:0.1  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:13.0,  31.0%) | ep_rewards:-0.39 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:305763 | GE:6264 | epochs:0.1  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:306085 | GE:6273 | epochs:0.1  | ep_lens:49.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:41.0 (spuriousM:10.0,  24.4%) | ep_rewards:-0.45 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:306603 | GE:6285 | epochs:0.1  | ep_lens:55.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:47.0 (spuriousM:20.0,  42.6%) | ep_rewards:-0.48 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:306888 | GE:6292 | epochs:0.1  | ep_lens:30.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.20 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:307204 | GE:6298 | epochs:0.1  | ep_lens:48.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:41.0 (spuriousM:8.0 ,  19.5%) | ep_rewards:-0.42 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:307416 | GE:6302 | epochs:0.1  | ep_lens:30.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.30 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:308142 | GE:6317 | epochs:0.1  | ep_lens:69.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:63.0 (spuriousM:19.0,  30.2%) | ep_rewards:-0.50 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:308333 | GE:6325 | epochs:0.1  | ep_lens:33.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:27.0 (spuriousM:11.0,  40.7%) | ep_rewards:-0.32 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:309032 | GE:6337 | epochs:0.1  | ep_lens:54.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:50.0 (spuriousM:4.0 ,   8.0%) | ep_rewards:-0.37 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:309237 | GE:6343 | epochs:0.1  | ep_lens:48.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:41.0 (spuriousM:7.0 ,  17.1%) | ep_rewards:-0.42 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:309815 | GE:6352 | epochs:0.1  | ep_lens:60.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:55.0 (spuriousM:5.0 ,   9.1%) | ep_rewards:-0.43 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:309998 | GE:6356 | epochs:0.1  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.27 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:310316 | GE:6366 | epochs:0.1  | ep_lens:39.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:33.0 (spuriousM:7.0 ,  21.2%) | ep_rewards:-0.35 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:310485 | GE:6371 | epochs:0.1  | ep_lens:34.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:26.0 (spuriousM:8.0 ,  30.8%) | ep_rewards:-0.37 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:310796 | GE:6375 | epochs:0.1  | ep_lens:43.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:39.0 (spuriousM:11.0,  28.2%) | ep_rewards:-0.32 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:311394 | GE:6390 | epochs:0.1  | ep_lens:51.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:49.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.31 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:312204 | GE:6405 | epochs:0.1  | ep_lens:100.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:91.0 (spuriousM:37.0,  40.7%) | ep_rewards:-0.73 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:312534 | GE:6412 | epochs:0.1  | ep_lens:48.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:37.0 (spuriousM:10.0,  27.0%) | ep_rewards:-0.52 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:312840 | GE:6417 | epochs:0.1  | ep_lens:54.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:36.0 (spuriousM:7.0 ,  19.4%) | ep_rewards:-0.72 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:313315 | GE:6426 | epochs:0.1  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.40 | mean_Q:-0.31  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:314217 | GE:6448 | epochs:0.1  | ep_lens:72.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:62.0 (spuriousM:7.0 ,  11.3%) | ep_rewards:-0.61 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:314640 | GE:6457 | epochs:0.1  | ep_lens:55.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:49.0 (spuriousM:9.0 ,  18.4%) | ep_rewards:-0.43 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:315005 | GE:6465 | epochs:0.1  | ep_lens:52.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:44.0 (spuriousM:6.0 ,  13.6%) | ep_rewards:-0.46 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:315595 | GE:6474 | epochs:0.1  | ep_lens:54.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:51.0 (spuriousM:6.0 ,  11.8%) | ep_rewards:-0.35 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:315867 | GE:6481 | epochs:0.1  | ep_lens:40.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:33.0 (spuriousM:5.0 ,  15.2%) | ep_rewards:-0.38 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:316469 | GE:6492 | epochs:0.1  | ep_lens:67.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:57.0 (spuriousM:10.0,  17.5%) | ep_rewards:-0.59 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:316807 | GE:6498 | epochs:0.1  | ep_lens:62.0 | edits:19.0 (spuriousE:19.0, 100.0%) | moves:43.0 (spuriousM:9.0 ,  20.9%) | ep_rewards:-0.79 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:317096 | GE:6504 | epochs:0.1  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:5.0 ,  12.2%) | ep_rewards:-0.33 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:317629 | GE:6515 | epochs:0.1  | ep_lens:62.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:56.0 (spuriousM:7.0 ,  12.5%) | ep_rewards:-0.46 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:317791 | GE:6519 | epochs:0.1  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.26 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:318123 | GE:6525 | epochs:0.1  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:7.0 ,  18.4%) | ep_rewards:-0.37 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:318321 | GE:6530 | epochs:0.1  | ep_lens:40.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.38 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:318767 | GE:6539 | epochs:0.1  | ep_lens:60.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:52.0 (spuriousM:4.0 ,   7.7%) | ep_rewards:-0.50 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:318901 | GE:6542 | epochs:0.1  | ep_lens:24.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:319434 | GE:6553 | epochs:0.1  | ep_lens:62.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:51.0 (spuriousM:7.0 ,  13.7%) | ep_rewards:-0.59 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:320296 | GE:6570 | epochs:0.1  | ep_lens:100.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:88.0 (spuriousM:36.0,  40.9%) | ep_rewards:-0.80 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:320777 | GE:6583 | epochs:0.1  | ep_lens:63.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:55.0 (spuriousM:13.0,  23.6%) | ep_rewards:-0.52 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:320933 | GE:6586 | epochs:0.1  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.29 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:321189 | GE:6590 | epochs:0.1  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.33 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:322132 | GE:6610 | epochs:0.1  | ep_lens:83.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:74.0 (spuriousM:12.0,  16.2%) | ep_rewards:-0.64 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:322632 | GE:6620 | epochs:0.1  | ep_lens:56.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:50.0 (spuriousM:6.0 ,  12.0%) | ep_rewards:-0.43 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:323080 | GE:6630 | epochs:0.1  | ep_lens:54.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:48.0 (spuriousM:9.0 ,  18.8%) | ep_rewards:-0.42 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:323404 | GE:6635 | epochs:0.1  | ep_lens:45.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.40 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:323921 | GE:6648 | epochs:0.1  | ep_lens:50.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:45.0 (spuriousM:6.0 ,  13.3%) | ep_rewards:-0.38 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:324196 | GE:6652 | epochs:0.1  | ep_lens:42.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:40.0 (spuriousM:5.0 ,  12.5%) | ep_rewards:-0.26 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:324390 | GE:6658 | epochs:0.1  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.24 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:324998 | GE:6670 | epochs:0.1  | ep_lens:71.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:60.0 (spuriousM:7.0 ,  11.7%) | ep_rewards:-0.63 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:325542 | GE:6678 | epochs:0.1  | ep_lens:73.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:60.0 (spuriousM:12.0,  20.0%) | ep_rewards:-0.69 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:325885 | GE:6687 | epochs:0.1  | ep_lens:54.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:42.0 (spuriousM:4.0 ,   9.5%) | ep_rewards:-0.57 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:326665 | GE:6703 | epochs:0.1  | ep_lens:70.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:62.0 (spuriousM:13.0,  21.0%) | ep_rewards:-0.55 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:326973 | GE:6711 | epochs:0.1  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.31 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:327212 | GE:6718 | epochs:0.1  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:7.0 ,  21.2%) | ep_rewards:-0.29 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:327426 | GE:6722 | epochs:0.1  | ep_lens:32.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.29 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:327659 | GE:6726 | epochs:0.1  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:8.0 ,  27.6%) | ep_rewards:-0.27 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:327941 | GE:6731 | epochs:0.1  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.28 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:328349 | GE:6741 | epochs:0.1  | ep_lens:53.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:50.0 (spuriousM:10.0,  20.0%) | ep_rewards:-0.34 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:329291 | GE:6759 | epochs:0.1  | ep_lens:80.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:72.0 (spuriousM:11.0,  15.3%) | ep_rewards:-0.60 | mean_Q:-0.31  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:329537 | GE:6762 | epochs:0.1  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:6.0 ,  16.2%) | ep_rewards:-0.34 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:329771 | GE:6768 | epochs:0.1  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.19 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:330029 | GE:6774 | epochs:0.1  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.25 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:330334 | GE:6783 | epochs:0.1  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.34 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:330976 | GE:6797 | epochs:0.1  | ep_lens:65.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:57.0 (spuriousM:2.0 ,   3.5%) | ep_rewards:-0.53 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:331794 | GE:6808 | epochs:0.1  | ep_lens:76.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:67.0 (spuriousM:4.0 ,   6.0%) | ep_rewards:-0.61 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:332298 | GE:6818 | epochs:0.1  | ep_lens:69.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:60.0 (spuriousM:13.0,  21.7%) | ep_rewards:-0.57 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:332895 | GE:6832 | epochs:0.1  | ep_lens:59.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:55.0 (spuriousM:13.0,  23.6%) | ep_rewards:-0.40 | mean_Q:-0.33  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:333033 | GE:6834 | epochs:0.1  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.27  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:333118 | GE:6836 | epochs:0.1  | ep_lens:24.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:23.0 (spuriousM:7.0 ,  30.4%) | ep_rewards:-0.15 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:333449 | GE:6843 | epochs:0.1  | ep_lens:59.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:49.0 (spuriousM:24.0,  49.0%) | ep_rewards:-0.55 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:333630 | GE:6847 | epochs:0.1  | ep_lens:33.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:26.0 (spuriousM:5.0 ,  19.2%) | ep_rewards:-0.34 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:333836 | GE:6851 | epochs:0.1  | ep_lens:26.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:25.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.09  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:333999 | GE:6856 | epochs:0.1  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:6.0 ,  24.0%) | ep_rewards:-0.31 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:334421 | GE:6866 | epochs:0.1  | ep_lens:51.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:46.0 (spuriousM:7.0 ,  15.2%) | ep_rewards:-0.38 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:334605 | GE:6871 | epochs:0.1  | ep_lens:39.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.35 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:335328 | GE:6887 | epochs:0.1  | ep_lens:68.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:60.0 (spuriousM:10.0,  16.7%) | ep_rewards:-0.54 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:335677 | GE:6895 | epochs:0.1  | ep_lens:51.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:43.0 (spuriousM:10.0,  23.3%) | ep_rewards:-0.46 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:336188 | GE:6909 | epochs:0.1  | ep_lens:50.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.38 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:336644 | GE:6921 | epochs:0.1  | ep_lens:55.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:48.0 (spuriousM:7.0 ,  14.6%) | ep_rewards:-0.45 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:336878 | GE:6923 | epochs:0.1  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.30 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:337332 | GE:6937 | epochs:0.1  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:4.0 ,   8.0%) | ep_rewards:-0.46 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:337548 | GE:6940 | epochs:0.1  | ep_lens:37.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.39 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:338102 | GE:6950 | epochs:0.1  | ep_lens:60.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:51.0 (spuriousM:9.0 ,  17.6%) | ep_rewards:-0.53 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:339009 | GE:6965 | epochs:0.1  | ep_lens:81.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:72.0 (spuriousM:11.0,  15.3%) | ep_rewards:-0.63 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:339424 | GE:6972 | epochs:0.1  | ep_lens:59.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:49.0 (spuriousM:9.0 ,  18.4%) | ep_rewards:-0.55 | mean_Q:-0.31  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:339737 | GE:6981 | epochs:0.1  | ep_lens:37.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.21 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:339851 | GE:6982 | epochs:0.1  | ep_lens:23.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.14 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:340101 | GE:6988 | epochs:0.1  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.29 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:340350 | GE:6997 | epochs:0.1  | ep_lens:40.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.38 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:340825 | GE:7005 | epochs:0.1  | ep_lens:52.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:38.0 (spuriousM:15.0,  39.5%) | ep_rewards:-0.61 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:341398 | GE:7018 | epochs:0.1  | ep_lens:57.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:52.0 (spuriousM:3.0 ,   5.8%) | ep_rewards:-0.41 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:341631 | GE:7024 | epochs:0.1  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.39 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:341785 | GE:7028 | epochs:0.1  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.20 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:342279 | GE:7036 | epochs:0.1  | ep_lens:57.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:51.0 (spuriousM:8.0 ,  15.7%) | ep_rewards:-0.44 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:342909 | GE:7052 | epochs:0.1  | ep_lens:54.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:46.0 (spuriousM:5.0 ,  10.9%) | ep_rewards:-0.47 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:343171 | GE:7057 | epochs:0.1  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.39 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:343384 | GE:7062 | epochs:0.1  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.28 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:344026 | GE:7075 | epochs:0.1  | ep_lens:77.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:67.0 (spuriousM:9.0 ,  13.4%) | ep_rewards:-0.64 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:344556 | GE:7086 | epochs:0.1  | ep_lens:59.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:52.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.47 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:344730 | GE:7092 | epochs:0.1  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:5.0 ,  14.7%) | ep_rewards:-0.26 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:345167 | GE:7100 | epochs:0.1  | ep_lens:57.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:48.0 (spuriousM:8.0 ,  16.7%) | ep_rewards:-0.51 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:345562 | GE:7106 | epochs:0.1  | ep_lens:49.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.32 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:345746 | GE:7112 | epochs:0.1  | ep_lens:31.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.33 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:346395 | GE:7126 | epochs:0.1  | ep_lens:67.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:55.0 (spuriousM:1.0 ,   1.8%) | ep_rewards:-0.64 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:347007 | GE:7137 | epochs:0.1  | ep_lens:56.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:53.0 (spuriousM:4.0 ,   7.5%) | ep_rewards:-0.36 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:347711 | GE:7152 | epochs:0.1  | ep_lens:71.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:67.0 (spuriousM:5.0 ,   7.5%) | ep_rewards:-0.46 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:347964 | GE:7158 | epochs:0.1  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.36 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:348034 | GE:7160 | epochs:0.1  | ep_lens:15.0 | edits:5.0  (spuriousE:4.0 ,  80.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.80  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:348179 | GE:7164 | epochs:0.1  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.20 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:348719 | GE:7176 | epochs:0.1  | ep_lens:62.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:58.0 (spuriousM:12.0,  20.7%) | ep_rewards:-0.41 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:348875 | GE:7178 | epochs:0.1  | ep_lens:25.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.25 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:349158 | GE:7185 | epochs:0.1  | ep_lens:40.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:34.0 (spuriousM:7.0 ,  20.6%) | ep_rewards:-0.35 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:349894 | GE:7200 | epochs:0.1  | ep_lens:81.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:72.0 (spuriousM:10.0,  13.9%) | ep_rewards:-0.63 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:350139 | GE:7204 | epochs:0.1  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:7.0 ,  20.0%) | ep_rewards:-0.33 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:351113 | GE:7225 | epochs:0.1  | ep_lens:75.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:71.0 (spuriousM:4.0 ,   5.6%) | ep_rewards:-0.48 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:351466 | GE:7233 | epochs:0.1  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.36 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:351950 | GE:7247 | epochs:0.1  | ep_lens:42.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:41.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.76  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:352244 | GE:7254 | epochs:0.1  | ep_lens:44.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:37.0 (spuriousM:10.0,  27.0%) | ep_rewards:-0.40 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:352675 | GE:7261 | epochs:0.1  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.33 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:352990 | GE:7267 | epochs:0.1  | ep_lens:40.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.38 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:353253 | GE:7272 | epochs:0.1  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.28 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:353391 | GE:7275 | epochs:0.1  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.18 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:353586 | GE:7281 | epochs:0.1  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:5.0 ,  17.2%) | ep_rewards:-0.27 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:353766 | GE:7284 | epochs:0.1  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.28  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:354427 | GE:7299 | epochs:0.1  | ep_lens:70.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:62.0 (spuriousM:8.0 ,  12.9%) | ep_rewards:-0.55 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:355432 | GE:7321 | epochs:0.1  | ep_lens:77.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:71.0 (spuriousM:15.0,  21.1%) | ep_rewards:-0.54 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:355891 | GE:7328 | epochs:0.1  | ep_lens:57.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.51 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:356182 | GE:7332 | epochs:0.1  | ep_lens:26.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.18 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:356583 | GE:7341 | epochs:0.1  | ep_lens:76.0 | edits:25.0 (spuriousE:25.0, 100.0%) | moves:51.0 (spuriousM:3.0 ,   5.9%) | ep_rewards:-1.01 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:357366 | GE:7357 | epochs:0.1  | ep_lens:66.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:60.0 (spuriousM:9.0 ,  15.0%) | ep_rewards:-0.48 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:357473 | GE:7359 | epochs:0.1  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.25  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:357839 | GE:7367 | epochs:0.1  | ep_lens:74.0 | edits:24.0 (spuriousE:24.0, 100.0%) | moves:50.0 (spuriousM:10.0,  20.0%) | ep_rewards:-0.97 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:358155 | GE:7375 | epochs:0.1  | ep_lens:56.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:40.0 (spuriousM:4.0 ,  10.0%) | ep_rewards:-0.68 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:358709 | GE:7387 | epochs:0.1  | ep_lens:69.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:60.0 (spuriousM:28.0,  46.7%) | ep_rewards:-0.57 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:358991 | GE:7391 | epochs:0.1  | ep_lens:47.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.51 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:359969 | GE:7411 | epochs:0.1  | ep_lens:77.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:70.0 (spuriousM:7.0 ,  10.0%) | ep_rewards:-0.56 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:360246 | GE:7417 | epochs:0.1  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:5.0 ,  13.2%) | ep_rewards:-0.37 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:360564 | GE:7423 | epochs:0.1  | ep_lens:49.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:46.0 (spuriousM:9.0 ,  19.6%) | ep_rewards:-0.32 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:360910 | GE:7433 | epochs:0.1  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.37 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:361167 | GE:7437 | epochs:0.1  | ep_lens:43.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:33.0 (spuriousM:7.0 ,  21.2%) | ep_rewards:-0.47 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:361519 | GE:7444 | epochs:0.1  | ep_lens:47.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:43.0 (spuriousM:5.0 ,  11.6%) | ep_rewards:-0.34 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:362208 | GE:7459 | epochs:0.1  | ep_lens:62.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:52.0 (spuriousM:6.0 ,  11.5%) | ep_rewards:-0.56 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:363023 | GE:7476 | epochs:0.1  | ep_lens:74.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:65.0 (spuriousM:11.0,  16.9%) | ep_rewards:-0.60 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:363473 | GE:7487 | epochs:0.1  | ep_lens:51.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:47.0 (spuriousM:5.0 ,  10.6%) | ep_rewards:-0.36 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:363752 | GE:7493 | epochs:0.1  | ep_lens:42.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.51 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:364071 | GE:7500 | epochs:0.1  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:5.0 ,  13.2%) | ep_rewards:-0.31 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:364691 | GE:7514 | epochs:0.1  | ep_lens:62.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:54.0 (spuriousM:7.0 ,  13.0%) | ep_rewards:-0.51 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:364901 | GE:7520 | epochs:0.1  | ep_lens:32.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:25.0 (spuriousM:4.0 ,  16.0%) | ep_rewards:-0.34 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:365118 | GE:7523 | epochs:0.1  | ep_lens:42.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.49 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:365197 | GE:7526 | epochs:0.1  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:365523 | GE:7533 | epochs:0.1  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:8.0 ,  20.5%) | ep_rewards:-0.35 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:365979 | GE:7542 | epochs:0.1  | ep_lens:53.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:47.0 (spuriousM:6.0 ,  12.8%) | ep_rewards:-0.42 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:366422 | GE:7548 | epochs:0.1  | ep_lens:69.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:60.0 (spuriousM:16.0,  26.7%) | ep_rewards:-0.57 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:366689 | GE:7555 | epochs:0.1  | ep_lens:41.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.26 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:367173 | GE:7564 | epochs:0.1  | ep_lens:71.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:56.0 (spuriousM:7.0 ,  12.5%) | ep_rewards:-0.73 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:367660 | GE:7573 | epochs:0.1  | ep_lens:60.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:51.0 (spuriousM:3.0 ,   5.9%) | ep_rewards:-0.53 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:367820 | GE:7575 | epochs:0.1  | ep_lens:22.0 | edits:7.0  (spuriousE:6.0 ,  85.7%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.71  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:368301 | GE:7588 | epochs:0.1  | ep_lens:56.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:50.0 (spuriousM:7.0 ,  14.0%) | ep_rewards:-0.43 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:368684 | GE:7598 | epochs:0.1  | ep_lens:41.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:33.0 (spuriousM:5.0 ,  15.2%) | ep_rewards:-0.41 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:369275 | GE:7611 | epochs:0.1  | ep_lens:65.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:57.0 (spuriousM:8.0 ,  14.0%) | ep_rewards:-0.53 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:369548 | GE:7614 | epochs:0.1  | ep_lens:42.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:40.0 (spuriousM:7.0 ,  17.5%) | ep_rewards:-0.26 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:369812 | GE:7619 | epochs:0.1  | ep_lens:47.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:40.0 (spuriousM:7.0 ,  17.5%) | ep_rewards:-0.41 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:369914 | GE:7624 | epochs:0.1  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:370178 | GE:7631 | epochs:0.1  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.25 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:370859 | GE:7644 | epochs:0.1  | ep_lens:62.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:57.0 (spuriousM:9.0 ,  15.8%) | ep_rewards:-0.44 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:371035 | GE:7648 | epochs:0.1  | ep_lens:37.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:30.0 (spuriousM:10.0,  33.3%) | ep_rewards:-0.36 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:371421 | GE:7656 | epochs:0.1  | ep_lens:47.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.39 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:371741 | GE:7663 | epochs:0.1  | ep_lens:54.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:42.0 (spuriousM:14.0,  33.3%) | ep_rewards:-0.57 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:371875 | GE:7668 | epochs:0.1  | ep_lens:23.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.15  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:372185 | GE:7673 | epochs:0.1  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.33 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:372381 | GE:7678 | epochs:0.1  | ep_lens:42.0 | edits:7.0  (spuriousE:6.0 ,  85.7%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.35 | mean_Q:-0.11  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:372742 | GE:7685 | epochs:0.1  | ep_lens:49.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:42.0 (spuriousM:8.0 ,  19.0%) | ep_rewards:-0.42 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:372906 | GE:7691 | epochs:0.1  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.30 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:373167 | GE:7696 | epochs:0.1  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:6.0 ,  15.8%) | ep_rewards:-0.31 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:373702 | GE:7707 | epochs:0.1  | ep_lens:55.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:51.0 (spuriousM:15.0,  29.4%) | ep_rewards:-0.38 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:374158 | GE:7719 | epochs:0.1  | ep_lens:58.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:52.0 (spuriousM:11.0,  21.2%) | ep_rewards:-0.44 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:374354 | GE:7722 | epochs:0.1  | ep_lens:31.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:26.0 (spuriousM:5.0 ,  19.2%) | ep_rewards:-0.28 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:374732 | GE:7730 | epochs:0.1  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:8.0 ,  19.5%) | ep_rewards:-0.36 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:375357 | GE:7747 | epochs:0.1  | ep_lens:56.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:52.0 (spuriousM:3.0 ,   5.8%) | ep_rewards:-0.38 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:375524 | GE:7749 | epochs:0.1  | ep_lens:25.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.15 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:375648 | GE:7752 | epochs:0.1  | ep_lens:17.0 | edits:3.0  (spuriousE:2.0 ,  66.7%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:375757 | GE:7754 | epochs:0.1  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:376046 | GE:7761 | epochs:0.1  | ep_lens:46.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:35.0 (spuriousM:9.0 ,  25.7%) | ep_rewards:-0.51 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:376449 | GE:7772 | epochs:0.1  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.33 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:376920 | GE:7782 | epochs:0.1  | ep_lens:58.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:46.0 (spuriousM:6.0 ,  13.0%) | ep_rewards:-0.59 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:377126 | GE:7788 | epochs:0.1  | ep_lens:35.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:28.0 (spuriousM:5.0 ,  17.9%) | ep_rewards:-0.35 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:377730 | GE:7799 | epochs:0.1  | ep_lens:62.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:53.0 (spuriousM:15.0,  28.3%) | ep_rewards:-0.54 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:378149 | GE:7811 | epochs:0.1  | ep_lens:50.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:33.0 (spuriousM:9.0 ,  27.3%) | ep_rewards:-0.68 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:378488 | GE:7819 | epochs:0.1  | ep_lens:43.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:39.0 (spuriousM:6.0 ,  15.4%) | ep_rewards:-0.32 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:379183 | GE:7832 | epochs:0.1  | ep_lens:60.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:51.0 (spuriousM:8.0 ,  15.7%) | ep_rewards:-0.53 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:379693 | GE:7843 | epochs:0.1  | ep_lens:57.0 | edits:19.0 (spuriousE:19.0, 100.0%) | moves:38.0 (spuriousM:6.0 ,  15.8%) | ep_rewards:-0.76 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:379843 | GE:7848 | epochs:0.1  | ep_lens:24.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.30  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:380239 | GE:7855 | epochs:0.1  | ep_lens:34.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:33.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.80  | mean_Q:-0.31  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:380685 | GE:7863 | epochs:0.1  | ep_lens:78.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:61.0 (spuriousM:15.0,  24.6%) | ep_rewards:-0.82 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:381125 | GE:7867 | epochs:0.1  | ep_lens:53.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:46.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.44 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:381221 | GE:7870 | epochs:0.1  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.25  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:382123 | GE:7885 | epochs:0.1  | ep_lens:88.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:78.0 (spuriousM:8.0 ,  10.3%) | ep_rewards:-0.69 | mean_Q:-0.32  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:382432 | GE:7891 | epochs:0.1  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:7.0 ,  20.0%) | ep_rewards:-0.36 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:382511 | GE:7893 | epochs:0.1  | ep_lens:9.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:8.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.28  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:382848 | GE:7901 | epochs:0.1  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.35 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:383185 | GE:7910 | epochs:0.1  | ep_lens:40.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.45 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:383302 | GE:7913 | epochs:0.1  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:383699 | GE:7920 | epochs:0.1  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.37 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:383824 | GE:7922 | epochs:0.1  | ep_lens:23.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:18.0 (spuriousM:2.0 ,  11.1%) | ep_rewards:-0.24 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:384087 | GE:7928 | epochs:0.1  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.38 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:384288 | GE:7934 | epochs:0.1  | ep_lens:32.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:27.0 (spuriousM:6.0 ,  22.2%) | ep_rewards:-0.29 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:384455 | GE:7937 | epochs:0.1  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.24  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:385066 | GE:7949 | epochs:0.1  | ep_lens:61.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:51.0 (spuriousM:3.0 ,   5.9%) | ep_rewards:-0.56 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:385410 | GE:7955 | epochs:0.1  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:7.0 ,  17.1%) | ep_rewards:-0.33 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:385652 | GE:7960 | epochs:0.1  | ep_lens:39.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:35.0 (spuriousM:7.0 ,  20.0%) | ep_rewards:-0.30 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:385917 | GE:7965 | epochs:0.1  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:5.0 ,  14.7%) | ep_rewards:-0.38 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:386353 | GE:7974 | epochs:0.1  | ep_lens:57.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:46.0 (spuriousM:14.0,  30.4%) | ep_rewards:-0.56 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:386534 | GE:7980 | epochs:0.1  | ep_lens:34.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:28.0 (spuriousM:6.0 ,  21.4%) | ep_rewards:-0.32 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:386986 | GE:7989 | epochs:0.1  | ep_lens:38.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:37.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.78  | mean_Q:-0.27  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:387167 | GE:7991 | epochs:0.1  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:4.0 ,  14.3%) | ep_rewards:-0.23 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:387690 | GE:8002 | epochs:0.1  | ep_lens:54.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:47.0 (spuriousM:9.0 ,  19.1%) | ep_rewards:-0.45 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:388008 | GE:8010 | epochs:0.1  | ep_lens:47.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:44.0 (spuriousM:14.0,  31.8%) | ep_rewards:-0.31 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:388675 | GE:8022 | epochs:0.1  | ep_lens:53.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:50.0 (spuriousM:6.0 ,  12.0%) | ep_rewards:-0.34 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:389104 | GE:8032 | epochs:0.1  | ep_lens:55.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:49.0 (spuriousM:4.0 ,   8.2%) | ep_rewards:-0.43 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:389845 | GE:8046 | epochs:0.1  | ep_lens:100.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:88.0 (spuriousM:28.0,  31.8%) | ep_rewards:-0.80 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:390351 | GE:8055 | epochs:0.1  | ep_lens:75.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:63.0 (spuriousM:9.0 ,  14.3%) | ep_rewards:-0.68 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:390884 | GE:8067 | epochs:0.1  | ep_lens:58.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:53.0 (spuriousM:4.0 ,   7.5%) | ep_rewards:-0.42 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:391102 | GE:8071 | epochs:0.1  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:7.0 ,  24.1%) | ep_rewards:-0.33 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:391599 | GE:8081 | epochs:0.1  | ep_lens:51.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:42.0 (spuriousM:4.0 ,   9.5%) | ep_rewards:-0.48 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:392091 | GE:8090 | epochs:0.1  | ep_lens:52.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:47.0 (spuriousM:8.0 ,  17.0%) | ep_rewards:-0.39 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:392445 | GE:8099 | epochs:0.1  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:6.0 ,  14.0%) | ep_rewards:-0.43 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:393135 | GE:8113 | epochs:0.1  | ep_lens:73.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:64.0 (spuriousM:10.0,  15.6%) | ep_rewards:-0.59 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:393435 | GE:8119 | epochs:0.1  | ep_lens:25.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.18  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:393918 | GE:8127 | epochs:0.1  | ep_lens:63.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:59.0 (spuriousM:15.0,  25.4%) | ep_rewards:-0.42 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:394050 | GE:8130 | epochs:0.1  | ep_lens:24.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:23.0 (spuriousM:5.0 ,  21.7%) | ep_rewards:-0.15 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:394333 | GE:8135 | epochs:0.1  | ep_lens:44.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.40 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:394438 | GE:8138 | epochs:0.1  | ep_lens:14.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.27  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:394754 | GE:8143 | epochs:0.1  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.36 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:395126 | GE:8151 | epochs:0.1  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:10.0,  24.4%) | ep_rewards:-0.33 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:396036 | GE:8169 | epochs:0.1  | ep_lens:90.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:75.0 (spuriousM:8.0 ,  10.7%) | ep_rewards:-0.83 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:396370 | GE:8175 | epochs:0.1  | ep_lens:49.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:44.0 (spuriousM:8.0 ,  18.2%) | ep_rewards:-0.37 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:396565 | GE:8180 | epochs:0.1  | ep_lens:43.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.47 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:396771 | GE:8183 | epochs:0.1  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.30 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:397523 | GE:8199 | epochs:0.1  | ep_lens:66.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:60.0 (spuriousM:2.0 ,   3.3%) | ep_rewards:-0.48 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:397756 | GE:8206 | epochs:0.1  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.33 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:398137 | GE:8210 | epochs:0.1  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.36 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:398507 | GE:8219 | epochs:0.1  | ep_lens:51.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:45.0 (spuriousM:5.0 ,  11.1%) | ep_rewards:-0.41 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:398750 | GE:8224 | epochs:0.1  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.24 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:399102 | GE:8231 | epochs:0.1  | ep_lens:49.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:46.0 (spuriousM:5.0 ,  10.9%) | ep_rewards:-0.32 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:399667 | GE:8243 | epochs:0.1  | ep_lens:64.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:56.0 (spuriousM:6.0 ,  10.7%) | ep_rewards:-0.52 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:400266 | GE:8255 | epochs:0.1  | ep_lens:73.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:65.0 (spuriousM:2.0 ,   3.1%) | ep_rewards:-0.57 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:400844 | GE:8268 | epochs:0.1  | ep_lens:57.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:52.0 (spuriousM:3.0 ,   5.8%) | ep_rewards:-0.41 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:401473 | GE:8280 | epochs:0.1  | ep_lens:63.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:62.0 (spuriousM:14.0,  22.6%) | ep_rewards:-0.34 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:401859 | GE:8288 | epochs:0.1  | ep_lens:57.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:47.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.54 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:402227 | GE:8296 | epochs:0.1  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:5.0 ,  11.9%) | ep_rewards:-0.39 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:402435 | GE:8301 | epochs:0.1  | ep_lens:43.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:34.0 (spuriousM:4.0 ,  11.8%) | ep_rewards:-0.44 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:402642 | GE:8304 | epochs:0.1  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:5.0 ,  15.6%) | ep_rewards:-0.25 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:403199 | GE:8315 | epochs:0.1  | ep_lens:84.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:74.0 (spuriousM:19.0,  25.7%) | ep_rewards:-0.67 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:403974 | GE:8333 | epochs:0.1  | ep_lens:70.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:64.0 (spuriousM:19.0,  29.7%) | ep_rewards:-0.50 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:404427 | GE:8345 | epochs:0.1  | ep_lens:46.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.43 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:405165 | GE:8359 | epochs:0.1  | ep_lens:64.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:60.0 (spuriousM:7.0 ,  11.7%) | ep_rewards:-0.42 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:405461 | GE:8365 | epochs:0.1  | ep_lens:45.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:38.0 (spuriousM:6.0 ,  15.8%) | ep_rewards:-0.40 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:405808 | GE:8373 | epochs:0.1  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.29 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:406447 | GE:8385 | epochs:0.1  | ep_lens:52.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:45.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.44 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:406667 | GE:8389 | epochs:0.1  | ep_lens:36.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.36 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:406850 | GE:8395 | epochs:0.1  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.27 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:407125 | GE:8400 | epochs:0.1  | ep_lens:46.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.51 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:407476 | GE:8407 | epochs:0.1  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:7.0 ,  17.1%) | ep_rewards:-0.33 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:407592 | GE:8410 | epochs:0.1  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:408042 | GE:8420 | epochs:0.1  | ep_lens:51.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:41.0 (spuriousM:11.0,  26.8%) | ep_rewards:-0.51 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:408454 | GE:8428 | epochs:0.1  | ep_lens:58.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:48.0 (spuriousM:3.0 ,   6.2%) | ep_rewards:-0.54 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:408932 | GE:8437 | epochs:0.1  | ep_lens:53.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:46.0 (spuriousM:6.0 ,  13.0%) | ep_rewards:-0.44 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:409167 | GE:8443 | epochs:0.1  | ep_lens:34.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:32.0 (spuriousM:11.0,  34.4%) | ep_rewards:-0.22 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:409477 | GE:8448 | epochs:0.1  | ep_lens:51.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:41.0 (spuriousM:5.0 ,  12.2%) | ep_rewards:-0.51 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:409648 | GE:8453 | epochs:0.1  | ep_lens:28.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.17 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:409858 | GE:8455 | epochs:0.1  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.22 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:410129 | GE:8463 | epochs:0.1  | ep_lens:46.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.51 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:410496 | GE:8470 | epochs:0.1  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.34 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:410878 | GE:8480 | epochs:0.1  | ep_lens:54.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:45.0 (spuriousM:8.0 ,  17.8%) | ep_rewards:-0.50 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:411160 | GE:8483 | epochs:0.1  | ep_lens:45.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.40 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:411379 | GE:8488 | epochs:0.1  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:13.0,  31.0%) | ep_rewards:-0.36 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:411698 | GE:8493 | epochs:0.1  | ep_lens:47.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:40.0 (spuriousM:4.0 ,  10.0%) | ep_rewards:-0.41 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:412070 | GE:8502 | epochs:0.1  | ep_lens:49.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.55 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:412501 | GE:8512 | epochs:0.1  | ep_lens:54.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:45.0 (spuriousM:12.0,  26.7%) | ep_rewards:-0.50 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:412657 | GE:8516 | epochs:0.1  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.21 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:412838 | GE:8520 | epochs:0.1  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:6.0 ,  22.2%) | ep_rewards:-0.26 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:413083 | GE:8525 | epochs:0.1  | ep_lens:38.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.42 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:413517 | GE:8534 | epochs:0.1  | ep_lens:58.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:48.0 (spuriousM:8.0 ,  16.7%) | ep_rewards:-0.54 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:413867 | GE:8542 | epochs:0.1  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.27 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:414050 | GE:8546 | epochs:0.1  | ep_lens:31.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.28 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:414208 | GE:8552 | epochs:0.1  | ep_lens:34.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:26.0 (spuriousM:8.0 ,  30.8%) | ep_rewards:-0.37 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:414525 | GE:8558 | epochs:0.1  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:9.0 ,  32.1%) | ep_rewards:-0.29 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:415121 | GE:8570 | epochs:0.1  | ep_lens:56.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:51.0 (spuriousM:8.0 ,  15.7%) | ep_rewards:-0.41 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:415280 | GE:8575 | epochs:0.1  | ep_lens:26.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:23.0 (spuriousM:4.0 ,  17.4%) | ep_rewards:-0.21 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:415596 | GE:8578 | epochs:0.1  | ep_lens:58.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.72 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:416097 | GE:8589 | epochs:0.1  | ep_lens:53.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.34 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:416365 | GE:8597 | epochs:0.1  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.30 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:416951 | GE:8611 | epochs:0.1  | ep_lens:69.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:56.0 (spuriousM:4.0 ,   7.1%) | ep_rewards:-0.67 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:417166 | GE:8616 | epochs:0.1  | ep_lens:34.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:26.0 (spuriousM:4.0 ,  15.4%) | ep_rewards:-0.37 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:417363 | GE:8619 | epochs:0.1  | ep_lens:31.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.28 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:417637 | GE:8625 | epochs:0.1  | ep_lens:37.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:32.0 (spuriousM:9.0 ,  28.1%) | ep_rewards:-0.31 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:417982 | GE:8631 | epochs:0.1  | ep_lens:71.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:54.0 (spuriousM:14.0,  25.9%) | ep_rewards:-0.78 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:418352 | GE:8638 | epochs:0.1  | ep_lens:62.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:52.0 (spuriousM:14.0,  26.9%) | ep_rewards:-0.56 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:418674 | GE:8646 | epochs:0.1  | ep_lens:46.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.43 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:419257 | GE:8657 | epochs:0.1  | ep_lens:61.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:53.0 (spuriousM:7.0 ,  13.2%) | ep_rewards:-0.51 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:419692 | GE:8664 | epochs:0.1  | ep_lens:50.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.50 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:419956 | GE:8671 | epochs:0.1  | ep_lens:43.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.47 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:420346 | GE:8679 | epochs:0.1  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.28 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:420594 | GE:8687 | epochs:0.1  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.37 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:420997 | GE:8694 | epochs:0.1  | ep_lens:54.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:44.0 (spuriousM:14.0,  31.8%) | ep_rewards:-0.52 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:421196 | GE:8699 | epochs:0.1  | ep_lens:38.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.44 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:421483 | GE:8704 | epochs:0.1  | ep_lens:54.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:43.0 (spuriousM:7.0 ,  16.3%) | ep_rewards:-0.55 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:421700 | GE:8709 | epochs:0.1  | ep_lens:40.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:34.0 (spuriousM:4.0 ,  11.8%) | ep_rewards:-0.35 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:421742 | GE:8711 | epochs:0.1  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.30  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:422218 | GE:8720 | epochs:0.1  | ep_lens:57.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:45.0 (spuriousM:8.0 ,  17.8%) | ep_rewards:-0.59 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:422501 | GE:8726 | epochs:0.1  | ep_lens:52.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:41.0 (spuriousM:7.0 ,  17.1%) | ep_rewards:-0.54 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:422854 | GE:8733 | epochs:0.1  | ep_lens:49.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:43.0 (spuriousM:5.0 ,  11.6%) | ep_rewards:-0.40 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:423160 | GE:8740 | epochs:0.1  | ep_lens:46.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.46 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:423879 | GE:8753 | epochs:0.1  | ep_lens:84.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:74.0 (spuriousM:7.0 ,   9.5%) | ep_rewards:-0.67 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:424448 | GE:8763 | epochs:0.1  | ep_lens:56.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:47.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.51 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:424715 | GE:8770 | epochs:0.1  | ep_lens:47.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:39.0 (spuriousM:6.0 ,  15.4%) | ep_rewards:-0.44 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:425505 | GE:8785 | epochs:0.1  | ep_lens:79.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:66.0 (spuriousM:12.0,  18.2%) | ep_rewards:-0.72 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:425814 | GE:8792 | epochs:0.1  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.34 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:426280 | GE:8800 | epochs:0.1  | ep_lens:65.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:57.0 (spuriousM:14.0,  24.6%) | ep_rewards:-0.53 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:426538 | GE:8805 | epochs:0.1  | ep_lens:44.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.50 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:426743 | GE:8811 | epochs:0.1  | ep_lens:33.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.32 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:426801 | GE:8813 | epochs:0.1  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.23  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:427856 | GE:8835 | epochs:0.1  | ep_lens:79.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:75.0 (spuriousM:14.0,  18.7%) | ep_rewards:-0.50 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:428193 | GE:8844 | epochs:0.1  | ep_lens:48.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:46.0 (spuriousM:6.0 ,  13.0%) | ep_rewards:-0.29 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:428975 | GE:8861 | epochs:0.1  | ep_lens:68.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:60.0 (spuriousM:7.0 ,  11.7%) | ep_rewards:-0.54 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:429457 | GE:8870 | epochs:0.1  | ep_lens:59.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:51.0 (spuriousM:4.0 ,   7.8%) | ep_rewards:-0.50 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:429803 | GE:8875 | epochs:0.1  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:4.0 ,   9.5%) | ep_rewards:-0.36 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:430185 | GE:8885 | epochs:0.1  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.29 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:430732 | GE:8897 | epochs:0.1  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:6.0 ,  14.0%) | ep_rewards:-0.43 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:431053 | GE:8902 | epochs:0.1  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.37 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:431241 | GE:8908 | epochs:0.1  | ep_lens:40.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.40 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:431616 | GE:8914 | epochs:0.1  | ep_lens:57.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:44.0 (spuriousM:6.0 ,  13.6%) | ep_rewards:-0.61 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:432598 | GE:8936 | epochs:0.1  | ep_lens:84.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:70.0 (spuriousM:3.0 ,   4.3%) | ep_rewards:-0.77 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:433267 | GE:8946 | epochs:0.1  | ep_lens:82.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:73.0 (spuriousM:13.0,  17.8%) | ep_rewards:-0.64 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:433391 | GE:8949 | epochs:0.1  | ep_lens:26.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:23.0 (spuriousM:5.0 ,  21.7%) | ep_rewards:-0.21 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:433502 | GE:8950 | epochs:0.1  | ep_lens:22.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.14 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:433848 | GE:8958 | epochs:0.1  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:6.0 ,  15.4%) | ep_rewards:-0.35 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:434467 | GE:8969 | epochs:0.1  | ep_lens:52.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:46.0 (spuriousM:6.0 ,  13.0%) | ep_rewards:-0.41 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:434791 | GE:8977 | epochs:0.1  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:5.0 ,  14.3%) | ep_rewards:-0.33 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:435154 | GE:8984 | epochs:0.1  | ep_lens:49.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:44.0 (spuriousM:7.0 ,  15.9%) | ep_rewards:-0.37 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:435997 | GE:9002 | epochs:0.1  | ep_lens:64.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:57.0 (spuriousM:12.0,  21.1%) | ep_rewards:-0.50 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:436522 | GE:9012 | epochs:0.1  | ep_lens:51.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:47.0 (spuriousM:7.0 ,  14.9%) | ep_rewards:-0.36 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:436808 | GE:9019 | epochs:0.1  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.33 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:437280 | GE:9029 | epochs:0.1  | ep_lens:58.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:49.0 (spuriousM:8.0 ,  16.3%) | ep_rewards:-0.52 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:437584 | GE:9035 | epochs:0.1  | ep_lens:43.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:39.0 (spuriousM:10.0,  25.6%) | ep_rewards:-0.32 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:437904 | GE:9043 | epochs:0.1  | ep_lens:40.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:34.0 (spuriousM:8.0 ,  23.5%) | ep_rewards:-0.35 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:438340 | GE:9055 | epochs:0.1  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.39 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:438678 | GE:9062 | epochs:0.1  | ep_lens:48.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:41.0 (spuriousM:6.0 ,  14.6%) | ep_rewards:-0.42 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:439235 | GE:9070 | epochs:0.1  | ep_lens:65.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:56.0 (spuriousM:5.0 ,   8.9%) | ep_rewards:-0.55 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:439865 | GE:9083 | epochs:0.2  | ep_lens:65.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:57.0 (spuriousM:10.0,  17.5%) | ep_rewards:-0.53 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:440858 | GE:9104 | epochs:0.2  | ep_lens:80.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:69.0 (spuriousM:4.0 ,   5.8%) | ep_rewards:-0.68 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:441158 | GE:9110 | epochs:0.2  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.25 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:441454 | GE:9116 | epochs:0.2  | ep_lens:44.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.45 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:441656 | GE:9121 | epochs:0.2  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.31 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:442106 | GE:9130 | epochs:0.2  | ep_lens:50.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.35 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:442407 | GE:9136 | epochs:0.2  | ep_lens:47.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:39.0 (spuriousM:6.0 ,  15.4%) | ep_rewards:-0.44 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:442636 | GE:9140 | epochs:0.2  | ep_lens:40.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.38 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:443139 | GE:9153 | epochs:0.2  | ep_lens:49.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:48.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.27 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:443346 | GE:9158 | epochs:0.2  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:6.0 ,  23.1%) | ep_rewards:-0.25 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:443688 | GE:9163 | epochs:0.2  | ep_lens:48.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.42 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:444192 | GE:9175 | epochs:0.2  | ep_lens:66.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:55.0 (spuriousM:3.0 ,   5.5%) | ep_rewards:-0.61 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:444476 | GE:9182 | epochs:0.2  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.32 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:444793 | GE:9188 | epochs:0.2  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.30 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:445057 | GE:9191 | epochs:0.2  | ep_lens:50.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.53 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:445192 | GE:9193 | epochs:0.2  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:445581 | GE:9202 | epochs:0.2  | ep_lens:78.0 | edits:18.0 (spuriousE:17.0,  94.4%) | moves:60.0 (spuriousM:3.0 ,   5.0%) | ep_rewards:0.16  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:445844 | GE:9208 | epochs:0.2  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.24 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:446887 | GE:9217 | epochs:0.2  | ep_lens:100.0 | edits:29.0 (spuriousE:29.0, 100.0%) | moves:71.0 (spuriousM:7.0 ,   9.9%) | ep_rewards:-1.22 | mean_Q:-0.34  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:447319 | GE:9222 | epochs:0.2  | ep_lens:100.0 | edits:54.0 (spuriousE:54.0, 100.0%) | moves:46.0 (spuriousM:15.0,  32.6%) | ep_rewards:-1.85 | mean_Q:-1.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:447838 | GE:9228 | epochs:0.2  | ep_lens:100.0 | edits:42.0 (spuriousE:42.0, 100.0%) | moves:58.0 (spuriousM:34.0,  58.6%) | ep_rewards:-1.55 | mean_Q:-1.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:448681 | GE:9238 | epochs:0.2  | ep_lens:100.0 | edits:30.0 (spuriousE:30.0, 100.0%) | moves:70.0 (spuriousM:53.0,  75.7%) | ep_rewards:-1.25 | mean_Q:-1.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:449395 | GE:9244 | epochs:0.2  | ep_lens:100.0 | edits:31.0 (spuriousE:31.0, 100.0%) | moves:69.0 (spuriousM:33.0,  47.8%) | ep_rewards:-1.27 | mean_Q:-0.92  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:450093 | GE:9253 | epochs:0.2  | ep_lens:100.0 | edits:26.0 (spuriousE:26.0, 100.0%) | moves:74.0 (spuriousM:57.0,  77.0%) | ep_rewards:-1.15 | mean_Q:-0.86  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:450367 | GE:9258 | epochs:0.2  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.86  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:450963 | GE:9264 | epochs:0.2  | ep_lens:67.0 | edits:19.0 (spuriousE:18.0,  94.7%) | moves:48.0 (spuriousM:25.0,  52.1%) | ep_rewards:0.19  | mean_Q:-0.83  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:451967 | GE:9274 | epochs:0.2  | ep_lens:100.0 | edits:37.0 (spuriousE:37.0, 100.0%) | moves:63.0 (spuriousM:24.0,  38.1%) | ep_rewards:-1.42 | mean_Q:-0.88  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:452613 | GE:9284 | epochs:0.2  | ep_lens:100.0 | edits:30.0 (spuriousE:30.0, 100.0%) | moves:70.0 (spuriousM:20.0,  28.6%) | ep_rewards:-1.25 | mean_Q:-0.87  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:452673 | GE:9287 | epochs:0.2  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.71  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:452882 | GE:9291 | epochs:0.2  | ep_lens:30.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.28 | mean_Q:-0.63  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:453119 | GE:9295 | epochs:0.2  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:6.0 ,  18.8%) | ep_rewards:-0.28 | mean_Q:-0.58  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:453465 | GE:9303 | epochs:0.2  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.29 | mean_Q:-0.43  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:453695 | GE:9309 | epochs:0.2  | ep_lens:34.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:32.0 (spuriousM:10.0,  31.2%) | ep_rewards:-0.22 | mean_Q:-0.31  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:454012 | GE:9317 | epochs:0.2  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:7.0 ,  18.4%) | ep_rewards:-0.31 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:454189 | GE:9321 | epochs:0.2  | ep_lens:24.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:454557 | GE:9329 | epochs:0.2  | ep_lens:41.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:39.0 (spuriousM:6.0 ,  15.4%) | ep_rewards:-0.26 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:454832 | GE:9336 | epochs:0.2  | ep_lens:42.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:34.0 (spuriousM:9.0 ,  26.5%) | ep_rewards:-0.41 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:455455 | GE:9350 | epochs:0.2  | ep_lens:64.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:59.0 (spuriousM:4.0 ,   6.8%) | ep_rewards:-0.45 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:455881 | GE:9356 | epochs:0.2  | ep_lens:52.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:47.0 (spuriousM:5.0 ,  10.6%) | ep_rewards:-0.39 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:456093 | GE:9360 | epochs:0.2  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.27 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:456334 | GE:9367 | epochs:0.2  | ep_lens:39.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:29.0 (spuriousM:6.0 ,  20.7%) | ep_rewards:-0.45 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:456769 | GE:9377 | epochs:0.2  | ep_lens:49.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:41.0 (spuriousM:8.0 ,  19.5%) | ep_rewards:-0.45 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:456946 | GE:9382 | epochs:0.2  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.25  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:457225 | GE:9387 | epochs:0.2  | ep_lens:51.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:42.0 (spuriousM:11.0,  26.2%) | ep_rewards:-0.48 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:457450 | GE:9394 | epochs:0.2  | ep_lens:47.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.46 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:457917 | GE:9400 | epochs:0.2  | ep_lens:79.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:65.0 (spuriousM:19.0,  29.2%) | ep_rewards:-0.75 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:458083 | GE:9403 | epochs:0.2  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.30 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:458593 | GE:9412 | epochs:0.2  | ep_lens:91.0 | edits:26.0 (spuriousE:26.0, 100.0%) | moves:65.0 (spuriousM:5.0 ,   7.7%) | ep_rewards:-1.11 | mean_Q:-0.31  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:458852 | GE:9415 | epochs:0.2  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.40  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:459459 | GE:9424 | epochs:0.2  | ep_lens:79.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:67.0 (spuriousM:15.0,  22.4%) | ep_rewards:-0.70 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:459574 | GE:9426 | epochs:0.2  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.31  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:460653 | GE:9446 | epochs:0.2  | ep_lens:99.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:84.0 (spuriousM:3.0 ,   3.6%) | ep_rewards:-0.87 | mean_Q:-0.30  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:461045 | GE:9453 | epochs:0.2  | ep_lens:42.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.26 | mean_Q:-0.31  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:461687 | GE:9464 | epochs:0.2  | ep_lens:63.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:58.0 (spuriousM:7.0 ,  12.1%) | ep_rewards:-0.44 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:462042 | GE:9470 | epochs:0.2  | ep_lens:62.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:52.0 (spuriousM:5.0 ,   9.6%) | ep_rewards:-0.56 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:462525 | GE:9478 | epochs:0.2  | ep_lens:50.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:42.0 (spuriousM:7.0 ,  16.7%) | ep_rewards:-0.45 | mean_Q:-0.30  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:462642 | GE:9481 | epochs:0.2  | ep_lens:29.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:21.0 (spuriousM:4.0 ,  19.0%) | ep_rewards:-0.35 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:463059 | GE:9486 | epochs:0.2  | ep_lens:53.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:45.0 (spuriousM:7.0 ,  15.6%) | ep_rewards:-0.47 | mean_Q:-0.30  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:463372 | GE:9495 | epochs:0.2  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.38 | mean_Q:-0.31  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:463990 | GE:9510 | epochs:0.2  | ep_lens:58.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:51.0 (spuriousM:7.0 ,  13.7%) | ep_rewards:-0.47 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:464183 | GE:9514 | epochs:0.2  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.18 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:464421 | GE:9518 | epochs:0.2  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.33 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:464830 | GE:9526 | epochs:0.2  | ep_lens:62.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:50.0 (spuriousM:4.0 ,   8.0%) | ep_rewards:-0.61 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:465426 | GE:9539 | epochs:0.2  | ep_lens:70.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:55.0 (spuriousM:9.0 ,  16.4%) | ep_rewards:-0.73 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:465723 | GE:9545 | epochs:0.2  | ep_lens:44.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:40.0 (spuriousM:10.0,  25.0%) | ep_rewards:-0.32 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:466288 | GE:9557 | epochs:0.2  | ep_lens:70.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:63.0 (spuriousM:3.0 ,   4.8%) | ep_rewards:-0.53 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:466671 | GE:9566 | epochs:0.2  | ep_lens:54.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:48.0 (spuriousM:5.0 ,  10.4%) | ep_rewards:-0.42 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:466989 | GE:9572 | epochs:0.2  | ep_lens:27.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:26.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.20  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:467446 | GE:9580 | epochs:0.2  | ep_lens:52.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:45.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.44 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:467616 | GE:9585 | epochs:0.2  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:467773 | GE:9588 | epochs:0.2  | ep_lens:25.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.25 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:467975 | GE:9592 | epochs:0.2  | ep_lens:39.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.35 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:468206 | GE:9596 | epochs:0.2  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.29 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:469267 | GE:9619 | epochs:0.2  | ep_lens:91.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:84.0 (spuriousM:9.0 ,  10.7%) | ep_rewards:-0.63 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:469563 | GE:9626 | epochs:0.2  | ep_lens:44.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.45 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:470013 | GE:9635 | epochs:0.2  | ep_lens:55.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:49.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.43 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:470575 | GE:9644 | epochs:0.2  | ep_lens:71.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:59.0 (spuriousM:5.0 ,   8.5%) | ep_rewards:-0.66 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:471014 | GE:9654 | epochs:0.2  | ep_lens:49.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:41.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.45 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:471403 | GE:9659 | epochs:0.2  | ep_lens:52.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:46.0 (spuriousM:7.0 ,  15.2%) | ep_rewards:-0.41 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:471975 | GE:9671 | epochs:0.2  | ep_lens:68.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:54.0 (spuriousM:7.0 ,  13.0%) | ep_rewards:-0.69 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:472597 | GE:9684 | epochs:0.2  | ep_lens:64.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:56.0 (spuriousM:10.0,  17.9%) | ep_rewards:-0.52 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:473100 | GE:9694 | epochs:0.2  | ep_lens:55.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:49.0 (spuriousM:3.0 ,   6.1%) | ep_rewards:-0.43 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:473516 | GE:9703 | epochs:0.2  | ep_lens:62.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:51.0 (spuriousM:9.0 ,  17.6%) | ep_rewards:-0.59 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:473819 | GE:9709 | epochs:0.2  | ep_lens:52.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.64 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:474057 | GE:9714 | epochs:0.2  | ep_lens:38.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.49 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:474740 | GE:9728 | epochs:0.2  | ep_lens:72.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:65.0 (spuriousM:14.0,  21.5%) | ep_rewards:-0.54 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:474967 | GE:9733 | epochs:0.2  | ep_lens:34.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.22 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:475256 | GE:9738 | epochs:0.2  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:6.0 ,  17.1%) | ep_rewards:-0.33 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:475374 | GE:9743 | epochs:0.2  | ep_lens:21.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.21 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:475604 | GE:9748 | epochs:0.2  | ep_lens:33.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:27.0 (spuriousM:6.0 ,  22.2%) | ep_rewards:-0.32 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:475797 | GE:9753 | epochs:0.2  | ep_lens:36.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.36 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:476089 | GE:9759 | epochs:0.2  | ep_lens:32.0 | edits:6.0  (spuriousE:5.0 ,  83.3%) | moves:26.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.69  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:476396 | GE:9764 | epochs:0.2  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.38 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:476488 | GE:9767 | epochs:0.2  | ep_lens:13.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.20  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:477600 | GE:9787 | epochs:0.2  | ep_lens:92.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:80.0 (spuriousM:7.0 ,   8.8%) | ep_rewards:-0.76 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:477793 | GE:9792 | epochs:0.2  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.25 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:478283 | GE:9803 | epochs:0.2  | ep_lens:69.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:59.0 (spuriousM:6.0 ,  10.2%) | ep_rewards:-0.60 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:478692 | GE:9811 | epochs:0.2  | ep_lens:51.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.51 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:478946 | GE:9815 | epochs:0.2  | ep_lens:50.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:41.0 (spuriousM:6.0 ,  14.6%) | ep_rewards:-0.48 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:479251 | GE:9822 | epochs:0.2  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:6.0 ,  13.6%) | ep_rewards:-0.40 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:479566 | GE:9829 | epochs:0.2  | ep_lens:49.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:44.0 (spuriousM:9.0 ,  20.5%) | ep_rewards:-0.37 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:479814 | GE:9835 | epochs:0.2  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:6.0 ,  18.8%) | ep_rewards:-0.25 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:480029 | GE:9840 | epochs:0.2  | ep_lens:36.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.33 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:480264 | GE:9847 | epochs:0.2  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.30 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:480363 | GE:9850 | epochs:0.2  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:480929 | GE:9862 | epochs:0.2  | ep_lens:67.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:64.0 (spuriousM:22.0,  34.4%) | ep_rewards:-0.41 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:481194 | GE:9868 | epochs:0.2  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:9.0 ,  24.3%) | ep_rewards:-0.34 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:481432 | GE:9874 | epochs:0.2  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:8.0 ,  25.8%) | ep_rewards:-0.28 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:481859 | GE:9883 | epochs:0.2  | ep_lens:49.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.35 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:482077 | GE:9889 | epochs:0.2  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:8.0 ,  26.7%) | ep_rewards:-0.30 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:482315 | GE:9895 | epochs:0.2  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.37 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:482505 | GE:9899 | epochs:0.2  | ep_lens:30.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.15 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:482879 | GE:9908 | epochs:0.2  | ep_lens:53.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:48.0 (spuriousM:8.0 ,  16.7%) | ep_rewards:-0.39 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:483362 | GE:9919 | epochs:0.2  | ep_lens:51.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:47.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.36 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:483578 | GE:9923 | epochs:0.2  | ep_lens:35.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.38 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:483979 | GE:9932 | epochs:0.2  | ep_lens:37.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:36.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.79  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:484247 | GE:9935 | epochs:0.2  | ep_lens:44.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.47 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:485095 | GE:9950 | epochs:0.2  | ep_lens:84.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:76.0 (spuriousM:3.0 ,   3.9%) | ep_rewards:-0.62 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:485956 | GE:9963 | epochs:0.2  | ep_lens:100.0 | edits:26.0 (spuriousE:26.0, 100.0%) | moves:74.0 (spuriousM:10.0,  13.5%) | ep_rewards:-1.15 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:486456 | GE:9970 | epochs:0.2  | ep_lens:61.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:49.0 (spuriousM:3.0 ,   6.1%) | ep_rewards:-0.61 | mean_Q:-0.34  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:486819 | GE:9974 | epochs:0.2  | ep_lens:60.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:50.0 (spuriousM:12.0,  24.0%) | ep_rewards:-0.55 | mean_Q:-0.36  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:488090 | GE:10002 | epochs:0.2  | ep_lens:100.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:85.0 (spuriousM:5.0 ,   5.9%) | ep_rewards:-0.88 | mean_Q:-0.36  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:488420 | GE:10009 | epochs:0.2  | ep_lens:64.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:52.0 (spuriousM:3.0 ,   5.8%) | ep_rewards:-0.62 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:489025 | GE:10020 | epochs:0.2  | ep_lens:82.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:67.0 (spuriousM:21.0,  31.3%) | ep_rewards:-0.79 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:489263 | GE:10026 | epochs:0.2  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.31 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:489384 | GE:10031 | epochs:0.2  | ep_lens:22.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.16 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:489485 | GE:10032 | epochs:0.2  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:489852 | GE:10038 | epochs:0.2  | ep_lens:49.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:45.0 (spuriousM:5.0 ,  11.1%) | ep_rewards:-0.35 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:490100 | GE:10046 | epochs:0.2  | ep_lens:42.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.41 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:490213 | GE:10048 | epochs:0.2  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.21  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:490439 | GE:10052 | epochs:0.2  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.26 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:490697 | GE:10054 | epochs:0.2  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.39 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:491190 | GE:10064 | epochs:0.2  | ep_lens:68.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:58.0 (spuriousM:5.0 ,   8.6%) | ep_rewards:-0.59 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:491459 | GE:10068 | epochs:0.2  | ep_lens:47.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.66 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:492011 | GE:10079 | epochs:0.2  | ep_lens:55.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:48.0 (spuriousM:6.0 ,  12.5%) | ep_rewards:-0.45 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:492300 | GE:10085 | epochs:0.2  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:8.0 ,  27.6%) | ep_rewards:-0.27 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:492724 | GE:10091 | epochs:0.2  | ep_lens:69.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:58.0 (spuriousM:14.0,  24.1%) | ep_rewards:-0.62 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:493256 | GE:10104 | epochs:0.2  | ep_lens:66.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:57.0 (spuriousM:4.0 ,   7.0%) | ep_rewards:-0.56 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:493699 | GE:10113 | epochs:0.2  | ep_lens:51.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.38 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:494284 | GE:10125 | epochs:0.2  | ep_lens:71.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:65.0 (spuriousM:6.0 ,   9.2%) | ep_rewards:-0.51 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:494753 | GE:10133 | epochs:0.2  | ep_lens:53.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.34 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:495267 | GE:10141 | epochs:0.2  | ep_lens:64.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:52.0 (spuriousM:6.0 ,  11.5%) | ep_rewards:-0.62 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:495810 | GE:10152 | epochs:0.2  | ep_lens:69.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:64.0 (spuriousM:4.0 ,   6.2%) | ep_rewards:-0.47 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:496556 | GE:10167 | epochs:0.2  | ep_lens:74.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:71.0 (spuriousM:3.0 ,   4.2%) | ep_rewards:-0.45 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:497413 | GE:10182 | epochs:0.2  | ep_lens:75.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:62.0 (spuriousM:4.0 ,   6.5%) | ep_rewards:-0.70 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:497702 | GE:10190 | epochs:0.2  | ep_lens:41.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.26 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:498201 | GE:10195 | epochs:0.2  | ep_lens:59.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:53.0 (spuriousM:10.0,  18.9%) | ep_rewards:-0.45 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:498715 | GE:10204 | epochs:0.2  | ep_lens:69.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:62.0 (spuriousM:3.0 ,   4.8%) | ep_rewards:-0.52 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:499146 | GE:10211 | epochs:0.2  | ep_lens:51.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:41.0 (spuriousM:8.0 ,  19.5%) | ep_rewards:-0.51 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:499419 | GE:10219 | epochs:0.2  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.37 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:499756 | GE:10222 | epochs:0.2  | ep_lens:36.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:35.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.79  | mean_Q:-0.29  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:499901 | GE:10227 | epochs:0.2  | ep_lens:30.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.28 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:500383 | GE:10235 | epochs:0.2  | ep_lens:72.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.81 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:500615 | GE:10239 | epochs:0.2  | ep_lens:49.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.50 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:500872 | GE:10243 | epochs:0.2  | ep_lens:53.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:43.0 (spuriousM:13.0,  30.2%) | ep_rewards:-0.52 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:501138 | GE:10248 | epochs:0.2  | ep_lens:47.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.54 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:501602 | GE:10254 | epochs:0.2  | ep_lens:69.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:58.0 (spuriousM:1.0 ,   1.7%) | ep_rewards:-0.62 | mean_Q:-0.28  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:501839 | GE:10261 | epochs:0.2  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.26 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:502274 | GE:10268 | epochs:0.2  | ep_lens:55.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:48.0 (spuriousM:2.0 ,   4.2%) | ep_rewards:-0.45 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:503210 | GE:10282 | epochs:0.2  | ep_lens:85.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:80.0 (spuriousM:6.0 ,   7.5%) | ep_rewards:-0.55 | mean_Q:-0.32  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:503952 | GE:10296 | epochs:0.2  | ep_lens:75.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:66.0 (spuriousM:5.0 ,   7.6%) | ep_rewards:-0.60 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:504423 | GE:10304 | epochs:0.2  | ep_lens:54.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:54.0 (spuriousM:14.0,  25.9%) | ep_rewards:-0.27 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:505221 | GE:10318 | epochs:0.2  | ep_lens:76.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:67.0 (spuriousM:3.0 ,   4.5%) | ep_rewards:-0.61 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:505815 | GE:10333 | epochs:0.2  | ep_lens:85.0 | edits:20.0 (spuriousE:20.0, 100.0%) | moves:65.0 (spuriousM:7.0 ,  10.8%) | ep_rewards:-0.93 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:506051 | GE:10340 | epochs:0.2  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.29 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:506284 | GE:10343 | epochs:0.2  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:6.0 ,  16.2%) | ep_rewards:-0.31 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:506520 | GE:10350 | epochs:0.2  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.10  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:506896 | GE:10358 | epochs:0.2  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:6.0 ,  14.3%) | ep_rewards:-0.36 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:507149 | GE:10364 | epochs:0.2  | ep_lens:33.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.19 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:508173 | GE:10385 | epochs:0.2  | ep_lens:78.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:71.0 (spuriousM:18.0,  25.4%) | ep_rewards:-0.57 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:509139 | GE:10405 | epochs:0.2  | ep_lens:81.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:68.0 (spuriousM:9.0 ,  13.2%) | ep_rewards:-0.73 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:509211 | GE:10407 | epochs:0.2  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.25  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:509881 | GE:10419 | epochs:0.2  | ep_lens:65.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:59.0 (spuriousM:4.0 ,   6.8%) | ep_rewards:-0.48 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:510193 | GE:10425 | epochs:0.2  | ep_lens:45.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.40 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:510502 | GE:10433 | epochs:0.2  | ep_lens:47.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:43.0 (spuriousM:8.0 ,  18.6%) | ep_rewards:-0.34 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:511246 | GE:10449 | epochs:0.2  | ep_lens:66.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:63.0 (spuriousM:12.0,  19.0%) | ep_rewards:-0.41 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:511905 | GE:10462 | epochs:0.2  | ep_lens:62.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:57.0 (spuriousM:6.0 ,  10.5%) | ep_rewards:-0.44 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:512522 | GE:10476 | epochs:0.2  | ep_lens:58.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:54.0 (spuriousM:2.0 ,   3.7%) | ep_rewards:-0.39 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:512794 | GE:10479 | epochs:0.2  | ep_lens:49.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.52 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:512892 | GE:10484 | epochs:0.2  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:513514 | GE:10492 | epochs:0.2  | ep_lens:57.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:52.0 (spuriousM:5.0 ,   9.6%) | ep_rewards:-0.41 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:514174 | GE:10503 | epochs:0.2  | ep_lens:70.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:58.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.65 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:514689 | GE:10512 | epochs:0.2  | ep_lens:66.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:54.0 (spuriousM:5.0 ,   9.3%) | ep_rewards:-0.63 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:515003 | GE:10517 | epochs:0.2  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.43 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:515111 | GE:10522 | epochs:0.2  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.25  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:515485 | GE:10529 | epochs:0.2  | ep_lens:48.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:40.0 (spuriousM:7.0 ,  17.5%) | ep_rewards:-0.44 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:515690 | GE:10533 | epochs:0.2  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:6.0 ,  20.7%) | ep_rewards:-0.30 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:516000 | GE:10540 | epochs:0.2  | ep_lens:44.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.42 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:516480 | GE:10550 | epochs:0.2  | ep_lens:58.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:54.0 (spuriousM:2.0 ,   3.7%) | ep_rewards:-0.39 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:516683 | GE:10555 | epochs:0.2  | ep_lens:48.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:35.0 (spuriousM:7.0 ,  20.0%) | ep_rewards:-0.57 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:516929 | GE:10561 | epochs:0.2  | ep_lens:45.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.45 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:517037 | GE:10563 | epochs:0.2  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:517565 | GE:10571 | epochs:0.2  | ep_lens:55.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:50.0 (spuriousM:4.0 ,   8.0%) | ep_rewards:-0.40 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:517696 | GE:10576 | epochs:0.2  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:518360 | GE:10588 | epochs:0.2  | ep_lens:77.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:64.0 (spuriousM:7.0 ,  10.9%) | ep_rewards:-0.71 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:518753 | GE:10595 | epochs:0.2  | ep_lens:50.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:45.0 (spuriousM:5.0 ,  11.1%) | ep_rewards:-0.38 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:518942 | GE:10601 | epochs:0.2  | ep_lens:34.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:26.0 (spuriousM:8.0 ,  30.8%) | ep_rewards:-0.37 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:519422 | GE:10611 | epochs:0.2  | ep_lens:47.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.49 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:519677 | GE:10619 | epochs:0.2  | ep_lens:37.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.39 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:520511 | GE:10636 | epochs:0.2  | ep_lens:100.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:86.0 (spuriousM:21.0,  24.4%) | ep_rewards:-0.85 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:520715 | GE:10641 | epochs:0.2  | ep_lens:38.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.34 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:521144 | GE:10649 | epochs:0.2  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:5.0 ,  11.4%) | ep_rewards:-0.40 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:521346 | GE:10652 | epochs:0.2  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:521770 | GE:10662 | epochs:0.2  | ep_lens:58.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:47.0 (spuriousM:6.0 ,  12.8%) | ep_rewards:-0.57 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:522081 | GE:10668 | epochs:0.2  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:8.0 ,  20.0%) | ep_rewards:-0.38 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:522454 | GE:10676 | epochs:0.2  | ep_lens:55.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:48.0 (spuriousM:2.0 ,   4.2%) | ep_rewards:-0.45 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:522655 | GE:10681 | epochs:0.2  | ep_lens:29.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.20 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:522923 | GE:10687 | epochs:0.2  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:8.0 ,  21.6%) | ep_rewards:-0.34 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:523479 | GE:10697 | epochs:0.2  | ep_lens:56.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:54.0 (spuriousM:6.0 ,  11.1%) | ep_rewards:-0.33 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:523819 | GE:10705 | epochs:0.2  | ep_lens:43.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:41.0 (spuriousM:8.0 ,  19.5%) | ep_rewards:-0.27 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:524073 | GE:10707 | epochs:0.2  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:6.0 ,  15.0%) | ep_rewards:-0.38 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:524490 | GE:10715 | epochs:0.2  | ep_lens:49.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:43.0 (spuriousM:6.0 ,  14.0%) | ep_rewards:-0.40 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:525107 | GE:10722 | epochs:0.2  | ep_lens:100.0 | edits:91.0 (spuriousE:91.0, 100.0%) | moves:9.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:-2.77 | mean_Q:-1.67  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:525951 | GE:10730 | epochs:0.2  | ep_lens:100.0 | edits:64.0 (spuriousE:64.0, 100.0%) | moves:36.0 (spuriousM:16.0,  44.4%) | ep_rewards:-2.10 | mean_Q:-1.92  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:526840 | GE:10740 | epochs:0.2  | ep_lens:100.0 | edits:52.0 (spuriousE:52.0, 100.0%) | moves:48.0 (spuriousM:27.0,  56.2%) | ep_rewards:-1.80 | mean_Q:-1.38  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:527477 | GE:10750 | epochs:0.2  | ep_lens:74.0 | edits:26.0 (spuriousE:26.0, 100.0%) | moves:48.0 (spuriousM:19.0,  39.6%) | ep_rewards:-1.02 | mean_Q:-0.88  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:528094 | GE:10761 | epochs:0.2  | ep_lens:75.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:63.0 (spuriousM:32.0,  50.8%) | ep_rewards:-0.68 | mean_Q:-0.40  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:528801 | GE:10775 | epochs:0.2  | ep_lens:90.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:76.0 (spuriousM:48.0,  63.2%) | ep_rewards:-0.80 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:529053 | GE:10782 | epochs:0.2  | ep_lens:30.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:30.0 (spuriousM:6.0 ,  20.0%) | ep_rewards:-0.15 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:529585 | GE:10794 | epochs:0.2  | ep_lens:58.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:54.0 (spuriousM:23.0,  42.6%) | ep_rewards:-0.39 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:529671 | GE:10795 | epochs:0.2  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.27  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:529761 | GE:10797 | epochs:0.2  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.26  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:530048 | GE:10804 | epochs:0.2  | ep_lens:46.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:39.0 (spuriousM:9.0 ,  23.1%) | ep_rewards:-0.41 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:530372 | GE:10811 | epochs:0.2  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:8.0 ,  21.1%) | ep_rewards:-0.34 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:530469 | GE:10813 | epochs:0.2  | ep_lens:9.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:8.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:530778 | GE:10820 | epochs:0.2  | ep_lens:40.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:37.0 (spuriousM:10.0,  27.0%) | ep_rewards:-0.28 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:530954 | GE:10826 | epochs:0.2  | ep_lens:40.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:34.0 (spuriousM:13.0,  38.2%) | ep_rewards:-0.35 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:531703 | GE:10841 | epochs:0.2  | ep_lens:80.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:75.0 (spuriousM:4.0 ,   5.3%) | ep_rewards:-0.53 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:531981 | GE:10845 | epochs:0.2  | ep_lens:52.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:37.0 (spuriousM:10.0,  27.0%) | ep_rewards:-0.64 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:532145 | GE:10850 | epochs:0.2  | ep_lens:27.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:23.0 (spuriousM:5.0 ,  21.7%) | ep_rewards:-0.24 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:532368 | GE:10854 | epochs:0.2  | ep_lens:31.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.18 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:532433 | GE:10858 | epochs:0.2  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:532634 | GE:10863 | epochs:0.2  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:5.0 ,  20.0%) | ep_rewards:-0.16 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:532793 | GE:10868 | epochs:0.2  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:6.0 ,  25.0%) | ep_rewards:-0.24 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:533715 | GE:10885 | epochs:0.2  | ep_lens:77.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:67.0 (spuriousM:4.0 ,   6.0%) | ep_rewards:-0.64 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:534003 | GE:10893 | epochs:0.2  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:7.0 ,  19.4%) | ep_rewards:-0.27 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:534118 | GE:10897 | epochs:0.2  | ep_lens:23.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:20.0 (spuriousM:5.0 ,  25.0%) | ep_rewards:-0.19 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:534563 | GE:10908 | epochs:0.2  | ep_lens:54.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:44.0 (spuriousM:5.0 ,  11.4%) | ep_rewards:-0.52 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:534710 | GE:10911 | epochs:0.2  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:0.04   | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:535215 | GE:10918 | epochs:0.2  | ep_lens:61.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:56.0 (spuriousM:6.0 ,  10.7%) | ep_rewards:-0.43 | mean_Q:0.00   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:535456 | GE:10922 | epochs:0.2  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.30 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:535917 | GE:10932 | epochs:0.2  | ep_lens:53.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:49.0 (spuriousM:11.0,  22.4%) | ep_rewards:-0.37 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:536987 | GE:10951 | epochs:0.2  | ep_lens:94.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:83.0 (spuriousM:12.0,  14.5%) | ep_rewards:-0.75 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:537173 | GE:10955 | epochs:0.2  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:6.0 ,  19.4%) | ep_rewards:-0.28 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:537679 | GE:10962 | epochs:0.2  | ep_lens:54.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:49.0 (spuriousM:6.0 ,  12.2%) | ep_rewards:-0.40 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:537939 | GE:10969 | epochs:0.2  | ep_lens:39.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:33.0 (spuriousM:6.0 ,  18.2%) | ep_rewards:-0.35 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:538239 | GE:10976 | epochs:0.2  | ep_lens:40.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.28 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:538330 | GE:10978 | epochs:0.2  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:539249 | GE:10999 | epochs:0.2  | ep_lens:78.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:63.0 (spuriousM:3.0 ,   4.8%) | ep_rewards:-0.77 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:539509 | GE:11003 | epochs:0.2  | ep_lens:43.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:41.0 (spuriousM:10.0,  24.4%) | ep_rewards:-0.27 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:539941 | GE:11013 | epochs:0.2  | ep_lens:62.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:50.0 (spuriousM:7.0 ,  14.0%) | ep_rewards:-0.61 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:540369 | GE:11023 | epochs:0.2  | ep_lens:60.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:52.0 (spuriousM:14.0,  26.9%) | ep_rewards:-0.50 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:541079 | GE:11036 | epochs:0.2  | ep_lens:75.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:60.0 (spuriousM:7.0 ,  11.7%) | ep_rewards:-0.75 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:541558 | GE:11048 | epochs:0.2  | ep_lens:59.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:53.0 (spuriousM:5.0 ,   9.4%) | ep_rewards:-0.45 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:541946 | GE:11057 | epochs:0.2  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:6.0 ,  16.7%) | ep_rewards:-0.39 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:542449 | GE:11069 | epochs:0.2  | ep_lens:57.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.51 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:542755 | GE:11073 | epochs:0.2  | ep_lens:51.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:44.0 (spuriousM:11.0,  25.0%) | ep_rewards:-0.43 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:542865 | GE:11078 | epochs:0.2  | ep_lens:22.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:21.0 (spuriousM:3.0 ,  14.3%) | ep_rewards:-0.14 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:543004 | GE:11081 | epochs:0.2  | ep_lens:27.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:23.0 (spuriousM:5.0 ,  21.7%) | ep_rewards:-0.24 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:543207 | GE:11084 | epochs:0.2  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.23 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:543443 | GE:11091 | epochs:0.2  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.28 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:543989 | GE:11101 | epochs:0.2  | ep_lens:56.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:52.0 (spuriousM:4.0 ,   7.7%) | ep_rewards:-0.38 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:544269 | GE:11109 | epochs:0.2  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:6.0 ,  17.1%) | ep_rewards:-0.36 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:544804 | GE:11118 | epochs:0.2  | ep_lens:62.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:58.0 (spuriousM:15.0,  25.9%) | ep_rewards:-0.41 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:544963 | GE:11124 | epochs:0.2  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.22 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:545346 | GE:11132 | epochs:0.2  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:8.0 ,  21.1%) | ep_rewards:-0.31 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:545608 | GE:11140 | epochs:0.2  | ep_lens:42.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:41.0 (spuriousM:9.0 ,  22.0%) | ep_rewards:-0.24 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:545847 | GE:11147 | epochs:0.2  | ep_lens:38.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.34 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:546298 | GE:11155 | epochs:0.2  | ep_lens:55.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:48.0 (spuriousM:11.0,  22.9%) | ep_rewards:-0.45 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:546477 | GE:11158 | epochs:0.2  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.26 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:546782 | GE:11164 | epochs:0.2  | ep_lens:48.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:44.0 (spuriousM:8.0 ,  18.2%) | ep_rewards:-0.34 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:547351 | GE:11175 | epochs:0.2  | ep_lens:58.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:52.0 (spuriousM:5.0 ,   9.6%) | ep_rewards:-0.44 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:547646 | GE:11184 | epochs:0.2  | ep_lens:43.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:39.0 (spuriousM:6.0 ,  15.4%) | ep_rewards:-0.32 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:547837 | GE:11187 | epochs:0.2  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.31 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:547987 | GE:11190 | epochs:0.2  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:4.0 ,  16.7%) | ep_rewards:-0.24 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:548115 | GE:11193 | epochs:0.2  | ep_lens:19.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.20  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:548207 | GE:11196 | epochs:0.2  | ep_lens:18.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:2.0 ,  11.1%) | ep_rewards:-0.09 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:549379 | GE:11222 | epochs:0.2  | ep_lens:84.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:81.0 (spuriousM:5.0 ,   6.2%) | ep_rewards:-0.50 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:550048 | GE:11236 | epochs:0.2  | ep_lens:73.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:68.0 (spuriousM:6.0 ,   8.8%) | ep_rewards:-0.49 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:550535 | GE:11244 | epochs:0.2  | ep_lens:56.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:54.0 (spuriousM:8.0 ,  14.8%) | ep_rewards:-0.33 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:551286 | GE:11260 | epochs:0.2  | ep_lens:70.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:60.0 (spuriousM:3.0 ,   5.0%) | ep_rewards:-0.60 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:551691 | GE:11268 | epochs:0.2  | ep_lens:45.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:42.0 (spuriousM:4.0 ,   9.5%) | ep_rewards:-0.30 | mean_Q:-0.32  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:552285 | GE:11279 | epochs:0.2  | ep_lens:68.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:61.0 (spuriousM:7.0 ,  11.5%) | ep_rewards:-0.52 | mean_Q:-0.31  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:552523 | GE:11283 | epochs:0.2  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:11.0,  31.4%) | ep_rewards:-0.33 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:552711 | GE:11289 | epochs:0.2  | ep_lens:36.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.33 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:553078 | GE:11295 | epochs:0.2  | ep_lens:55.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:50.0 (spuriousM:5.0 ,  10.0%) | ep_rewards:-0.40 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:553954 | GE:11310 | epochs:0.2  | ep_lens:85.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:71.0 (spuriousM:11.0,  15.5%) | ep_rewards:-0.78 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:554257 | GE:11315 | epochs:0.2  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:11.0,  26.8%) | ep_rewards:-0.33 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:554562 | GE:11324 | epochs:0.2  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:5.0 ,  13.2%) | ep_rewards:-0.34 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:554776 | GE:11331 | epochs:0.2  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:5.0 ,  17.2%) | ep_rewards:-0.33 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:556043 | GE:11354 | epochs:0.2  | ep_lens:100.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:82.0 (spuriousM:7.0 ,   8.5%) | ep_rewards:-0.95 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:556246 | GE:11359 | epochs:0.2  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:5.0 ,  14.3%) | ep_rewards:-0.36 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:556539 | GE:11364 | epochs:0.2  | ep_lens:44.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:35.0 (spuriousM:6.0 ,  17.1%) | ep_rewards:-0.45 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:556722 | GE:11367 | epochs:0.2  | ep_lens:29.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:27.0 (spuriousM:6.0 ,  22.2%) | ep_rewards:-0.20 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:557167 | GE:11375 | epochs:0.2  | ep_lens:49.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.32 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:557507 | GE:11384 | epochs:0.2  | ep_lens:48.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:41.0 (spuriousM:6.0 ,  14.6%) | ep_rewards:-0.42 | mean_Q:-0.30  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:557839 | GE:11389 | epochs:0.2  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:7.0 ,  18.4%) | ep_rewards:-0.37 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:558220 | GE:11397 | epochs:0.2  | ep_lens:53.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:45.0 (spuriousM:9.0 ,  20.0%) | ep_rewards:-0.47 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:558667 | GE:11403 | epochs:0.2  | ep_lens:58.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:52.0 (spuriousM:4.0 ,   7.7%) | ep_rewards:-0.44 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:558960 | GE:11412 | epochs:0.2  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:7.0 ,  22.6%) | ep_rewards:-0.37 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:559034 | GE:11415 | epochs:0.2  | ep_lens:9.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:8.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.23  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:559569 | GE:11427 | epochs:0.2  | ep_lens:59.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:52.0 (spuriousM:5.0 ,   9.6%) | ep_rewards:-0.47 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:559956 | GE:11433 | epochs:0.2  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:10.0,  23.8%) | ep_rewards:-0.39 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:560205 | GE:11439 | epochs:0.2  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.32 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:560768 | GE:11445 | epochs:0.2  | ep_lens:65.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:61.0 (spuriousM:12.0,  19.7%) | ep_rewards:-0.43 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:561045 | GE:11454 | epochs:0.2  | ep_lens:46.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:36.0 (spuriousM:5.0 ,  13.9%) | ep_rewards:-0.48 | mean_Q:-0.30  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:561550 | GE:11461 | epochs:0.2  | ep_lens:60.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.55 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:561938 | GE:11467 | epochs:0.2  | ep_lens:53.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:47.0 (spuriousM:9.0 ,  19.1%) | ep_rewards:-0.42 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:562034 | GE:11472 | epochs:0.2  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.28  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:562312 | GE:11476 | epochs:0.2  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.25 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:562520 | GE:11482 | epochs:0.2  | ep_lens:34.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:28.0 (spuriousM:7.0 ,  25.0%) | ep_rewards:-0.32 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:562889 | GE:11487 | epochs:0.2  | ep_lens:57.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:45.0 (spuriousM:8.0 ,  17.8%) | ep_rewards:-0.59 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:563222 | GE:11494 | epochs:0.2  | ep_lens:45.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.43 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:563276 | GE:11497 | epochs:0.2  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.27  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:563339 | GE:11499 | epochs:0.2  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.28  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:563522 | GE:11503 | epochs:0.2  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:9.0 ,  26.5%) | ep_rewards:-0.32 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:564314 | GE:11519 | epochs:0.2  | ep_lens:83.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:74.0 (spuriousM:17.0,  23.0%) | ep_rewards:-0.64 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:564863 | GE:11531 | epochs:0.2  | ep_lens:57.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:51.0 (spuriousM:7.0 ,  13.7%) | ep_rewards:-0.44 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:565338 | GE:11541 | epochs:0.2  | ep_lens:60.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:51.0 (spuriousM:4.0 ,   7.8%) | ep_rewards:-0.53 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:565651 | GE:11546 | epochs:0.2  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:7.0 ,  17.9%) | ep_rewards:-0.38 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:566081 | GE:11555 | epochs:0.2  | ep_lens:59.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:47.0 (spuriousM:11.0,  23.4%) | ep_rewards:-0.60 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:566300 | GE:11560 | epochs:0.2  | ep_lens:33.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.22 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:566887 | GE:11571 | epochs:0.2  | ep_lens:58.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:49.0 (spuriousM:4.0 ,   8.2%) | ep_rewards:-0.52 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:568140 | GE:11604 | epochs:0.2  | ep_lens:88.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:74.0 (spuriousM:3.0 ,   4.1%) | ep_rewards:-0.79 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:568251 | GE:11606 | epochs:0.2  | ep_lens:4.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:3.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.95  | mean_Q:-0.04  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:568463 | GE:11610 | epochs:0.2  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.29 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:568615 | GE:11613 | epochs:0.2  | ep_lens:26.0 | edits:5.0  (spuriousE:4.0 ,  80.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:0.74  | mean_Q:-0.08  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:569340 | GE:11629 | epochs:0.2  | ep_lens:75.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:65.0 (spuriousM:9.0 ,  13.8%) | ep_rewards:-0.63 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:569594 | GE:11638 | epochs:0.2  | ep_lens:42.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:34.0 (spuriousM:12.0,  35.3%) | ep_rewards:-0.41 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:569732 | GE:11642 | epochs:0.2  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.15  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:569922 | GE:11647 | epochs:0.2  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.31 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:570255 | GE:11654 | epochs:0.2  | ep_lens:36.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.23 | mean_Q:-0.00  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:570530 | GE:11662 | epochs:0.2  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:5.0 ,  14.3%) | ep_rewards:-0.33 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:570713 | GE:11667 | epochs:0.2  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:13.0,  40.6%) | ep_rewards:-0.37 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:570849 | GE:11669 | epochs:0.2  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.05  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:571182 | GE:11679 | epochs:0.2  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:4.0 ,   9.5%) | ep_rewards:-0.39 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:571390 | GE:11683 | epochs:0.2  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.26 | mean_Q:-0.01  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:571629 | GE:11689 | epochs:0.2  | ep_lens:39.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:37.0 (spuriousM:6.0 ,  16.2%) | ep_rewards:-0.25 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:571764 | GE:11693 | epochs:0.2  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.10  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:572136 | GE:11699 | epochs:0.2  | ep_lens:51.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.41 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:572394 | GE:11703 | epochs:0.2  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:5.0 ,  13.2%) | ep_rewards:-0.34 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:572596 | GE:11709 | epochs:0.2  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.21 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:572698 | GE:11713 | epochs:0.2  | ep_lens:10.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:9.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:573118 | GE:11724 | epochs:0.2  | ep_lens:56.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:52.0 (spuriousM:19.0,  36.5%) | ep_rewards:-0.38 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:573542 | GE:11729 | epochs:0.2  | ep_lens:53.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:49.0 (spuriousM:9.0 ,  18.4%) | ep_rewards:-0.37 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:573924 | GE:11738 | epochs:0.2  | ep_lens:60.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:50.0 (spuriousM:6.0 ,  12.0%) | ep_rewards:-0.55 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:574017 | GE:11739 | epochs:0.2  | ep_lens:21.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.11 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:574369 | GE:11748 | epochs:0.2  | ep_lens:51.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:46.0 (spuriousM:10.0,  21.7%) | ep_rewards:-0.38 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:575465 | GE:11771 | epochs:0.2  | ep_lens:78.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:70.0 (spuriousM:3.0 ,   4.3%) | ep_rewards:-0.59 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:575913 | GE:11781 | epochs:0.2  | ep_lens:49.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:43.0 (spuriousM:4.0 ,   9.3%) | ep_rewards:-0.40 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:576287 | GE:11788 | epochs:0.2  | ep_lens:45.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.30 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:576456 | GE:11794 | epochs:0.2  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:576593 | GE:11797 | epochs:0.2  | ep_lens:26.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:22.0 (spuriousM:3.0 ,  13.6%) | ep_rewards:-0.23 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:576958 | GE:11803 | epochs:0.2  | ep_lens:49.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:46.0 (spuriousM:6.0 ,  13.0%) | ep_rewards:-0.32 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:577332 | GE:11812 | epochs:0.2  | ep_lens:53.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:47.0 (spuriousM:8.0 ,  17.0%) | ep_rewards:-0.42 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:577740 | GE:11819 | epochs:0.2  | ep_lens:56.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:47.0 (spuriousM:15.0,  31.9%) | ep_rewards:-0.51 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:577972 | GE:11825 | epochs:0.2  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:11.0,  28.9%) | ep_rewards:-0.37 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:578127 | GE:11829 | epochs:0.2  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.20 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:578566 | GE:11839 | epochs:0.2  | ep_lens:61.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:49.0 (spuriousM:9.0 ,  18.4%) | ep_rewards:-0.61 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:579537 | GE:11857 | epochs:0.2  | ep_lens:77.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:71.0 (spuriousM:14.0,  19.7%) | ep_rewards:-0.54 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:580239 | GE:11872 | epochs:0.2  | ep_lens:60.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:53.0 (spuriousM:6.0 ,  11.3%) | ep_rewards:-0.48 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:580598 | GE:11879 | epochs:0.2  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.27 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:580927 | GE:11885 | epochs:0.2  | ep_lens:57.0 | edits:8.0  (spuriousE:7.0 ,  87.5%) | moves:49.0 (spuriousM:17.0,  34.7%) | ep_rewards:-0.45 | mean_Q:-0.19  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:581312 | GE:11894 | epochs:0.2  | ep_lens:52.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:47.0 (spuriousM:12.0,  25.5%) | ep_rewards:-0.39 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:581727 | GE:11905 | epochs:0.2  | ep_lens:55.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:43.0 (spuriousM:10.0,  23.3%) | ep_rewards:-0.58 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:582258 | GE:11915 | epochs:0.2  | ep_lens:60.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:51.0 (spuriousM:8.0 ,  15.7%) | ep_rewards:-0.53 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:582565 | GE:11922 | epochs:0.2  | ep_lens:56.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:45.0 (spuriousM:17.0,  37.8%) | ep_rewards:-0.56 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:583338 | GE:11937 | epochs:0.2  | ep_lens:68.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:58.0 (spuriousM:4.0 ,   6.9%) | ep_rewards:-0.59 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:583963 | GE:11950 | epochs:0.2  | ep_lens:61.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:51.0 (spuriousM:9.0 ,  17.6%) | ep_rewards:-0.56 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:584171 | GE:11953 | epochs:0.2  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.23 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:584530 | GE:11959 | epochs:0.2  | ep_lens:66.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:53.0 (spuriousM:9.0 ,  17.0%) | ep_rewards:-0.66 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:584778 | GE:11963 | epochs:0.2  | ep_lens:42.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:40.0 (spuriousM:11.0,  27.5%) | ep_rewards:-0.26 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:585635 | GE:11981 | epochs:0.2  | ep_lens:79.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:62.0 (spuriousM:2.0 ,   3.2%) | ep_rewards:-0.82 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:585880 | GE:11985 | epochs:0.2  | ep_lens:41.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:28.0 (spuriousM:4.0 ,  14.3%) | ep_rewards:-0.53 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:586192 | GE:11994 | epochs:0.2  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:7.0 ,  19.4%) | ep_rewards:-0.36 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:586481 | GE:12003 | epochs:0.2  | ep_lens:45.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:37.0 (spuriousM:6.0 ,  16.2%) | ep_rewards:-0.43 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:586664 | GE:12008 | epochs:0.2  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.27  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:586944 | GE:12013 | epochs:0.2  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.19  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:587471 | GE:12022 | epochs:0.2  | ep_lens:58.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:46.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.59 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:587960 | GE:12032 | epochs:0.2  | ep_lens:61.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:53.0 (spuriousM:3.0 ,   5.7%) | ep_rewards:-0.51 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:588163 | GE:12037 | epochs:0.2  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:6.0 ,  20.7%) | ep_rewards:-0.27 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:588714 | GE:12047 | epochs:0.2  | ep_lens:61.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:49.0 (spuriousM:5.0 ,  10.2%) | ep_rewards:-0.61 | mean_Q:-0.30  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:589022 | GE:12052 | epochs:0.2  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.27 | mean_Q:-0.30  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:589392 | GE:12062 | epochs:0.2  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.36 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:589777 | GE:12068 | epochs:0.2  | ep_lens:53.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.57 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:590295 | GE:12082 | epochs:0.2  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:8.0 ,  22.2%) | ep_rewards:-0.36 | mean_Q:-0.30  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:591172 | GE:12098 | epochs:0.2  | ep_lens:79.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:68.0 (spuriousM:5.0 ,   7.4%) | ep_rewards:-0.67 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:591473 | GE:12103 | epochs:0.2  | ep_lens:45.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.50 | mean_Q:-0.31  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:592111 | GE:12117 | epochs:0.2  | ep_lens:51.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:43.0 (spuriousM:8.0 ,  18.6%) | ep_rewards:-0.46 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:592336 | GE:12121 | epochs:0.2  | ep_lens:40.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:34.0 (spuriousM:8.0 ,  23.5%) | ep_rewards:-0.35 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:592631 | GE:12129 | epochs:0.2  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:9.0 ,  24.3%) | ep_rewards:-0.37 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:593071 | GE:12136 | epochs:0.2  | ep_lens:47.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:40.0 (spuriousM:9.0 ,  22.5%) | ep_rewards:-0.41 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:593902 | GE:12152 | epochs:0.2  | ep_lens:78.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:68.0 (spuriousM:11.0,  16.2%) | ep_rewards:-0.64 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:594370 | GE:12165 | epochs:0.2  | ep_lens:52.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:42.0 (spuriousM:4.0 ,   9.5%) | ep_rewards:-0.51 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:594623 | GE:12169 | epochs:0.2  | ep_lens:45.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.30 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:594908 | GE:12174 | epochs:0.2  | ep_lens:43.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:35.0 (spuriousM:9.0 ,  25.7%) | ep_rewards:-0.42 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:596100 | GE:12197 | epochs:0.2  | ep_lens:99.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:91.0 (spuriousM:3.0 ,   3.3%) | ep_rewards:-0.70 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:596342 | GE:12201 | epochs:0.2  | ep_lens:35.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.38 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:596563 | GE:12205 | epochs:0.2  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.32 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:596889 | GE:12213 | epochs:0.2  | ep_lens:53.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:41.0 (spuriousM:5.0 ,  12.2%) | ep_rewards:-0.57 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:597398 | GE:12222 | epochs:0.2  | ep_lens:70.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:63.0 (spuriousM:3.0 ,   4.8%) | ep_rewards:-0.53 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:597905 | GE:12232 | epochs:0.2  | ep_lens:66.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:59.0 (spuriousM:8.0 ,  13.6%) | ep_rewards:-0.51 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:598291 | GE:12239 | epochs:0.2  | ep_lens:50.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:47.0 (spuriousM:3.0 ,   6.4%) | ep_rewards:-0.33 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:598840 | GE:12249 | epochs:0.2  | ep_lens:59.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:50.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.52 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:598893 | GE:12251 | epochs:0.2  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:599076 | GE:12255 | epochs:0.2  | ep_lens:36.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.36 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:599585 | GE:12267 | epochs:0.2  | ep_lens:54.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:49.0 (spuriousM:7.0 ,  14.3%) | ep_rewards:-0.40 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:600154 | GE:12276 | epochs:0.2  | ep_lens:58.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:52.0 (spuriousM:4.0 ,   7.7%) | ep_rewards:-0.44 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:600751 | GE:12289 | epochs:0.2  | ep_lens:61.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:57.0 (spuriousM:1.0 ,   1.8%) | ep_rewards:-0.41 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:601607 | GE:12307 | epochs:0.2  | ep_lens:84.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:74.0 (spuriousM:12.0,  16.2%) | ep_rewards:-0.67 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:602420 | GE:12324 | epochs:0.2  | ep_lens:100.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:83.0 (spuriousM:5.0 ,   6.0%) | ep_rewards:-0.93 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:603245 | GE:12340 | epochs:0.2  | ep_lens:66.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:61.0 (spuriousM:11.0,  18.0%) | ep_rewards:-0.46 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:603459 | GE:12346 | epochs:0.2  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.26 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:603664 | GE:12352 | epochs:0.2  | ep_lens:42.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:34.0 (spuriousM:5.0 ,  14.7%) | ep_rewards:-0.41 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:604225 | GE:12362 | epochs:0.2  | ep_lens:61.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:50.0 (spuriousM:7.0 ,  14.0%) | ep_rewards:-0.58 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:604678 | GE:12373 | epochs:0.2  | ep_lens:53.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:44.0 (spuriousM:5.0 ,  11.4%) | ep_rewards:-0.49 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:605409 | GE:12385 | epochs:0.2  | ep_lens:72.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:59.0 (spuriousM:7.0 ,  11.9%) | ep_rewards:-0.69 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:605698 | GE:12394 | epochs:0.2  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.28 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:606052 | GE:12403 | epochs:0.2  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:6.0 ,  15.0%) | ep_rewards:-0.38 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:606292 | GE:12409 | epochs:0.2  | ep_lens:31.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.21 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:606659 | GE:12419 | epochs:0.2  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:10.0,  25.6%) | ep_rewards:-0.35 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:606873 | GE:12420 | epochs:0.2  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:4.0 ,  13.8%) | ep_rewards:-0.30 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:607610 | GE:12435 | epochs:0.2  | ep_lens:80.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:70.0 (spuriousM:13.0,  18.6%) | ep_rewards:-0.65 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:608087 | GE:12442 | epochs:0.2  | ep_lens:67.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:58.0 (spuriousM:9.0 ,  15.5%) | ep_rewards:-0.56 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:608842 | GE:12461 | epochs:0.2  | ep_lens:76.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:68.0 (spuriousM:11.0,  16.2%) | ep_rewards:-0.58 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:609335 | GE:12470 | epochs:0.2  | ep_lens:62.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:50.0 (spuriousM:6.0 ,  12.0%) | ep_rewards:-0.61 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:609668 | GE:12479 | epochs:0.2  | ep_lens:45.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:38.0 (spuriousM:7.0 ,  18.4%) | ep_rewards:-0.40 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:609735 | GE:12481 | epochs:0.2  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:610435 | GE:12494 | epochs:0.2  | ep_lens:77.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:71.0 (spuriousM:6.0 ,   8.5%) | ep_rewards:-0.54 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:610612 | GE:12500 | epochs:0.2  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.19  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:610954 | GE:12508 | epochs:0.2  | ep_lens:49.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.42 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:611303 | GE:12514 | epochs:0.2  | ep_lens:48.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.44 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:611574 | GE:12519 | epochs:0.2  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.23 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:612118 | GE:12529 | epochs:0.2  | ep_lens:56.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:49.0 (spuriousM:6.0 ,  12.2%) | ep_rewards:-0.46 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:612193 | GE:12532 | epochs:0.2  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:612545 | GE:12539 | epochs:0.2  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.33 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:613084 | GE:12548 | epochs:0.2  | ep_lens:56.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:51.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.41 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:613280 | GE:12553 | epochs:0.2  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:5.0 ,  15.2%) | ep_rewards:-0.26 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:613833 | GE:12563 | epochs:0.2  | ep_lens:59.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:52.0 (spuriousM:3.0 ,   5.8%) | ep_rewards:-0.47 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:614990 | GE:12586 | epochs:0.2  | ep_lens:93.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:78.0 (spuriousM:8.0 ,  10.3%) | ep_rewards:-0.84 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:615323 | GE:12590 | epochs:0.2  | ep_lens:48.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.34 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:615596 | GE:12595 | epochs:0.2  | ep_lens:50.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:41.0 (spuriousM:5.0 ,  12.2%) | ep_rewards:-0.48 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:615977 | GE:12602 | epochs:0.2  | ep_lens:51.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.33 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:616257 | GE:12607 | epochs:0.2  | ep_lens:45.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:42.0 (spuriousM:4.0 ,   9.5%) | ep_rewards:-0.30 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:616553 | GE:12615 | epochs:0.2  | ep_lens:43.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.42 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:617276 | GE:12629 | epochs:0.2  | ep_lens:76.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:65.0 (spuriousM:14.0,  21.5%) | ep_rewards:-0.66 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:617572 | GE:12634 | epochs:0.2  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:8.0 ,  19.5%) | ep_rewards:-0.36 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:617830 | GE:12642 | epochs:0.2  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.29 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:618172 | GE:12648 | epochs:0.2  | ep_lens:47.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.34 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:618754 | GE:12659 | epochs:0.2  | ep_lens:66.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:61.0 (spuriousM:3.0 ,   4.9%) | ep_rewards:-0.46 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:618869 | GE:12664 | epochs:0.2  | ep_lens:15.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.09  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:619321 | GE:12670 | epochs:0.2  | ep_lens:66.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:55.0 (spuriousM:5.0 ,   9.1%) | ep_rewards:-0.61 | mean_Q:0.01   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:619756 | GE:12680 | epochs:0.2  | ep_lens:51.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:46.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.38 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:620237 | GE:12687 | epochs:0.2  | ep_lens:72.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:58.0 (spuriousM:4.0 ,   6.9%) | ep_rewards:-0.71 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:620721 | GE:12698 | epochs:0.2  | ep_lens:72.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:64.0 (spuriousM:7.0 ,  10.9%) | ep_rewards:-0.56 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:621742 | GE:12717 | epochs:0.2  | ep_lens:88.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:82.0 (spuriousM:12.0,  14.6%) | ep_rewards:-0.59 | mean_Q:-0.29  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:621877 | GE:12718 | epochs:0.2  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.27  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:622206 | GE:12726 | epochs:0.2  | ep_lens:46.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.31 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:622532 | GE:12736 | epochs:0.2  | ep_lens:42.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.39 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:623072 | GE:12748 | epochs:0.2  | ep_lens:54.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:50.0 (spuriousM:3.0 ,   6.0%) | ep_rewards:-0.37 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:623643 | GE:12760 | epochs:0.2  | ep_lens:70.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:65.0 (spuriousM:9.0 ,  13.8%) | ep_rewards:-0.48 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:623735 | GE:12762 | epochs:0.2  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.11  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:624060 | GE:12767 | epochs:0.2  | ep_lens:49.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:43.0 (spuriousM:8.0 ,  18.6%) | ep_rewards:-0.40 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:624296 | GE:12773 | epochs:0.2  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:6.0 ,  17.6%) | ep_rewards:-0.32 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:625199 | GE:12786 | epochs:0.2  | ep_lens:91.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:79.0 (spuriousM:7.0 ,   8.9%) | ep_rewards:-0.76 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:625363 | GE:12788 | epochs:0.2  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.21 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:625591 | GE:12792 | epochs:0.2  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:5.0 ,  13.9%) | ep_rewards:-0.36 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:625815 | GE:12796 | epochs:0.2  | ep_lens:39.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.42 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:626155 | GE:12803 | epochs:0.2  | ep_lens:53.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.52 | mean_Q:-0.34  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:626389 | GE:12808 | epochs:0.2  | ep_lens:33.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.32 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:626630 | GE:12814 | epochs:0.2  | ep_lens:44.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.40 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:627107 | GE:12822 | epochs:0.2  | ep_lens:51.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:48.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.33 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:627340 | GE:12827 | epochs:0.2  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:6.0 ,  15.8%) | ep_rewards:-0.34 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:627767 | GE:12837 | epochs:0.2  | ep_lens:52.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.36 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:628139 | GE:12844 | epochs:0.2  | ep_lens:55.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:49.0 (spuriousM:7.0 ,  14.3%) | ep_rewards:-0.43 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:628338 | GE:12848 | epochs:0.2  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:6.0 ,  15.4%) | ep_rewards:-0.35 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:629068 | GE:12864 | epochs:0.2  | ep_lens:80.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:69.0 (spuriousM:13.0,  18.8%) | ep_rewards:-0.68 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:629150 | GE:12865 | epochs:0.2  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.25  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:629638 | GE:12875 | epochs:0.2  | ep_lens:60.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:49.0 (spuriousM:5.0 ,  10.2%) | ep_rewards:-0.58 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:629995 | GE:12883 | epochs:0.2  | ep_lens:49.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.37 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:630372 | GE:12891 | epochs:0.2  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.34 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:630776 | GE:12899 | epochs:0.2  | ep_lens:55.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:45.0 (spuriousM:7.0 ,  15.6%) | ep_rewards:-0.53 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:631330 | GE:12908 | epochs:0.2  | ep_lens:61.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:50.0 (spuriousM:3.0 ,   6.0%) | ep_rewards:-0.58 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:631388 | GE:12910 | epochs:0.2  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.11  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:631784 | GE:12917 | epochs:0.2  | ep_lens:62.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:48.0 (spuriousM:13.0,  27.1%) | ep_rewards:-0.66 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:632620 | GE:12938 | epochs:0.2  | ep_lens:69.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:65.0 (spuriousM:13.0,  20.0%) | ep_rewards:-0.45 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:632763 | GE:12943 | epochs:0.2  | ep_lens:25.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.23 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:633379 | GE:12956 | epochs:0.2  | ep_lens:56.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:51.0 (spuriousM:6.0 ,  11.8%) | ep_rewards:-0.41 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:633765 | GE:12965 | epochs:0.2  | ep_lens:50.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:41.0 (spuriousM:5.0 ,  12.2%) | ep_rewards:-0.48 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:633850 | GE:12966 | epochs:0.2  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:634027 | GE:12970 | epochs:0.2  | ep_lens:27.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.24 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:634123 | GE:12972 | epochs:0.2  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.08  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:634946 | GE:12989 | epochs:0.2  | ep_lens:96.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:88.0 (spuriousM:13.0,  14.8%) | ep_rewards:-0.68 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:635021 | GE:12990 | epochs:0.2  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.08  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:635462 | GE:13000 | epochs:0.2  | ep_lens:60.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:51.0 (spuriousM:5.0 ,   9.8%) | ep_rewards:-0.53 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:636173 | GE:13020 | epochs:0.2  | ep_lens:70.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:64.0 (spuriousM:3.0 ,   4.7%) | ep_rewards:-0.50 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:636954 | GE:13036 | epochs:0.2  | ep_lens:74.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:63.0 (spuriousM:6.0 ,   9.5%) | ep_rewards:-0.65 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:637697 | GE:13052 | epochs:0.2  | ep_lens:62.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:58.0 (spuriousM:4.0 ,   6.9%) | ep_rewards:-0.41 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:638045 | GE:13060 | epochs:0.2  | ep_lens:47.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.41 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:638296 | GE:13065 | epochs:0.2  | ep_lens:46.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:39.0 (spuriousM:16.0,  41.0%) | ep_rewards:-0.41 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:638422 | GE:13069 | epochs:0.2  | ep_lens:31.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.28 | mean_Q:0.02   | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:638591 | GE:13071 | epochs:0.2  | ep_lens:33.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:26.0 (spuriousM:4.0 ,  15.4%) | ep_rewards:-0.34 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:638871 | GE:13077 | epochs:0.2  | ep_lens:36.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.23 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:639290 | GE:13084 | epochs:0.2  | ep_lens:53.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:49.0 (spuriousM:4.0 ,   8.2%) | ep_rewards:-0.37 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:639549 | GE:13090 | epochs:0.2  | ep_lens:33.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.19 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:639927 | GE:13101 | epochs:0.2  | ep_lens:49.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:41.0 (spuriousM:5.0 ,  12.2%) | ep_rewards:-0.45 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:640219 | GE:13104 | epochs:0.2  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.31 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:640479 | GE:13111 | epochs:0.2  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:7.0 ,  22.6%) | ep_rewards:-0.25 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:640774 | GE:13119 | epochs:0.2  | ep_lens:47.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:38.0 (spuriousM:6.0 ,  15.8%) | ep_rewards:-0.46 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:641088 | GE:13126 | epochs:0.2  | ep_lens:63.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:51.0 (spuriousM:9.0 ,  17.6%) | ep_rewards:-0.62 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:641910 | GE:13140 | epochs:0.2  | ep_lens:58.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:56.0 (spuriousM:3.0 ,   5.4%) | ep_rewards:-0.34 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:642222 | GE:13147 | epochs:0.2  | ep_lens:49.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:43.0 (spuriousM:11.0,  25.6%) | ep_rewards:-0.40 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:642829 | GE:13161 | epochs:0.2  | ep_lens:59.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:51.0 (spuriousM:5.0 ,   9.8%) | ep_rewards:-0.50 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:643186 | GE:13169 | epochs:0.2  | ep_lens:45.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:43.0 (spuriousM:4.0 ,   9.3%) | ep_rewards:-0.28 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:643459 | GE:13173 | epochs:0.2  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.33 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:643754 | GE:13180 | epochs:0.2  | ep_lens:48.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.32 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:644082 | GE:13185 | epochs:0.2  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.36 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:644618 | GE:13198 | epochs:0.2  | ep_lens:52.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:47.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.39 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:644919 | GE:13205 | epochs:0.2  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.20  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:645135 | GE:13211 | epochs:0.2  | ep_lens:37.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.46 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:645474 | GE:13216 | epochs:0.2  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.31 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:645769 | GE:13225 | epochs:0.2  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.36 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:645921 | GE:13229 | epochs:0.2  | ep_lens:33.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.22 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:646009 | GE:13233 | epochs:0.2  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.21  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:646832 | GE:13249 | epochs:0.2  | ep_lens:93.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:84.0 (spuriousM:16.0,  19.0%) | ep_rewards:-0.69 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:647085 | GE:13253 | epochs:0.2  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.38 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:647269 | GE:13258 | epochs:0.2  | ep_lens:18.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:14.0 (spuriousM:1.0 ,   7.1%) | ep_rewards:-0.19 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:647720 | GE:13269 | epochs:0.2  | ep_lens:47.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:45.0 (spuriousM:11.0,  24.4%) | ep_rewards:-0.29 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:647820 | GE:13272 | epochs:0.2  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.25  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:647895 | GE:13274 | epochs:0.2  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.23  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:648596 | GE:13288 | epochs:0.2  | ep_lens:79.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:62.0 (spuriousM:2.0 ,   3.2%) | ep_rewards:-0.82 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:648832 | GE:13293 | epochs:0.2  | ep_lens:34.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:32.0 (spuriousM:5.0 ,  15.6%) | ep_rewards:-0.22 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:649309 | GE:13303 | epochs:0.2  | ep_lens:69.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:58.0 (spuriousM:8.0 ,  13.8%) | ep_rewards:-0.62 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:649614 | GE:13310 | epochs:0.2  | ep_lens:49.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:45.0 (spuriousM:5.0 ,  11.1%) | ep_rewards:-0.35 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:649830 | GE:13315 | epochs:0.2  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:5.0 ,  13.9%) | ep_rewards:-0.30 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:650066 | GE:13319 | epochs:0.2  | ep_lens:28.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.29 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:650685 | GE:13330 | epochs:0.2  | ep_lens:58.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:48.0 (spuriousM:5.0 ,  10.4%) | ep_rewards:-0.54 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:650785 | GE:13334 | epochs:0.2  | ep_lens:20.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:18.0 (spuriousM:4.0 ,  22.2%) | ep_rewards:-0.15 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:651094 | GE:13340 | epochs:0.2  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.27 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:651383 | GE:13349 | epochs:0.2  | ep_lens:44.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:35.0 (spuriousM:7.0 ,  20.0%) | ep_rewards:-0.45 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:651629 | GE:13353 | epochs:0.2  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.30 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:652374 | GE:13373 | epochs:0.2  | ep_lens:65.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:59.0 (spuriousM:9.0 ,  15.3%) | ep_rewards:-0.48 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:652773 | GE:13379 | epochs:0.2  | ep_lens:44.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.30 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:653349 | GE:13393 | epochs:0.2  | ep_lens:55.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:51.0 (spuriousM:5.0 ,   9.8%) | ep_rewards:-0.38 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:654017 | GE:13406 | epochs:0.2  | ep_lens:71.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:63.0 (spuriousM:1.0 ,   1.6%) | ep_rewards:-0.56 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:654707 | GE:13419 | epochs:0.2  | ep_lens:52.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:49.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.34 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:655126 | GE:13424 | epochs:0.2  | ep_lens:63.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:51.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.62 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:655467 | GE:13430 | epochs:0.2  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.34 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:655775 | GE:13438 | epochs:0.2  | ep_lens:46.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.43 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:655991 | GE:13442 | epochs:0.2  | ep_lens:33.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.22 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:656211 | GE:13447 | epochs:0.2  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.24 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:656544 | GE:13456 | epochs:0.2  | ep_lens:52.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:44.0 (spuriousM:5.0 ,  11.4%) | ep_rewards:-0.46 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:657089 | GE:13469 | epochs:0.2  | ep_lens:60.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:56.0 (spuriousM:7.0 ,  12.5%) | ep_rewards:-0.40 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:657589 | GE:13481 | epochs:0.2  | ep_lens:56.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.56 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:657795 | GE:13485 | epochs:0.2  | ep_lens:37.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.39 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:658213 | GE:13492 | epochs:0.2  | ep_lens:56.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.56 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:658493 | GE:13496 | epochs:0.2  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.40 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:658797 | GE:13504 | epochs:0.2  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:7.0 ,  17.1%) | ep_rewards:-0.36 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:659093 | GE:13510 | epochs:0.2  | ep_lens:37.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.31 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:659152 | GE:13512 | epochs:0.2  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:659537 | GE:13521 | epochs:0.2  | ep_lens:44.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.32 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:659894 | GE:13528 | epochs:0.2  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:5.0 ,  11.9%) | ep_rewards:-0.39 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:660085 | GE:13532 | epochs:0.2  | ep_lens:33.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.32 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:660655 | GE:13545 | epochs:0.2  | ep_lens:62.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:57.0 (spuriousM:14.0,  24.6%) | ep_rewards:-0.44 | mean_Q:-0.28  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:661023 | GE:13554 | epochs:0.2  | ep_lens:39.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.22 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:661564 | GE:13565 | epochs:0.2  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:4.0 ,   9.5%) | ep_rewards:-0.36 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:662075 | GE:13578 | epochs:0.2  | ep_lens:52.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:45.0 (spuriousM:4.0 ,   8.9%) | ep_rewards:-0.44 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:662324 | GE:13582 | epochs:0.2  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:5.0 ,  11.9%) | ep_rewards:-0.36 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:662536 | GE:13587 | epochs:0.2  | ep_lens:30.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.18 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:662784 | GE:13592 | epochs:0.2  | ep_lens:32.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.31 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:663403 | GE:13607 | epochs:0.2  | ep_lens:63.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:55.0 (spuriousM:5.0 ,   9.1%) | ep_rewards:-0.52 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:663713 | GE:13611 | epochs:0.2  | ep_lens:57.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:47.0 (spuriousM:16.0,  34.0%) | ep_rewards:-0.54 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:664006 | GE:13615 | epochs:0.2  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:6.0 ,  15.0%) | ep_rewards:-0.38 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:664182 | GE:13619 | epochs:0.2  | ep_lens:44.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:36.0 (spuriousM:5.0 ,  13.9%) | ep_rewards:-0.42 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:664512 | GE:13626 | epochs:0.2  | ep_lens:40.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.28 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:664805 | GE:13631 | epochs:0.2  | ep_lens:48.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:44.0 (spuriousM:5.0 ,  11.4%) | ep_rewards:-0.34 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:664986 | GE:13634 | epochs:0.2  | ep_lens:34.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.40 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:665391 | GE:13642 | epochs:0.2  | ep_lens:47.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:45.0 (spuriousM:14.0,  31.1%) | ep_rewards:-0.29 | mean_Q:-0.35  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:666185 | GE:13659 | epochs:0.2  | ep_lens:81.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:71.0 (spuriousM:17.0,  23.9%) | ep_rewards:-0.66 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:666331 | GE:13664 | epochs:0.2  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.21  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:666632 | GE:13668 | epochs:0.2  | ep_lens:28.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:27.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:667039 | GE:13676 | epochs:0.2  | ep_lens:50.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.35 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:667500 | GE:13687 | epochs:0.2  | ep_lens:47.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:44.0 (spuriousM:5.0 ,  11.4%) | ep_rewards:-0.31 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:667775 | GE:13695 | epochs:0.2  | ep_lens:47.0 | edits:11.0 (spuriousE:10.0,  90.9%) | moves:36.0 (spuriousM:6.0 ,  16.7%) | ep_rewards:-0.47 | mean_Q:-0.17  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:668028 | GE:13702 | epochs:0.2  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.21 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:668513 | GE:13713 | epochs:0.2  | ep_lens:62.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:54.0 (spuriousM:8.0 ,  14.8%) | ep_rewards:-0.51 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:669029 | GE:13722 | epochs:0.2  | ep_lens:60.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:50.0 (spuriousM:4.0 ,   8.0%) | ep_rewards:-0.55 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:669252 | GE:13725 | epochs:0.2  | ep_lens:26.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:25.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:669390 | GE:13728 | epochs:0.2  | ep_lens:32.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.36 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:669539 | GE:13730 | epochs:0.2  | ep_lens:34.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.35 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:670614 | GE:13752 | epochs:0.2  | ep_lens:100.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:84.0 (spuriousM:8.0 ,   9.5%) | ep_rewards:-0.90 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:670962 | GE:13760 | epochs:0.2  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.20 | mean_Q:-0.30  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:671251 | GE:13766 | epochs:0.2  | ep_lens:57.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:46.0 (spuriousM:6.0 ,  13.0%) | ep_rewards:-0.56 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:671685 | GE:13772 | epochs:0.2  | ep_lens:65.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:56.0 (spuriousM:6.0 ,  10.7%) | ep_rewards:-0.55 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:672010 | GE:13782 | epochs:0.2  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.33 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:672410 | GE:13790 | epochs:0.2  | ep_lens:47.0 | edits:3.0  (spuriousE:2.0 ,  66.7%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.27 | mean_Q:-0.18  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:672917 | GE:13798 | epochs:0.2  | ep_lens:53.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:49.0 (spuriousM:8.0 ,  16.3%) | ep_rewards:-0.37 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:673682 | GE:13815 | epochs:0.2  | ep_lens:76.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:68.0 (spuriousM:21.0,  30.9%) | ep_rewards:-0.58 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:674086 | GE:13828 | epochs:0.2  | ep_lens:49.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:42.0 (spuriousM:10.0,  23.8%) | ep_rewards:-0.42 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:674261 | GE:13831 | epochs:0.2  | ep_lens:29.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.20 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:674442 | GE:13834 | epochs:0.2  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:5.0 ,  16.7%) | ep_rewards:-0.24 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:674939 | GE:13843 | epochs:0.2  | ep_lens:55.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.45 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:675613 | GE:13858 | epochs:0.2  | ep_lens:67.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:59.0 (spuriousM:9.0 ,  15.3%) | ep_rewards:-0.54 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:676266 | GE:13872 | epochs:0.2  | ep_lens:57.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:51.0 (spuriousM:3.0 ,   5.9%) | ep_rewards:-0.44 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:676514 | GE:13880 | epochs:0.2  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.38 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:676825 | GE:13887 | epochs:0.2  | ep_lens:30.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:29.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.82  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:677074 | GE:13896 | epochs:0.2  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:6.0 ,  16.2%) | ep_rewards:-0.31 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:677266 | GE:13901 | epochs:0.2  | ep_lens:39.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:30.0 (spuriousM:5.0 ,  16.7%) | ep_rewards:-0.42 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:677424 | GE:13903 | epochs:0.2  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.31 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:677721 | GE:13906 | epochs:0.2  | ep_lens:53.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:45.0 (spuriousM:7.0 ,  15.6%) | ep_rewards:-0.47 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:678062 | GE:13914 | epochs:0.2  | ep_lens:59.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:48.0 (spuriousM:9.0 ,  18.8%) | ep_rewards:-0.57 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:678343 | GE:13919 | epochs:0.2  | ep_lens:50.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:40.0 (spuriousM:6.0 ,  15.0%) | ep_rewards:-0.50 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:678587 | GE:13922 | epochs:0.2  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.32 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:679115 | GE:13934 | epochs:0.2  | ep_lens:61.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.48 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:679436 | GE:13939 | epochs:0.2  | ep_lens:61.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:48.0 (spuriousM:9.0 ,  18.8%) | ep_rewards:-0.63 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:679866 | GE:13946 | epochs:0.2  | ep_lens:70.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:59.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.63 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:680048 | GE:13949 | epochs:0.2  | ep_lens:24.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.22  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:680406 | GE:13953 | epochs:0.2  | ep_lens:56.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:51.0 (spuriousM:6.0 ,  11.8%) | ep_rewards:-0.41 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:681066 | GE:13968 | epochs:0.2  | ep_lens:74.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:61.0 (spuriousM:4.0 ,   6.6%) | ep_rewards:-0.70 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:681289 | GE:13970 | epochs:0.2  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.24  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:681685 | GE:13981 | epochs:0.2  | ep_lens:54.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:45.0 (spuriousM:4.0 ,   8.9%) | ep_rewards:-0.50 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:681904 | GE:13985 | epochs:0.2  | ep_lens:42.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.39 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:682586 | GE:13999 | epochs:0.2  | ep_lens:65.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:57.0 (spuriousM:7.0 ,  12.3%) | ep_rewards:-0.53 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:683013 | GE:14008 | epochs:0.2  | ep_lens:61.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:51.0 (spuriousM:7.0 ,  13.7%) | ep_rewards:-0.56 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:683524 | GE:14016 | epochs:0.2  | ep_lens:52.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:46.0 (spuriousM:7.0 ,  15.2%) | ep_rewards:-0.41 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:683843 | GE:14023 | epochs:0.2  | ep_lens:53.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.47 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:684140 | GE:14028 | epochs:0.2  | ep_lens:60.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:51.0 (spuriousM:5.0 ,   9.8%) | ep_rewards:-0.53 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:684357 | GE:14033 | epochs:0.2  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:6.0 ,  17.6%) | ep_rewards:-0.29 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:684577 | GE:14038 | epochs:0.2  | ep_lens:44.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.45 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:684775 | GE:14042 | epochs:0.2  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:685065 | GE:14049 | epochs:0.2  | ep_lens:44.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.55 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:685470 | GE:14056 | epochs:0.2  | ep_lens:53.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.59 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:685842 | GE:14064 | epochs:0.2  | ep_lens:55.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.53 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:686701 | GE:14079 | epochs:0.2  | ep_lens:79.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:67.0 (spuriousM:2.0 ,   3.0%) | ep_rewards:-0.70 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:687342 | GE:14094 | epochs:0.2  | ep_lens:70.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:61.0 (spuriousM:9.0 ,  14.8%) | ep_rewards:-0.58 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:687815 | GE:14103 | epochs:0.2  | ep_lens:57.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:49.0 (spuriousM:7.0 ,  14.3%) | ep_rewards:-0.49 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:688147 | GE:14109 | epochs:0.2  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.33 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:688274 | GE:14114 | epochs:0.2  | ep_lens:24.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.17 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:688596 | GE:14120 | epochs:0.2  | ep_lens:44.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:37.0 (spuriousM:7.0 ,  18.9%) | ep_rewards:-0.40 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:689030 | GE:14128 | epochs:0.2  | ep_lens:63.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:53.0 (spuriousM:5.0 ,   9.4%) | ep_rewards:-0.57 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:689158 | GE:14131 | epochs:0.2  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.28  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:689656 | GE:14140 | epochs:0.2  | ep_lens:67.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.66 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:689943 | GE:14146 | epochs:0.2  | ep_lens:31.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:30.0 (spuriousM:6.0 ,  20.0%) | ep_rewards:-0.18 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:690049 | GE:14150 | epochs:0.2  | ep_lens:21.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.18  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:690568 | GE:14163 | epochs:0.2  | ep_lens:58.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:50.0 (spuriousM:5.0 ,  10.0%) | ep_rewards:-0.49 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:690962 | GE:14172 | epochs:0.2  | ep_lens:54.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.42 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:691164 | GE:14178 | epochs:0.2  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.37 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:691697 | GE:14189 | epochs:0.2  | ep_lens:52.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.41 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:692384 | GE:14203 | epochs:0.2  | ep_lens:67.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:58.0 (spuriousM:4.0 ,   6.9%) | ep_rewards:-0.56 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:692566 | GE:14209 | epochs:0.2  | ep_lens:45.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:33.0 (spuriousM:8.0 ,  24.2%) | ep_rewards:-0.53 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:692906 | GE:14214 | epochs:0.2  | ep_lens:50.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.48 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:693576 | GE:14227 | epochs:0.2  | ep_lens:59.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:52.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.47 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:693833 | GE:14232 | epochs:0.2  | ep_lens:47.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:39.0 (spuriousM:7.0 ,  17.9%) | ep_rewards:-0.44 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:694139 | GE:14237 | epochs:0.2  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.34 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:694415 | GE:14244 | epochs:0.2  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.37 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:694638 | GE:14249 | epochs:0.2  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:5.0 ,  15.6%) | ep_rewards:-0.25 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:695058 | GE:14259 | epochs:0.2  | ep_lens:52.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:44.0 (spuriousM:5.0 ,  11.4%) | ep_rewards:-0.46 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:695251 | GE:14263 | epochs:0.2  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:6.0 ,  20.0%) | ep_rewards:-0.30 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:696141 | GE:14282 | epochs:0.2  | ep_lens:73.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:64.0 (spuriousM:1.0 ,   1.6%) | ep_rewards:-0.59 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:696678 | GE:14292 | epochs:0.2  | ep_lens:66.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:52.0 (spuriousM:10.0,  19.2%) | ep_rewards:-0.68 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:697234 | GE:14306 | epochs:0.2  | ep_lens:55.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:48.0 (spuriousM:5.0 ,  10.4%) | ep_rewards:-0.45 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:697515 | GE:14313 | epochs:0.2  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.32 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:697598 | GE:14315 | epochs:0.2  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.11  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:697803 | GE:14322 | epochs:0.2  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.19 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:698200 | GE:14331 | epochs:0.2  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.34 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:698812 | GE:14346 | epochs:0.2  | ep_lens:55.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:46.0 (spuriousM:7.0 ,  15.2%) | ep_rewards:-0.50 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:699173 | GE:14354 | epochs:0.2  | ep_lens:46.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.31 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:699668 | GE:14363 | epochs:0.2  | ep_lens:51.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:42.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.48 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:700058 | GE:14370 | epochs:0.2  | ep_lens:58.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:49.0 (spuriousM:6.0 ,  12.2%) | ep_rewards:-0.52 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:700319 | GE:14375 | epochs:0.2  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:5.0 ,  13.9%) | ep_rewards:-0.33 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:701211 | GE:14397 | epochs:0.2  | ep_lens:72.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:63.0 (spuriousM:6.0 ,   9.5%) | ep_rewards:-0.59 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:701760 | GE:14410 | epochs:0.2  | ep_lens:51.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:46.0 (spuriousM:3.0 ,   6.5%) | ep_rewards:-0.38 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:702085 | GE:14418 | epochs:0.2  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.34 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:702409 | GE:14425 | epochs:0.2  | ep_lens:40.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.38 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:702646 | GE:14431 | epochs:0.2  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.27 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:703031 | GE:14443 | epochs:0.2  | ep_lens:48.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:43.0 (spuriousM:4.0 ,   9.3%) | ep_rewards:-0.37 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:703345 | GE:14449 | epochs:0.2  | ep_lens:43.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:39.0 (spuriousM:6.0 ,  15.4%) | ep_rewards:-0.32 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:703521 | GE:14455 | epochs:0.2  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:7.0 ,  23.3%) | ep_rewards:-0.21 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:703890 | GE:14462 | epochs:0.2  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:5.0 ,  12.2%) | ep_rewards:-0.36 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:704270 | GE:14472 | epochs:0.2  | ep_lens:63.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:51.0 (spuriousM:22.0,  43.1%) | ep_rewards:-0.62 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:704431 | GE:14475 | epochs:0.2  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:6.0 ,  23.1%) | ep_rewards:-0.25 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:704708 | GE:14482 | epochs:0.2  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.29 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:705215 | GE:14493 | epochs:0.2  | ep_lens:65.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:57.0 (spuriousM:15.0,  26.3%) | ep_rewards:-0.53 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:705478 | GE:14497 | epochs:0.2  | ep_lens:44.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:37.0 (spuriousM:11.0,  29.7%) | ep_rewards:-0.40 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:706337 | GE:14516 | epochs:0.2  | ep_lens:100.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:91.0 (spuriousM:40.0,  44.0%) | ep_rewards:-0.73 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:706581 | GE:14521 | epochs:0.2  | ep_lens:40.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:31.0 (spuriousM:6.0 ,  19.4%) | ep_rewards:-0.43 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:706878 | GE:14529 | epochs:0.2  | ep_lens:41.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.41 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:707379 | GE:14540 | epochs:0.2  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.36 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:707538 | GE:14543 | epochs:0.2  | ep_lens:28.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.27 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:708124 | GE:14556 | epochs:0.2  | ep_lens:61.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:55.0 (spuriousM:4.0 ,   7.3%) | ep_rewards:-0.46 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:708379 | GE:14560 | epochs:0.2  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.31 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:708590 | GE:14566 | epochs:0.2  | ep_lens:35.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.38 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:708890 | GE:14571 | epochs:0.2  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:7.0 ,  19.4%) | ep_rewards:-0.36 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:709490 | GE:14583 | epochs:0.2  | ep_lens:62.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:58.0 (spuriousM:6.0 ,  10.3%) | ep_rewards:-0.41 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:709754 | GE:14588 | epochs:0.2  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.35 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:709926 | GE:14593 | epochs:0.2  | ep_lens:32.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:26.0 (spuriousM:6.0 ,  23.1%) | ep_rewards:-0.31 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:710277 | GE:14602 | epochs:0.2  | ep_lens:44.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.25 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:710504 | GE:14609 | epochs:0.2  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:6.0 ,  18.2%) | ep_rewards:-0.32 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:710752 | GE:14612 | epochs:0.2  | ep_lens:38.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.34 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:710893 | GE:14617 | epochs:0.2  | ep_lens:22.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.11  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:711117 | GE:14622 | epochs:0.2  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:4.0 ,  14.3%) | ep_rewards:-0.29 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:711501 | GE:14631 | epochs:0.2  | ep_lens:39.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.22 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:711913 | GE:14638 | epochs:0.2  | ep_lens:57.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:46.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.56 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:712409 | GE:14651 | epochs:0.2  | ep_lens:56.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.68 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:712649 | GE:14659 | epochs:0.2  | ep_lens:42.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:35.0 (spuriousM:9.0 ,  25.7%) | ep_rewards:-0.39 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:712883 | GE:14664 | epochs:0.2  | ep_lens:39.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.40 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:713185 | GE:14670 | epochs:0.2  | ep_lens:44.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.32 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:713388 | GE:14674 | epochs:0.2  | ep_lens:26.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.13  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:713564 | GE:14680 | epochs:0.2  | ep_lens:27.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.29 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:714056 | GE:14691 | epochs:0.2  | ep_lens:60.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:53.0 (spuriousM:5.0 ,   9.4%) | ep_rewards:-0.48 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:714321 | GE:14699 | epochs:0.2  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.37 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:714839 | GE:14711 | epochs:0.2  | ep_lens:63.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:59.0 (spuriousM:13.0,  22.0%) | ep_rewards:-0.42 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:715295 | GE:14723 | epochs:0.2  | ep_lens:55.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.53 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:715504 | GE:14726 | epochs:0.2  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:5.0 ,  17.2%) | ep_rewards:-0.24 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:715731 | GE:14730 | epochs:0.2  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.37 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:716084 | GE:14737 | epochs:0.2  | ep_lens:31.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:30.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.82  | mean_Q:-0.26  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:716408 | GE:14742 | epochs:0.2  | ep_lens:45.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.40 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:716628 | GE:14748 | epochs:0.2  | ep_lens:40.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.45 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:716686 | GE:14750 | epochs:0.2  | ep_lens:4.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:3.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.95  | mean_Q:-0.27  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:717122 | GE:14759 | epochs:0.2  | ep_lens:50.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.38 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:717461 | GE:14767 | epochs:0.2  | ep_lens:52.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:42.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.51 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:717642 | GE:14771 | epochs:0.2  | ep_lens:31.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.33 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:717835 | GE:14776 | epochs:0.2  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.23 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:718277 | GE:14785 | epochs:0.2  | ep_lens:59.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.70 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:718844 | GE:14800 | epochs:0.2  | ep_lens:52.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.36 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:719444 | GE:14814 | epochs:0.2  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.39 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:719977 | GE:14824 | epochs:0.2  | ep_lens:53.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:43.0 (spuriousM:4.0 ,   9.3%) | ep_rewards:-0.52 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:720152 | GE:14829 | epochs:0.2  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.19 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:720707 | GE:14842 | epochs:0.2  | ep_lens:62.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:50.0 (spuriousM:9.0 ,  18.0%) | ep_rewards:-0.61 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:720977 | GE:14848 | epochs:0.2  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.30 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:721242 | GE:14855 | epochs:0.2  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.25 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:721794 | GE:14866 | epochs:0.2  | ep_lens:66.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:49.0 (spuriousM:6.0 ,  12.2%) | ep_rewards:-0.76 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:722441 | GE:14885 | epochs:0.2  | ep_lens:75.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:64.0 (spuriousM:17.0,  26.6%) | ep_rewards:-0.65 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:722721 | GE:14890 | epochs:0.2  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:9.0 ,  29.0%) | ep_rewards:-0.28 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:722936 | GE:14896 | epochs:0.2  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.22 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:723195 | GE:14903 | epochs:0.2  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.33 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:723675 | GE:14918 | epochs:0.2  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.35 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:723901 | GE:14926 | epochs:0.2  | ep_lens:43.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:33.0 (spuriousM:6.0 ,  18.2%) | ep_rewards:-0.47 | mean_Q:-0.02  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:724216 | GE:14931 | epochs:0.2  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:5.0 ,  15.2%) | ep_rewards:-0.32 | mean_Q:-0.03  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:724424 | GE:14936 | epochs:0.2  | ep_lens:43.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:34.0 (spuriousM:6.0 ,  17.6%) | ep_rewards:-0.44 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:724747 | GE:14943 | epochs:0.2  | ep_lens:53.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.49 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:725084 | GE:14954 | epochs:0.2  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.40 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:725332 | GE:14961 | epochs:0.2  | ep_lens:32.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.26 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:725576 | GE:14965 | epochs:0.2  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.27 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:725949 | GE:14975 | epochs:0.2  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:6.0 ,  14.6%) | ep_rewards:-0.36 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:726240 | GE:14980 | epochs:0.2  | ep_lens:36.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.21 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:726575 | GE:14990 | epochs:0.2  | ep_lens:30.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:29.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.82  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:726858 | GE:14994 | epochs:0.2  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.29 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:727114 | GE:15001 | epochs:0.2  | ep_lens:34.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.22 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:727576 | GE:15016 | epochs:0.2  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:6.0 ,  15.8%) | ep_rewards:-0.28 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:727894 | GE:15023 | epochs:0.2  | ep_lens:53.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:40.0 (spuriousM:8.0 ,  20.0%) | ep_rewards:-0.59 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:728176 | GE:15029 | epochs:0.2  | ep_lens:44.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:41.0 (spuriousM:7.0 ,  17.1%) | ep_rewards:-0.30 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:728393 | GE:15035 | epochs:0.2  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.34 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:728574 | GE:15039 | epochs:0.2  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:5.0 ,  19.2%) | ep_rewards:-0.25 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:729042 | GE:15051 | epochs:0.2  | ep_lens:48.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:44.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.34 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:729197 | GE:15054 | epochs:0.2  | ep_lens:23.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:21.0 (spuriousM:3.0 ,  14.3%) | ep_rewards:-0.17 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:729459 | GE:15062 | epochs:0.2  | ep_lens:44.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.45 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:729873 | GE:15070 | epochs:0.2  | ep_lens:52.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:48.0 (spuriousM:8.0 ,  16.7%) | ep_rewards:-0.36 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:730075 | GE:15077 | epochs:0.2  | ep_lens:41.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:32.0 (spuriousM:7.0 ,  21.9%) | ep_rewards:-0.43 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:730177 | GE:15079 | epochs:0.2  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:730625 | GE:15089 | epochs:0.2  | ep_lens:46.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.28 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:731157 | GE:15101 | epochs:0.2  | ep_lens:61.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:57.0 (spuriousM:5.0 ,   8.8%) | ep_rewards:-0.41 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:731396 | GE:15107 | epochs:0.2  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.27 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:731536 | GE:15109 | epochs:0.2  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.17  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:732051 | GE:15123 | epochs:0.2  | ep_lens:58.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:49.0 (spuriousM:5.0 ,  10.2%) | ep_rewards:-0.52 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:732591 | GE:15131 | epochs:0.3  | ep_lens:69.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:59.0 (spuriousM:4.0 ,   6.8%) | ep_rewards:-0.60 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:733022 | GE:15139 | epochs:0.3  | ep_lens:58.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:53.0 (spuriousM:5.0 ,   9.4%) | ep_rewards:-0.42 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:733487 | GE:15146 | epochs:0.3  | ep_lens:71.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:65.0 (spuriousM:4.0 ,   6.2%) | ep_rewards:-0.51 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:734705 | GE:15165 | epochs:0.3  | ep_lens:100.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:85.0 (spuriousM:5.0 ,   5.9%) | ep_rewards:-0.88 | mean_Q:-0.31  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:734886 | GE:15170 | epochs:0.3  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:4.0 ,  13.8%) | ep_rewards:-0.30 | mean_Q:-0.32  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:735467 | GE:15178 | epochs:0.3  | ep_lens:69.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:63.0 (spuriousM:3.0 ,   4.8%) | ep_rewards:-0.50 | mean_Q:-0.32  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:735838 | GE:15185 | epochs:0.3  | ep_lens:62.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:55.0 (spuriousM:7.0 ,  12.7%) | ep_rewards:-0.49 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:736550 | GE:15198 | epochs:0.3  | ep_lens:69.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:59.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.60 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:737373 | GE:15212 | epochs:0.3  | ep_lens:83.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:66.0 (spuriousM:6.0 ,   9.1%) | ep_rewards:-0.84 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:737736 | GE:15217 | epochs:0.3  | ep_lens:69.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:52.0 (spuriousM:4.0 ,   7.7%) | ep_rewards:-0.77 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:738185 | GE:15223 | epochs:0.3  | ep_lens:67.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:56.0 (spuriousM:2.0 ,   3.6%) | ep_rewards:-0.61 | mean_Q:-0.32  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:739111 | GE:15240 | epochs:0.3  | ep_lens:100.0 | edits:19.0 (spuriousE:19.0, 100.0%) | moves:81.0 (spuriousM:12.0,  14.8%) | ep_rewards:-0.98 | mean_Q:-0.33  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:739289 | GE:15245 | epochs:0.3  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.31  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:739639 | GE:15251 | epochs:0.3  | ep_lens:50.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:45.0 (spuriousM:4.0 ,   8.9%) | ep_rewards:-0.38 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:740543 | GE:15270 | epochs:0.3  | ep_lens:79.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:71.0 (spuriousM:4.0 ,   5.6%) | ep_rewards:-0.60 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:740995 | GE:15280 | epochs:0.3  | ep_lens:52.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.44 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:741392 | GE:15287 | epochs:0.3  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.36 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:741928 | GE:15297 | epochs:0.3  | ep_lens:53.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:42.0 (spuriousM:4.0 ,   9.5%) | ep_rewards:-0.54 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:742399 | GE:15307 | epochs:0.3  | ep_lens:60.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:56.0 (spuriousM:11.0,  19.6%) | ep_rewards:-0.40 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:742647 | GE:15314 | epochs:0.3  | ep_lens:42.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.39 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:743295 | GE:15328 | epochs:0.3  | ep_lens:61.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:52.0 (spuriousM:3.0 ,   5.8%) | ep_rewards:-0.53 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:743546 | GE:15334 | epochs:0.3  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.28 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:743739 | GE:15336 | epochs:0.3  | ep_lens:37.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:25.0 (spuriousM:4.0 ,  16.0%) | ep_rewards:-0.49 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:744009 | GE:15343 | epochs:0.3  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:5.0 ,  13.9%) | ep_rewards:-0.33 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:744123 | GE:15344 | epochs:0.3  | ep_lens:24.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:18.0 (spuriousM:2.0 ,  11.1%) | ep_rewards:-0.27 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:744553 | GE:15354 | epochs:0.3  | ep_lens:54.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:48.0 (spuriousM:5.0 ,  10.4%) | ep_rewards:-0.42 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:744773 | GE:15356 | epochs:0.3  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:6.0 ,  16.7%) | ep_rewards:-0.30 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:745263 | GE:15369 | epochs:0.3  | ep_lens:62.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:54.0 (spuriousM:5.0 ,   9.3%) | ep_rewards:-0.51 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:745624 | GE:15377 | epochs:0.3  | ep_lens:54.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:46.0 (spuriousM:5.0 ,  10.9%) | ep_rewards:-0.47 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:745732 | GE:15378 | epochs:0.3  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.26  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:745986 | GE:15383 | epochs:0.3  | ep_lens:37.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:35.0 (spuriousM:7.0 ,  20.0%) | ep_rewards:-0.24 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:746078 | GE:15385 | epochs:0.3  | ep_lens:17.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.25  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:746332 | GE:15389 | epochs:0.3  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:9.0 ,  23.1%) | ep_rewards:-0.35 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:746617 | GE:15397 | epochs:0.3  | ep_lens:48.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:40.0 (spuriousM:6.0 ,  15.0%) | ep_rewards:-0.44 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:747018 | GE:15406 | epochs:0.3  | ep_lens:54.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:43.0 (spuriousM:7.0 ,  16.3%) | ep_rewards:-0.55 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:747089 | GE:15408 | epochs:0.3  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.17  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:747265 | GE:15411 | epochs:0.3  | ep_lens:22.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.21  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:747598 | GE:15417 | epochs:0.3  | ep_lens:49.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:46.0 (spuriousM:5.0 ,  10.9%) | ep_rewards:-0.32 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:747866 | GE:15423 | epochs:0.3  | ep_lens:47.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.54 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:748680 | GE:15437 | epochs:0.3  | ep_lens:76.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:63.0 (spuriousM:8.0 ,  12.7%) | ep_rewards:-0.71 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:749091 | GE:15446 | epochs:0.3  | ep_lens:57.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:48.0 (spuriousM:3.0 ,   6.2%) | ep_rewards:-0.51 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:749435 | GE:15450 | epochs:0.3  | ep_lens:52.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:45.0 (spuriousM:5.0 ,  11.1%) | ep_rewards:-0.44 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:749739 | GE:15458 | epochs:0.3  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:5.0 ,  12.5%) | ep_rewards:-0.38 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:749986 | GE:15462 | epochs:0.3  | ep_lens:33.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:25.0 (spuriousM:4.0 ,  16.0%) | ep_rewards:-0.37 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:750188 | GE:15466 | epochs:0.3  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.29 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:750765 | GE:15475 | epochs:0.3  | ep_lens:75.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:70.0 (spuriousM:9.0 ,  12.9%) | ep_rewards:-0.50 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:751184 | GE:15483 | epochs:0.3  | ep_lens:56.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:51.0 (spuriousM:8.0 ,  15.7%) | ep_rewards:-0.41 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:751613 | GE:15491 | epochs:0.3  | ep_lens:53.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:46.0 (spuriousM:8.0 ,  17.4%) | ep_rewards:-0.44 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:751977 | GE:15496 | epochs:0.3  | ep_lens:51.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:45.0 (spuriousM:7.0 ,  15.6%) | ep_rewards:-0.41 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:752397 | GE:15503 | epochs:0.3  | ep_lens:54.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:49.0 (spuriousM:8.0 ,  16.3%) | ep_rewards:-0.40 | mean_Q:-0.31  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:752672 | GE:15510 | epochs:0.3  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.29 | mean_Q:-0.31  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:752882 | GE:15515 | epochs:0.3  | ep_lens:46.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.46 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:753143 | GE:15521 | epochs:0.3  | ep_lens:44.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:36.0 (spuriousM:6.0 ,  16.7%) | ep_rewards:-0.42 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:753520 | GE:15526 | epochs:0.3  | ep_lens:58.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:47.0 (spuriousM:5.0 ,  10.6%) | ep_rewards:-0.57 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:753566 | GE:15529 | epochs:0.3  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.28  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:753803 | GE:15533 | epochs:0.3  | ep_lens:43.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.52 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:753869 | GE:15534 | epochs:0.3  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:754408 | GE:15546 | epochs:0.3  | ep_lens:71.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:65.0 (spuriousM:14.0,  21.5%) | ep_rewards:-0.51 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:754661 | GE:15553 | epochs:0.3  | ep_lens:42.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:34.0 (spuriousM:9.0 ,  26.5%) | ep_rewards:-0.41 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:754823 | GE:15555 | epochs:0.3  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:7.0 ,  28.0%) | ep_rewards:-0.19 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:755114 | GE:15562 | epochs:0.3  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:12.0,  35.3%) | ep_rewards:-0.29 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:755426 | GE:15571 | epochs:0.3  | ep_lens:35.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.35 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:755660 | GE:15575 | epochs:0.3  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.33 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:756452 | GE:15599 | epochs:0.3  | ep_lens:89.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:85.0 (spuriousM:30.0,  35.3%) | ep_rewards:-0.55 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:756690 | GE:15604 | epochs:0.3  | ep_lens:30.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.20 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:757281 | GE:15619 | epochs:0.3  | ep_lens:55.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:51.0 (spuriousM:8.0 ,  15.7%) | ep_rewards:-0.38 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:757545 | GE:15625 | epochs:0.3  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:7.0 ,  19.4%) | ep_rewards:-0.33 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:757745 | GE:15631 | epochs:0.3  | ep_lens:30.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:29.0 (spuriousM:10.0,  34.5%) | ep_rewards:-0.18 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:757967 | GE:15635 | epochs:0.3  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.39 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:758228 | GE:15642 | epochs:0.3  | ep_lens:42.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:41.0 (spuriousM:9.0 ,  22.0%) | ep_rewards:-0.24 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:758403 | GE:15645 | epochs:0.3  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:4.0 ,  15.4%) | ep_rewards:-0.22 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:758637 | GE:15652 | epochs:0.3  | ep_lens:26.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.18 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:758860 | GE:15657 | epochs:0.3  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.30 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:759451 | GE:15673 | epochs:0.3  | ep_lens:62.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:54.0 (spuriousM:9.0 ,  16.7%) | ep_rewards:-0.51 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:759990 | GE:15688 | epochs:0.3  | ep_lens:57.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:53.0 (spuriousM:3.0 ,   5.7%) | ep_rewards:-0.39 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:760295 | GE:15693 | epochs:0.3  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:11.0,  26.2%) | ep_rewards:-0.33 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:760784 | GE:15704 | epochs:0.3  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.40 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:761479 | GE:15721 | epochs:0.3  | ep_lens:68.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:61.0 (spuriousM:10.0,  16.4%) | ep_rewards:-0.52 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:761687 | GE:15724 | epochs:0.3  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.30 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:761991 | GE:15730 | epochs:0.3  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.33 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:762073 | GE:15735 | epochs:0.3  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.07  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:762507 | GE:15746 | epochs:0.3  | ep_lens:44.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:41.0 (spuriousM:5.0 ,  12.2%) | ep_rewards:-0.30 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:762623 | GE:15750 | epochs:0.3  | ep_lens:24.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.20 | mean_Q:-0.00  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:762847 | GE:15753 | epochs:0.3  | ep_lens:44.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:33.0 (spuriousM:6.0 ,  18.2%) | ep_rewards:-0.50 | mean_Q:0.07   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:763654 | GE:15770 | epochs:0.3  | ep_lens:67.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:61.0 (spuriousM:6.0 ,   9.8%) | ep_rewards:-0.49 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:763739 | GE:15772 | epochs:0.3  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:764129 | GE:15781 | epochs:0.3  | ep_lens:58.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:52.0 (spuriousM:7.0 ,  13.5%) | ep_rewards:-0.44 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:764364 | GE:15788 | epochs:0.3  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:5.0 ,  13.9%) | ep_rewards:-0.36 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:764598 | GE:15793 | epochs:0.3  | ep_lens:37.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.36 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:764889 | GE:15801 | epochs:0.3  | ep_lens:41.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.23 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:765245 | GE:15809 | epochs:0.3  | ep_lens:51.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:45.0 (spuriousM:4.0 ,   8.9%) | ep_rewards:-0.41 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:765395 | GE:15812 | epochs:0.3  | ep_lens:36.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:27.0 (spuriousM:5.0 ,  18.5%) | ep_rewards:-0.41 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:765609 | GE:15817 | epochs:0.3  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.33 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:766095 | GE:15828 | epochs:0.3  | ep_lens:63.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:52.0 (spuriousM:6.0 ,  11.5%) | ep_rewards:-0.59 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:766169 | GE:15829 | epochs:0.3  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:766288 | GE:15832 | epochs:0.3  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.25  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:766592 | GE:15839 | epochs:0.3  | ep_lens:30.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:29.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.82  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:766864 | GE:15845 | epochs:0.3  | ep_lens:46.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.26 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:766984 | GE:15847 | epochs:0.3  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.06  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:767306 | GE:15854 | epochs:0.3  | ep_lens:38.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:37.0 (spuriousM:5.0 ,  13.5%) | ep_rewards:-0.22 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:767908 | GE:15867 | epochs:0.3  | ep_lens:60.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:55.0 (spuriousM:3.0 ,   5.5%) | ep_rewards:-0.43 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:768114 | GE:15873 | epochs:0.3  | ep_lens:40.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:38.0 (spuriousM:5.0 ,  13.2%) | ep_rewards:-0.25 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:768537 | GE:15880 | epochs:0.3  | ep_lens:61.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:54.0 (spuriousM:8.0 ,  14.8%) | ep_rewards:-0.48 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:768695 | GE:15881 | epochs:0.3  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.25 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:769091 | GE:15890 | epochs:0.3  | ep_lens:40.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:39.0 (spuriousM:5.0 ,  12.8%) | ep_rewards:-0.23 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:769292 | GE:15896 | epochs:0.3  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:5.0 ,  16.7%) | ep_rewards:-0.27 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:769519 | GE:15903 | epochs:0.3  | ep_lens:26.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.21 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:769704 | GE:15907 | epochs:0.3  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:5.0 ,  19.2%) | ep_rewards:-0.22 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:769867 | GE:15911 | epochs:0.3  | ep_lens:26.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.18 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:770087 | GE:15917 | epochs:0.3  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:4.0 ,  14.3%) | ep_rewards:-0.29 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:770461 | GE:15924 | epochs:0.3  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.31 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:770765 | GE:15931 | epochs:0.3  | ep_lens:45.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.28 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:770916 | GE:15934 | epochs:0.3  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.27  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:771205 | GE:15940 | epochs:0.3  | ep_lens:48.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:45.0 (spuriousM:9.0 ,  20.0%) | ep_rewards:-0.32 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:771502 | GE:15946 | epochs:0.3  | ep_lens:39.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.25 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:772553 | GE:15970 | epochs:0.3  | ep_lens:100.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:89.0 (spuriousM:15.0,  16.9%) | ep_rewards:-0.78 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:772801 | GE:15973 | epochs:0.3  | ep_lens:42.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.39 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:772910 | GE:15976 | epochs:0.3  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:773152 | GE:15979 | epochs:0.3  | ep_lens:51.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:40.0 (spuriousM:5.0 ,  12.5%) | ep_rewards:-0.53 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:773605 | GE:15988 | epochs:0.3  | ep_lens:60.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:51.0 (spuriousM:4.0 ,   7.8%) | ep_rewards:-0.53 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:773886 | GE:15995 | epochs:0.3  | ep_lens:48.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:40.0 (spuriousM:5.0 ,  12.5%) | ep_rewards:-0.44 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:774160 | GE:15999 | epochs:0.3  | ep_lens:45.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.40 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:774248 | GE:16002 | epochs:0.3  | ep_lens:24.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.22 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:775005 | GE:16021 | epochs:0.3  | ep_lens:52.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:49.0 (spuriousM:2.0 ,   4.1%) | ep_rewards:-0.34 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:775545 | GE:16033 | epochs:0.3  | ep_lens:69.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:60.0 (spuriousM:10.0,  16.7%) | ep_rewards:-0.57 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:775898 | GE:16038 | epochs:0.3  | ep_lens:61.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:47.0 (spuriousM:4.0 ,   8.5%) | ep_rewards:-0.66 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:776397 | GE:16048 | epochs:0.3  | ep_lens:58.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:49.0 (spuriousM:3.0 ,   6.1%) | ep_rewards:-0.52 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:776658 | GE:16052 | epochs:0.3  | ep_lens:46.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:44.0 (spuriousM:6.0 ,  13.6%) | ep_rewards:-0.28 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:777103 | GE:16061 | epochs:0.3  | ep_lens:53.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:49.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.37 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:777331 | GE:16064 | epochs:0.3  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:4.0 ,  11.8%) | ep_rewards:-0.26 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:777927 | GE:16077 | epochs:0.3  | ep_lens:59.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:53.0 (spuriousM:3.0 ,   5.7%) | ep_rewards:-0.45 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:778275 | GE:16082 | epochs:0.3  | ep_lens:44.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.32 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:778518 | GE:16085 | epochs:0.3  | ep_lens:44.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:35.0 (spuriousM:5.0 ,  14.3%) | ep_rewards:-0.45 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:778712 | GE:16090 | epochs:0.3  | ep_lens:40.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.40 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:778908 | GE:16096 | epochs:0.3  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.26 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:779166 | GE:16101 | epochs:0.3  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.30 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:779414 | GE:16104 | epochs:0.3  | ep_lens:48.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.42 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:779628 | GE:16108 | epochs:0.3  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:780154 | GE:16120 | epochs:0.3  | ep_lens:70.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:59.0 (spuriousM:12.0,  20.3%) | ep_rewards:-0.63 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:780268 | GE:16122 | epochs:0.3  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.27  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:780880 | GE:16135 | epochs:0.3  | ep_lens:70.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:60.0 (spuriousM:10.0,  16.7%) | ep_rewards:-0.60 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:781301 | GE:16148 | epochs:0.3  | ep_lens:55.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:51.0 (spuriousM:5.0 ,   9.8%) | ep_rewards:-0.38 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:781518 | GE:16151 | epochs:0.3  | ep_lens:37.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.41 | mean_Q:0.00   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:781748 | GE:16155 | epochs:0.3  | ep_lens:27.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:26.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.01  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:782231 | GE:16165 | epochs:0.3  | ep_lens:60.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:57.0 (spuriousM:4.0 ,   7.0%) | ep_rewards:-0.38 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:782676 | GE:16176 | epochs:0.3  | ep_lens:52.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:46.0 (spuriousM:3.0 ,   6.5%) | ep_rewards:-0.41 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:783165 | GE:16189 | epochs:0.3  | ep_lens:51.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:49.0 (spuriousM:2.0 ,   4.1%) | ep_rewards:-0.31 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:783591 | GE:16198 | epochs:0.3  | ep_lens:50.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:45.0 (spuriousM:10.0,  22.2%) | ep_rewards:-0.38 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:783961 | GE:16206 | epochs:0.3  | ep_lens:49.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:48.0 (spuriousM:10.0,  20.8%) | ep_rewards:-0.27 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:784160 | GE:16211 | epochs:0.3  | ep_lens:45.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.60 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:784726 | GE:16222 | epochs:0.3  | ep_lens:63.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.54 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:784834 | GE:16225 | epochs:0.3  | ep_lens:22.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:785333 | GE:16235 | epochs:0.3  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:5.0 ,  10.0%) | ep_rewards:-0.46 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:785773 | GE:16245 | epochs:0.3  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.40 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:786061 | GE:16251 | epochs:0.3  | ep_lens:43.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:41.0 (spuriousM:10.0,  24.4%) | ep_rewards:-0.27 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:786551 | GE:16261 | epochs:0.3  | ep_lens:55.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:46.0 (spuriousM:6.0 ,  13.0%) | ep_rewards:-0.50 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:786871 | GE:16269 | epochs:0.3  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:9.0 ,  25.7%) | ep_rewards:-0.27 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:786986 | GE:16272 | epochs:0.3  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.30  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:787200 | GE:16276 | epochs:0.3  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.24 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:787435 | GE:16280 | epochs:0.3  | ep_lens:33.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.22 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:788202 | GE:16298 | epochs:0.3  | ep_lens:61.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:54.0 (spuriousM:2.0 ,   3.7%) | ep_rewards:-0.48 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:788420 | GE:16304 | epochs:0.3  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.29 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:788735 | GE:16311 | epochs:0.3  | ep_lens:48.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.37 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:788910 | GE:16315 | epochs:0.3  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.30 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:789143 | GE:16318 | epochs:0.3  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:5.0 ,  12.8%) | ep_rewards:-0.38 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:789329 | GE:16325 | epochs:0.3  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.27 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:789772 | GE:16333 | epochs:0.3  | ep_lens:60.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.55 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:789936 | GE:16337 | epochs:0.3  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.34 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:790668 | GE:16354 | epochs:0.3  | ep_lens:65.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:58.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.50 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:790771 | GE:16357 | epochs:0.3  | ep_lens:13.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.14  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:791711 | GE:16379 | epochs:0.3  | ep_lens:87.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:75.0 (spuriousM:10.0,  13.3%) | ep_rewards:-0.74 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:792038 | GE:16386 | epochs:0.3  | ep_lens:40.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.25 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:792171 | GE:16391 | epochs:0.3  | ep_lens:27.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.26 | mean_Q:-0.03  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:792563 | GE:16397 | epochs:0.3  | ep_lens:46.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.31 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:792877 | GE:16405 | epochs:0.3  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:7.0 ,  18.4%) | ep_rewards:-0.37 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:793589 | GE:16419 | epochs:0.3  | ep_lens:73.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:62.0 (spuriousM:6.0 ,   9.7%) | ep_rewards:-0.64 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:794026 | GE:16429 | epochs:0.3  | ep_lens:52.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.44 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:794095 | GE:16432 | epochs:0.3  | ep_lens:5.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:4.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.95  | mean_Q:-0.32  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:794341 | GE:16438 | epochs:0.3  | ep_lens:42.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.26 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:795071 | GE:16453 | epochs:0.3  | ep_lens:74.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:59.0 (spuriousM:4.0 ,   6.8%) | ep_rewards:-0.75 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:795413 | GE:16459 | epochs:0.3  | ep_lens:55.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:42.0 (spuriousM:7.0 ,  16.7%) | ep_rewards:-0.60 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:795637 | GE:16463 | epochs:0.3  | ep_lens:37.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.21 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:795980 | GE:16469 | epochs:0.3  | ep_lens:45.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:38.0 (spuriousM:5.0 ,  13.2%) | ep_rewards:-0.40 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:796178 | GE:16474 | epochs:0.3  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.26 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:796418 | GE:16480 | epochs:0.3  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:4.0 ,  15.4%) | ep_rewards:-0.19 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:796701 | GE:16484 | epochs:0.3  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.29 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:797297 | GE:16498 | epochs:0.3  | ep_lens:81.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:69.0 (spuriousM:17.0,  24.6%) | ep_rewards:-0.71 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:797659 | GE:16507 | epochs:0.3  | ep_lens:43.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.32 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:797919 | GE:16514 | epochs:0.3  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.34 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:798259 | GE:16522 | epochs:0.3  | ep_lens:44.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.42 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:798399 | GE:16525 | epochs:0.3  | ep_lens:23.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.14 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:798923 | GE:16539 | epochs:0.3  | ep_lens:51.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.43 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:799547 | GE:16549 | epochs:0.3  | ep_lens:62.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:55.0 (spuriousM:2.0 ,   3.6%) | ep_rewards:-0.49 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:800337 | GE:16570 | epochs:0.3  | ep_lens:65.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:57.0 (spuriousM:7.0 ,  12.3%) | ep_rewards:-0.53 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:801067 | GE:16585 | epochs:0.3  | ep_lens:70.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:63.0 (spuriousM:9.0 ,  14.3%) | ep_rewards:-0.53 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:801203 | GE:16588 | epochs:0.3  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:801433 | GE:16594 | epochs:0.3  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:7.0 ,  19.4%) | ep_rewards:-0.36 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:801572 | GE:16599 | epochs:0.3  | ep_lens:29.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:24.0 (spuriousM:4.0 ,  16.7%) | ep_rewards:-0.27 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:801824 | GE:16604 | epochs:0.3  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.23 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:802026 | GE:16611 | epochs:0.3  | ep_lens:31.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.21 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:803123 | GE:16636 | epochs:0.3  | ep_lens:88.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:78.0 (spuriousM:4.0 ,   5.1%) | ep_rewards:-0.69 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:803423 | GE:16642 | epochs:0.3  | ep_lens:27.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:26.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:803884 | GE:16652 | epochs:0.3  | ep_lens:60.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:49.0 (spuriousM:4.0 ,   8.2%) | ep_rewards:-0.58 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:804058 | GE:16657 | epochs:0.3  | ep_lens:30.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.28 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:804328 | GE:16664 | epochs:0.3  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.35 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:804950 | GE:16678 | epochs:0.3  | ep_lens:79.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:66.0 (spuriousM:13.0,  19.7%) | ep_rewards:-0.72 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:805330 | GE:16685 | epochs:0.3  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.26 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:805932 | GE:16695 | epochs:0.3  | ep_lens:59.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:54.0 (spuriousM:8.0 ,  14.8%) | ep_rewards:-0.42 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:806374 | GE:16706 | epochs:0.3  | ep_lens:55.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:47.0 (spuriousM:9.0 ,  19.1%) | ep_rewards:-0.48 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:806622 | GE:16711 | epochs:0.3  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.22 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:806874 | GE:16717 | epochs:0.3  | ep_lens:44.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.45 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:807291 | GE:16727 | epochs:0.3  | ep_lens:47.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.29 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:808000 | GE:16741 | epochs:0.3  | ep_lens:72.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:64.0 (spuriousM:2.0 ,   3.1%) | ep_rewards:-0.56 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:808258 | GE:16745 | epochs:0.3  | ep_lens:48.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:43.0 (spuriousM:7.0 ,  16.3%) | ep_rewards:-0.37 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:808617 | GE:16754 | epochs:0.3  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.32 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:808851 | GE:16759 | epochs:0.3  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.27 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:809008 | GE:16764 | epochs:0.3  | ep_lens:26.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.26 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:809245 | GE:16770 | epochs:0.3  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.32 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:809448 | GE:16773 | epochs:0.3  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:7.0 ,  21.2%) | ep_rewards:-0.26 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:809843 | GE:16780 | epochs:0.3  | ep_lens:53.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:50.0 (spuriousM:5.0 ,  10.0%) | ep_rewards:-0.34 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:810224 | GE:16789 | epochs:0.3  | ep_lens:56.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:46.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.53 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:810445 | GE:16794 | epochs:0.3  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.29 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:810825 | GE:16804 | epochs:0.3  | ep_lens:52.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:47.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.39 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:811081 | GE:16808 | epochs:0.3  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.29 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:811717 | GE:16823 | epochs:0.3  | ep_lens:47.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.29 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:812469 | GE:16838 | epochs:0.3  | ep_lens:80.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:67.0 (spuriousM:5.0 ,   7.5%) | ep_rewards:-0.73 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:812714 | GE:16845 | epochs:0.3  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.38 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:813014 | GE:16854 | epochs:0.3  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:5.0 ,  13.9%) | ep_rewards:-0.36 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:813303 | GE:16859 | epochs:0.3  | ep_lens:47.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:39.0 (spuriousM:6.0 ,  15.4%) | ep_rewards:-0.44 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:813596 | GE:16865 | epochs:0.3  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.25 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:813702 | GE:16869 | epochs:0.3  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:813950 | GE:16875 | epochs:0.3  | ep_lens:42.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.39 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:814440 | GE:16885 | epochs:0.3  | ep_lens:64.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:55.0 (spuriousM:3.0 ,   5.5%) | ep_rewards:-0.55 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:814634 | GE:16890 | epochs:0.3  | ep_lens:42.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:33.0 (spuriousM:5.0 ,  15.2%) | ep_rewards:-0.44 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:815067 | GE:16901 | epochs:0.3  | ep_lens:63.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:57.0 (spuriousM:13.0,  22.8%) | ep_rewards:-0.47 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:815299 | GE:16905 | epochs:0.3  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.31 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:815649 | GE:16914 | epochs:0.3  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.36 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:815877 | GE:16920 | epochs:0.3  | ep_lens:20.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:18.0 (spuriousM:2.0 ,  11.1%) | ep_rewards:-0.15 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:816187 | GE:16930 | epochs:0.3  | ep_lens:47.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:40.0 (spuriousM:11.0,  27.5%) | ep_rewards:-0.41 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:817001 | GE:16946 | epochs:0.3  | ep_lens:82.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:71.0 (spuriousM:10.0,  14.1%) | ep_rewards:-0.69 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:817072 | GE:16948 | epochs:0.3  | ep_lens:9.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:8.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:817243 | GE:16950 | epochs:0.3  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.13  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:817693 | GE:16961 | epochs:0.3  | ep_lens:65.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:52.0 (spuriousM:5.0 ,   9.6%) | ep_rewards:-0.65 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:817866 | GE:16967 | epochs:0.3  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.27 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:818168 | GE:16974 | epochs:0.3  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.30 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:818565 | GE:16980 | epochs:0.3  | ep_lens:57.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:49.0 (spuriousM:16.0,  32.7%) | ep_rewards:-0.49 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:818792 | GE:16987 | epochs:0.3  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.26 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:818942 | GE:16990 | epochs:0.3  | ep_lens:24.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.17 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:819151 | GE:16994 | epochs:0.3  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:5.0 ,  16.7%) | ep_rewards:-0.24 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:819376 | GE:16998 | epochs:0.3  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.34 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:819611 | GE:17007 | epochs:0.3  | ep_lens:44.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.42 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:819901 | GE:17014 | epochs:0.3  | ep_lens:33.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.22 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:820472 | GE:17028 | epochs:0.3  | ep_lens:67.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:60.0 (spuriousM:8.0 ,  13.3%) | ep_rewards:-0.51 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:820740 | GE:17034 | epochs:0.3  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:6.0 ,  20.0%) | ep_rewards:-0.30 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:821387 | GE:17048 | epochs:0.3  | ep_lens:74.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:62.0 (spuriousM:10.0,  16.1%) | ep_rewards:-0.67 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:821488 | GE:17050 | epochs:0.3  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:821882 | GE:17060 | epochs:0.3  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.31 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:822008 | GE:17064 | epochs:0.3  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.16  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:822116 | GE:17066 | epochs:0.3  | ep_lens:19.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.15 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:822170 | GE:17069 | epochs:0.3  | ep_lens:10.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:9.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:822437 | GE:17074 | epochs:0.3  | ep_lens:39.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.35 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:822666 | GE:17082 | epochs:0.3  | ep_lens:39.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.40 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:822843 | GE:17085 | epochs:0.3  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:9.0 ,  27.3%) | ep_rewards:-0.29 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:823356 | GE:17098 | epochs:0.3  | ep_lens:53.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:49.0 (spuriousM:3.0 ,   6.1%) | ep_rewards:-0.37 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:823756 | GE:17106 | epochs:0.3  | ep_lens:49.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.50 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:824468 | GE:17123 | epochs:0.3  | ep_lens:64.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:57.0 (spuriousM:3.0 ,   5.3%) | ep_rewards:-0.50 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:824656 | GE:17126 | epochs:0.3  | ep_lens:39.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.40 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:824805 | GE:17132 | epochs:0.3  | ep_lens:30.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:24.0 (spuriousM:4.0 ,  16.7%) | ep_rewards:-0.30 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:824988 | GE:17136 | epochs:0.3  | ep_lens:40.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:34.0 (spuriousM:6.0 ,  17.6%) | ep_rewards:-0.35 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:825184 | GE:17140 | epochs:0.3  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.19 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:825456 | GE:17146 | epochs:0.3  | ep_lens:43.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:39.0 (spuriousM:7.0 ,  17.9%) | ep_rewards:-0.32 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:826226 | GE:17164 | epochs:0.3  | ep_lens:76.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:62.0 (spuriousM:5.0 ,   8.1%) | ep_rewards:-0.73 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:826717 | GE:17175 | epochs:0.3  | ep_lens:58.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:51.0 (spuriousM:6.0 ,  11.8%) | ep_rewards:-0.47 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:826811 | GE:17178 | epochs:0.3  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.16  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:827062 | GE:17181 | epochs:0.3  | ep_lens:47.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.56 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:828064 | GE:17203 | epochs:0.3  | ep_lens:77.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:68.0 (spuriousM:1.0 ,   1.5%) | ep_rewards:-0.61 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:828382 | GE:17212 | epochs:0.3  | ep_lens:40.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:37.0 (spuriousM:6.0 ,  16.2%) | ep_rewards:-0.28 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:828565 | GE:17215 | epochs:0.3  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.30 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:828910 | GE:17221 | epochs:0.3  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:5.0 ,  11.9%) | ep_rewards:-0.39 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:829161 | GE:17229 | epochs:0.3  | ep_lens:40.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.38 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:830012 | GE:17246 | epochs:0.3  | ep_lens:80.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:67.0 (spuriousM:5.0 ,   7.5%) | ep_rewards:-0.73 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:830428 | GE:17256 | epochs:0.3  | ep_lens:41.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.26 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:830766 | GE:17263 | epochs:0.3  | ep_lens:43.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:41.0 (spuriousM:5.0 ,  12.2%) | ep_rewards:-0.27 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:831043 | GE:17270 | epochs:0.3  | ep_lens:48.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:41.0 (spuriousM:9.0 ,  22.0%) | ep_rewards:-0.42 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:831764 | GE:17285 | epochs:0.3  | ep_lens:79.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:68.0 (spuriousM:11.0,  16.2%) | ep_rewards:-0.67 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:831967 | GE:17293 | epochs:0.3  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:4.0 ,  16.0%) | ep_rewards:-0.22 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:832428 | GE:17304 | epochs:0.3  | ep_lens:42.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.24 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:832637 | GE:17309 | epochs:0.3  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.31 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:833357 | GE:17325 | epochs:0.3  | ep_lens:67.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:53.0 (spuriousM:5.0 ,   9.4%) | ep_rewards:-0.69 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:834006 | GE:17337 | epochs:0.3  | ep_lens:74.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:61.0 (spuriousM:13.0,  21.3%) | ep_rewards:-0.70 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:834287 | GE:17344 | epochs:0.3  | ep_lens:32.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.29 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:834832 | GE:17356 | epochs:0.3  | ep_lens:68.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:59.0 (spuriousM:8.0 ,  13.6%) | ep_rewards:-0.57 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:835365 | GE:17365 | epochs:0.3  | ep_lens:49.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:46.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.32 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:835772 | GE:17376 | epochs:0.3  | ep_lens:51.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:47.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.36 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:835991 | GE:17380 | epochs:0.3  | ep_lens:32.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.26 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:836106 | GE:17384 | epochs:0.3  | ep_lens:25.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.23 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:836327 | GE:17390 | epochs:0.3  | ep_lens:34.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:32.0 (spuriousM:6.0 ,  18.8%) | ep_rewards:-0.22 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:836515 | GE:17394 | epochs:0.3  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:7.0 ,  26.9%) | ep_rewards:-0.25 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:836626 | GE:17399 | epochs:0.3  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.16  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:837123 | GE:17411 | epochs:0.3  | ep_lens:59.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.57 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:837316 | GE:17415 | epochs:0.3  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.36 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:837872 | GE:17425 | epochs:0.3  | ep_lens:62.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:59.0 (spuriousM:1.0 ,   1.7%) | ep_rewards:-0.39 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:838020 | GE:17429 | epochs:0.3  | ep_lens:29.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.17 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:838276 | GE:17435 | epochs:0.3  | ep_lens:32.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.31 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:838360 | GE:17438 | epochs:0.3  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.23  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:839159 | GE:17456 | epochs:0.3  | ep_lens:65.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:56.0 (spuriousM:5.0 ,   8.9%) | ep_rewards:-0.55 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:839877 | GE:17474 | epochs:0.3  | ep_lens:67.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:58.0 (spuriousM:5.0 ,   8.6%) | ep_rewards:-0.56 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:840071 | GE:17479 | epochs:0.3  | ep_lens:29.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.30 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:840873 | GE:17496 | epochs:0.3  | ep_lens:72.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:63.0 (spuriousM:3.0 ,   4.8%) | ep_rewards:-0.59 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:841173 | GE:17502 | epochs:0.3  | ep_lens:40.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.28 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:841330 | GE:17505 | epochs:0.3  | ep_lens:29.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.25 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:842318 | GE:17526 | epochs:0.3  | ep_lens:81.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:70.0 (spuriousM:9.0 ,  12.9%) | ep_rewards:-0.68 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:842541 | GE:17532 | epochs:0.3  | ep_lens:43.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.42 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:842960 | GE:17541 | epochs:0.3  | ep_lens:49.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.40 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:843178 | GE:17546 | epochs:0.3  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.25 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:843417 | GE:17552 | epochs:0.3  | ep_lens:40.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.43 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:843902 | GE:17562 | epochs:0.3  | ep_lens:52.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.44 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:844251 | GE:17571 | epochs:0.3  | ep_lens:50.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:45.0 (spuriousM:5.0 ,  11.1%) | ep_rewards:-0.38 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:844742 | GE:17583 | epochs:0.3  | ep_lens:61.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:55.0 (spuriousM:8.0 ,  14.5%) | ep_rewards:-0.46 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:845223 | GE:17595 | epochs:0.3  | ep_lens:57.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:48.0 (spuriousM:7.0 ,  14.6%) | ep_rewards:-0.51 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:845579 | GE:17601 | epochs:0.3  | ep_lens:55.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:45.0 (spuriousM:13.0,  28.9%) | ep_rewards:-0.53 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:845670 | GE:17605 | epochs:0.3  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:845880 | GE:17609 | epochs:0.3  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:5.0 ,  15.6%) | ep_rewards:-0.25 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:846366 | GE:17618 | epochs:0.3  | ep_lens:52.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:47.0 (spuriousM:7.0 ,  14.9%) | ep_rewards:-0.39 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:846960 | GE:17632 | epochs:0.3  | ep_lens:58.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:48.0 (spuriousM:5.0 ,  10.4%) | ep_rewards:-0.54 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:847359 | GE:17641 | epochs:0.3  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.39 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:847609 | GE:17645 | epochs:0.3  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.31 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:848078 | GE:17656 | epochs:0.3  | ep_lens:76.0 | edits:22.0 (spuriousE:22.0, 100.0%) | moves:54.0 (spuriousM:7.0 ,  13.0%) | ep_rewards:-0.93 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:849371 | GE:17681 | epochs:0.3  | ep_lens:98.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:87.0 (spuriousM:8.0 ,   9.2%) | ep_rewards:-0.77 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:849758 | GE:17687 | epochs:0.3  | ep_lens:52.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:42.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.51 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:850349 | GE:17697 | epochs:0.3  | ep_lens:79.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:68.0 (spuriousM:7.0 ,  10.3%) | ep_rewards:-0.67 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:850586 | GE:17701 | epochs:0.3  | ep_lens:44.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:41.0 (spuriousM:9.0 ,  22.0%) | ep_rewards:-0.30 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:850813 | GE:17707 | epochs:0.3  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.28 | mean_Q:-0.29  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:852077 | GE:17726 | epochs:0.3  | ep_lens:100.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:84.0 (spuriousM:2.0 ,   2.4%) | ep_rewards:-0.90 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:852335 | GE:17728 | epochs:0.3  | ep_lens:30.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:29.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.82  | mean_Q:-0.27  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:852595 | GE:17735 | epochs:0.3  | ep_lens:50.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.45 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:852806 | GE:17738 | epochs:0.3  | ep_lens:37.0 | edits:5.0  (spuriousE:4.0 ,  80.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:0.69  | mean_Q:-0.25  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:853260 | GE:17747 | epochs:0.3  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:5.0 ,  10.0%) | ep_rewards:-0.46 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:853496 | GE:17751 | epochs:0.3  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:5.0 ,  13.9%) | ep_rewards:-0.30 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:853812 | GE:17758 | epochs:0.3  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:5.0 ,  12.5%) | ep_rewards:-0.38 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:854221 | GE:17765 | epochs:0.3  | ep_lens:57.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:51.0 (spuriousM:8.0 ,  15.7%) | ep_rewards:-0.44 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:854475 | GE:17770 | epochs:0.3  | ep_lens:44.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.42 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:855082 | GE:17785 | epochs:0.3  | ep_lens:60.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:54.0 (spuriousM:6.0 ,  11.1%) | ep_rewards:-0.45 | mean_Q:-0.30  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:855312 | GE:17791 | epochs:0.3  | ep_lens:36.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:30.0 (spuriousM:8.0 ,  26.7%) | ep_rewards:-0.33 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:855592 | GE:17796 | epochs:0.3  | ep_lens:37.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.21 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:855905 | GE:17804 | epochs:0.3  | ep_lens:48.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.29 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:856349 | GE:17810 | epochs:0.3  | ep_lens:60.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:51.0 (spuriousM:5.0 ,   9.8%) | ep_rewards:-0.53 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:856939 | GE:17821 | epochs:0.3  | ep_lens:60.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:49.0 (spuriousM:6.0 ,  12.2%) | ep_rewards:-0.58 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:857125 | GE:17827 | epochs:0.3  | ep_lens:33.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:27.0 (spuriousM:4.0 ,  14.8%) | ep_rewards:-0.32 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:857194 | GE:17828 | epochs:0.3  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.30  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:857310 | GE:17832 | epochs:0.3  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.26  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:857543 | GE:17836 | epochs:0.3  | ep_lens:44.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:34.0 (spuriousM:8.0 ,  23.5%) | ep_rewards:-0.47 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:857753 | GE:17838 | epochs:0.3  | ep_lens:45.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:36.0 (spuriousM:8.0 ,  22.2%) | ep_rewards:-0.45 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:858131 | GE:17844 | epochs:0.3  | ep_lens:61.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:53.0 (spuriousM:11.0,  20.8%) | ep_rewards:-0.51 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:858926 | GE:17860 | epochs:0.3  | ep_lens:82.0 | edits:22.0 (spuriousE:22.0, 100.0%) | moves:60.0 (spuriousM:2.0 ,   3.3%) | ep_rewards:-0.96 | mean_Q:-0.30  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:859196 | GE:17866 | epochs:0.3  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.36 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:859359 | GE:17869 | epochs:0.3  | ep_lens:25.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:21.0 (spuriousM:3.0 ,  14.3%) | ep_rewards:-0.23 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:859499 | GE:17873 | epochs:0.3  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.20 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:859721 | GE:17879 | epochs:0.3  | ep_lens:30.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.33 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:860344 | GE:17889 | epochs:0.3  | ep_lens:61.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:52.0 (spuriousM:3.0 ,   5.8%) | ep_rewards:-0.53 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:860525 | GE:17894 | epochs:0.3  | ep_lens:36.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:29.0 (spuriousM:5.0 ,  17.2%) | ep_rewards:-0.36 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:861189 | GE:17911 | epochs:0.3  | ep_lens:63.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:52.0 (spuriousM:12.0,  23.1%) | ep_rewards:-0.59 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:861403 | GE:17915 | epochs:0.3  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:7.0 ,  22.6%) | ep_rewards:-0.34 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:861821 | GE:17925 | epochs:0.3  | ep_lens:61.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.63 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:862145 | GE:17934 | epochs:0.3  | ep_lens:50.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:41.0 (spuriousM:9.0 ,  22.0%) | ep_rewards:-0.48 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:862473 | GE:17936 | epochs:0.3  | ep_lens:62.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:52.0 (spuriousM:12.0,  23.1%) | ep_rewards:-0.56 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:862754 | GE:17942 | epochs:0.3  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:7.0 ,  16.3%) | ep_rewards:-0.43 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:863002 | GE:17947 | epochs:0.3  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.33 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:863490 | GE:17958 | epochs:0.3  | ep_lens:62.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:51.0 (spuriousM:6.0 ,  11.8%) | ep_rewards:-0.59 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:863658 | GE:17960 | epochs:0.3  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.24 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:863845 | GE:17966 | epochs:0.3  | ep_lens:24.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:864161 | GE:17971 | epochs:0.3  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:6.0 ,  14.6%) | ep_rewards:-0.36 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:864557 | GE:17981 | epochs:0.3  | ep_lens:57.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:51.0 (spuriousM:11.0,  21.6%) | ep_rewards:-0.44 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:865566 | GE:18001 | epochs:0.3  | ep_lens:84.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:69.0 (spuriousM:6.0 ,   8.7%) | ep_rewards:-0.80 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:866350 | GE:18018 | epochs:0.3  | ep_lens:63.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:61.0 (spuriousM:5.0 ,   8.2%) | ep_rewards:-0.37 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:866538 | GE:18021 | epochs:0.3  | ep_lens:32.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:26.0 (spuriousM:4.0 ,  15.4%) | ep_rewards:-0.31 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:866785 | GE:18028 | epochs:0.3  | ep_lens:46.0 | edits:5.0  (spuriousE:4.0 ,  80.0%) | moves:41.0 (spuriousM:6.0 ,  14.6%) | ep_rewards:-0.32 | mean_Q:-0.10  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:866921 | GE:18030 | epochs:0.3  | ep_lens:24.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.12 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:867659 | GE:18046 | epochs:0.3  | ep_lens:74.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:62.0 (spuriousM:11.0,  17.7%) | ep_rewards:-0.67 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:867823 | GE:18050 | epochs:0.3  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.22  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:868441 | GE:18066 | epochs:0.3  | ep_lens:58.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:55.0 (spuriousM:7.0 ,  12.7%) | ep_rewards:-0.37 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:868859 | GE:18077 | epochs:0.3  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:9.0 ,  22.5%) | ep_rewards:-0.35 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:869528 | GE:18093 | epochs:0.3  | ep_lens:59.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:54.0 (spuriousM:6.0 ,  11.1%) | ep_rewards:-0.42 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:869802 | GE:18100 | epochs:0.3  | ep_lens:33.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.22 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:870003 | GE:18105 | epochs:0.3  | ep_lens:37.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:30.0 (spuriousM:6.0 ,  20.0%) | ep_rewards:-0.36 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:870107 | GE:18107 | epochs:0.3  | ep_lens:24.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:22.0 (spuriousM:5.0 ,  22.7%) | ep_rewards:-0.17 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:870264 | GE:18110 | epochs:0.3  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:5.0 ,  18.5%) | ep_rewards:-0.26 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:870591 | GE:18118 | epochs:0.3  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:7.0 ,  21.2%) | ep_rewards:-0.32 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:870886 | GE:18124 | epochs:0.3  | ep_lens:41.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.23 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:871310 | GE:18133 | epochs:0.3  | ep_lens:55.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:48.0 (spuriousM:9.0 ,  18.8%) | ep_rewards:-0.45 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:871796 | GE:18143 | epochs:0.3  | ep_lens:52.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.46 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:872024 | GE:18149 | epochs:0.3  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:5.0 ,  17.2%) | ep_rewards:-0.27 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:872241 | GE:18157 | epochs:0.3  | ep_lens:39.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:35.0 (spuriousM:10.0,  28.6%) | ep_rewards:-0.30 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:872620 | GE:18165 | epochs:0.3  | ep_lens:52.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:47.0 (spuriousM:13.0,  27.7%) | ep_rewards:-0.39 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:872865 | GE:18172 | epochs:0.3  | ep_lens:39.0 | edits:5.0  (spuriousE:4.0 ,  80.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:0.68  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:873306 | GE:18179 | epochs:0.3  | ep_lens:64.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:53.0 (spuriousM:14.0,  26.4%) | ep_rewards:-0.60 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:873582 | GE:18186 | epochs:0.3  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:10.0,  25.0%) | ep_rewards:-0.38 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:873835 | GE:18191 | epochs:0.3  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.24 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:874336 | GE:18205 | epochs:0.3  | ep_lens:50.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:41.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.48 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:874933 | GE:18217 | epochs:0.3  | ep_lens:73.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:57.0 (spuriousM:9.0 ,  15.8%) | ep_rewards:-0.77 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:875389 | GE:18226 | epochs:0.3  | ep_lens:51.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:43.0 (spuriousM:5.0 ,  11.6%) | ep_rewards:-0.46 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:875709 | GE:18234 | epochs:0.3  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:12.0,  30.0%) | ep_rewards:-0.38 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:875916 | GE:18240 | epochs:0.3  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:4.0 ,  13.8%) | ep_rewards:-0.24 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:876154 | GE:18246 | epochs:0.3  | ep_lens:42.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.46 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:876350 | GE:18250 | epochs:0.3  | ep_lens:27.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.16 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:876571 | GE:18252 | epochs:0.3  | ep_lens:42.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:34.0 (spuriousM:6.0 ,  17.6%) | ep_rewards:-0.41 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:876833 | GE:18260 | epochs:0.3  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:4.0 ,  11.8%) | ep_rewards:-0.32 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:876963 | GE:18261 | epochs:0.3  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:877419 | GE:18272 | epochs:0.3  | ep_lens:53.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.39 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:877632 | GE:18276 | epochs:0.3  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:877853 | GE:18282 | epochs:0.3  | ep_lens:48.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:40.0 (spuriousM:6.0 ,  15.0%) | ep_rewards:-0.44 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:878173 | GE:18288 | epochs:0.3  | ep_lens:43.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.47 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:878645 | GE:18297 | epochs:0.3  | ep_lens:68.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:57.0 (spuriousM:3.0 ,   5.3%) | ep_rewards:-0.62 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:878799 | GE:18302 | epochs:0.3  | ep_lens:29.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.25 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:879053 | GE:18306 | epochs:0.3  | ep_lens:41.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.41 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:879623 | GE:18317 | epochs:0.3  | ep_lens:62.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:55.0 (spuriousM:10.0,  18.2%) | ep_rewards:-0.49 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:880047 | GE:18327 | epochs:0.3  | ep_lens:43.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:40.0 (spuriousM:5.0 ,  12.5%) | ep_rewards:-0.29 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:880820 | GE:18341 | epochs:0.3  | ep_lens:95.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:77.0 (spuriousM:29.0,  37.7%) | ep_rewards:-0.93 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:881115 | GE:18348 | epochs:0.3  | ep_lens:46.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:35.0 (spuriousM:9.0 ,  25.7%) | ep_rewards:-0.51 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:881371 | GE:18353 | epochs:0.3  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:7.0 ,  17.5%) | ep_rewards:-0.35 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:881788 | GE:18362 | epochs:0.3  | ep_lens:44.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:42.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.27 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:882102 | GE:18370 | epochs:0.3  | ep_lens:49.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:43.0 (spuriousM:4.0 ,   9.3%) | ep_rewards:-0.40 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:882650 | GE:18379 | epochs:0.3  | ep_lens:67.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:58.0 (spuriousM:6.0 ,  10.3%) | ep_rewards:-0.56 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:883125 | GE:18388 | epochs:0.3  | ep_lens:54.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:43.0 (spuriousM:4.0 ,   9.3%) | ep_rewards:-0.55 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:883347 | GE:18395 | epochs:0.3  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.36 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:883647 | GE:18399 | epochs:0.3  | ep_lens:44.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.42 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:884213 | GE:18410 | epochs:0.3  | ep_lens:87.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:73.0 (spuriousM:13.0,  17.8%) | ep_rewards:-0.79 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:884676 | GE:18421 | epochs:0.3  | ep_lens:61.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:54.0 (spuriousM:8.0 ,  14.8%) | ep_rewards:-0.48 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:884733 | GE:18423 | epochs:0.3  | ep_lens:5.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:4.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.95  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:885109 | GE:18430 | epochs:0.3  | ep_lens:51.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:43.0 (spuriousM:4.0 ,   9.3%) | ep_rewards:-0.46 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:885483 | GE:18438 | epochs:0.3  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.36 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:886030 | GE:18447 | epochs:0.3  | ep_lens:63.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:54.0 (spuriousM:6.0 ,  11.1%) | ep_rewards:-0.54 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:886327 | GE:18455 | epochs:0.3  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:9.0 ,  25.0%) | ep_rewards:-0.33 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:886393 | GE:18457 | epochs:0.3  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:886579 | GE:18459 | epochs:0.3  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:9.0 ,  24.3%) | ep_rewards:-0.34 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:886674 | GE:18464 | epochs:0.3  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:887567 | GE:18482 | epochs:0.3  | ep_lens:74.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:63.0 (spuriousM:8.0 ,  12.7%) | ep_rewards:-0.65 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:888106 | GE:18493 | epochs:0.3  | ep_lens:56.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:46.0 (spuriousM:3.0 ,   6.5%) | ep_rewards:-0.53 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:888569 | GE:18502 | epochs:0.3  | ep_lens:53.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:46.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.44 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:888647 | GE:18504 | epochs:0.3  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.10  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:888794 | GE:18509 | epochs:0.3  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.10  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:889029 | GE:18515 | epochs:0.3  | ep_lens:40.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:33.0 (spuriousM:6.0 ,  18.2%) | ep_rewards:-0.38 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:889998 | GE:18532 | epochs:0.3  | ep_lens:86.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:68.0 (spuriousM:1.0 ,   1.5%) | ep_rewards:-0.88 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:890526 | GE:18546 | epochs:0.3  | ep_lens:55.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:46.0 (spuriousM:8.0 ,  17.4%) | ep_rewards:-0.50 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:890708 | GE:18549 | epochs:0.3  | ep_lens:26.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:25.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:891334 | GE:18560 | epochs:0.3  | ep_lens:66.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:59.0 (spuriousM:11.0,  18.6%) | ep_rewards:-0.51 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:891541 | GE:18562 | epochs:0.3  | ep_lens:42.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.41 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:891806 | GE:18569 | epochs:0.3  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:6.0 ,  18.2%) | ep_rewards:-0.32 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:891895 | GE:18571 | epochs:0.3  | ep_lens:9.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:8.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.23  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:892457 | GE:18583 | epochs:0.3  | ep_lens:60.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:53.0 (spuriousM:11.0,  20.8%) | ep_rewards:-0.48 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:892580 | GE:18585 | epochs:0.3  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.21  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:893065 | GE:18597 | epochs:0.3  | ep_lens:49.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:45.0 (spuriousM:8.0 ,  17.8%) | ep_rewards:-0.35 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:893283 | GE:18601 | epochs:0.3  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:6.0 ,  15.8%) | ep_rewards:-0.28 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:893361 | GE:18603 | epochs:0.3  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:893596 | GE:18609 | epochs:0.3  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:893851 | GE:18615 | epochs:0.3  | ep_lens:33.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.32 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:894338 | GE:18627 | epochs:0.3  | ep_lens:54.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:48.0 (spuriousM:5.0 ,  10.4%) | ep_rewards:-0.42 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:895320 | GE:18647 | epochs:0.3  | ep_lens:80.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:68.0 (spuriousM:1.0 ,   1.5%) | ep_rewards:-0.70 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:895564 | GE:18652 | epochs:0.3  | ep_lens:40.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.35 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:895820 | GE:18656 | epochs:0.3  | ep_lens:51.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.41 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:896090 | GE:18659 | epochs:0.3  | ep_lens:49.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.40 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:896687 | GE:18672 | epochs:0.3  | ep_lens:67.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:64.0 (spuriousM:2.0 ,   3.1%) | ep_rewards:-0.41 | mean_Q:-0.31  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:896955 | GE:18676 | epochs:0.3  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.38 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:897479 | GE:18686 | epochs:0.3  | ep_lens:55.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:46.0 (spuriousM:5.0 ,  10.9%) | ep_rewards:-0.50 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:897810 | GE:18694 | epochs:0.3  | ep_lens:53.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:43.0 (spuriousM:5.0 ,  11.6%) | ep_rewards:-0.52 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:898088 | GE:18698 | epochs:0.3  | ep_lens:43.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:40.0 (spuriousM:6.0 ,  15.0%) | ep_rewards:-0.29 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:899234 | GE:18723 | epochs:0.3  | ep_lens:100.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:91.0 (spuriousM:8.0 ,   8.8%) | ep_rewards:-0.73 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:899741 | GE:18732 | epochs:0.3  | ep_lens:55.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:50.0 (spuriousM:10.0,  20.0%) | ep_rewards:-0.40 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:900098 | GE:18739 | epochs:0.3  | ep_lens:39.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.35 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:900224 | GE:18742 | epochs:0.3  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:900497 | GE:18748 | epochs:0.3  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.37 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:901013 | GE:18762 | epochs:0.3  | ep_lens:65.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:56.0 (spuriousM:6.0 ,  10.7%) | ep_rewards:-0.55 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:901213 | GE:18765 | epochs:0.3  | ep_lens:30.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:28.0 (spuriousM:10.0,  35.7%) | ep_rewards:-0.20 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
Saved Model: 901214
TRAIN || T:901580 | GE:18772 | epochs:0.3  | ep_lens:40.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.35 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:901746 | GE:18775 | epochs:0.3  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:7.0 ,  20.6%) | ep_rewards:-0.32 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:902070 | GE:18781 | epochs:0.3  | ep_lens:51.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:42.0 (spuriousM:4.0 ,   9.5%) | ep_rewards:-0.48 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:902301 | GE:18787 | epochs:0.3  | ep_lens:38.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.24 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:902644 | GE:18793 | epochs:0.3  | ep_lens:47.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:41.0 (spuriousM:7.0 ,  17.1%) | ep_rewards:-0.39 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:902850 | GE:18797 | epochs:0.3  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.25 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:903023 | GE:18800 | epochs:0.3  | ep_lens:32.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:28.0 (spuriousM:5.0 ,  17.9%) | ep_rewards:-0.26 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:903235 | GE:18807 | epochs:0.3  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:5.0 ,  16.7%) | ep_rewards:-0.27 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:904034 | GE:18824 | epochs:0.3  | ep_lens:81.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:67.0 (spuriousM:11.0,  16.4%) | ep_rewards:-0.76 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:904413 | GE:18833 | epochs:0.3  | ep_lens:53.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:50.0 (spuriousM:14.0,  28.0%) | ep_rewards:-0.34 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:904709 | GE:18839 | epochs:0.3  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:7.0 ,  16.7%) | ep_rewards:-0.33 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:904815 | GE:18843 | epochs:0.3  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.06  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:905701 | GE:18862 | epochs:0.3  | ep_lens:77.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:73.0 (spuriousM:3.0 ,   4.1%) | ep_rewards:-0.49 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:906178 | GE:18871 | epochs:0.3  | ep_lens:56.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:51.0 (spuriousM:7.0 ,  13.7%) | ep_rewards:-0.41 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:906515 | GE:18878 | epochs:0.3  | ep_lens:49.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.45 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:907053 | GE:18889 | epochs:0.3  | ep_lens:60.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:52.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.50 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:907607 | GE:18901 | epochs:0.3  | ep_lens:55.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:49.0 (spuriousM:14.0,  28.6%) | ep_rewards:-0.43 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:908491 | GE:18921 | epochs:0.3  | ep_lens:78.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:69.0 (spuriousM:4.0 ,   5.8%) | ep_rewards:-0.62 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:909068 | GE:18932 | epochs:0.3  | ep_lens:85.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:72.0 (spuriousM:14.0,  19.4%) | ep_rewards:-0.75 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:909869 | GE:18944 | epochs:0.3  | ep_lens:100.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:88.0 (spuriousM:10.0,  11.4%) | ep_rewards:-0.80 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:910330 | GE:18954 | epochs:0.3  | ep_lens:52.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.49 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:911125 | GE:18972 | epochs:0.3  | ep_lens:79.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:66.0 (spuriousM:11.0,  16.7%) | ep_rewards:-0.72 | mean_Q:-0.31  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:911237 | GE:18976 | epochs:0.3  | ep_lens:23.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.22 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:911508 | GE:18984 | epochs:0.3  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.28 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:911560 | GE:18985 | epochs:0.3  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:911948 | GE:18994 | epochs:0.3  | ep_lens:47.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.44 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:912151 | GE:18999 | epochs:0.3  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.22 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:912723 | GE:19009 | epochs:0.3  | ep_lens:60.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:51.0 (spuriousM:6.0 ,  11.8%) | ep_rewards:-0.53 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:913652 | GE:19027 | epochs:0.3  | ep_lens:77.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:68.0 (spuriousM:4.0 ,   5.9%) | ep_rewards:-0.61 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:914203 | GE:19042 | epochs:0.3  | ep_lens:54.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:46.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.47 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:914720 | GE:19052 | epochs:0.3  | ep_lens:51.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:48.0 (spuriousM:2.0 ,   4.2%) | ep_rewards:-0.33 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:915214 | GE:19060 | epochs:0.3  | ep_lens:60.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.45 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:915592 | GE:19068 | epochs:0.3  | ep_lens:51.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.43 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:916418 | GE:19084 | epochs:0.3  | ep_lens:70.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:65.0 (spuriousM:3.0 ,   4.6%) | ep_rewards:-0.48 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:917013 | GE:19095 | epochs:0.3  | ep_lens:75.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:62.0 (spuriousM:11.0,  17.7%) | ep_rewards:-0.70 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:917345 | GE:19102 | epochs:0.3  | ep_lens:47.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.49 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:917621 | GE:19106 | epochs:0.3  | ep_lens:49.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.45 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:917832 | GE:19110 | epochs:0.3  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:6.0 ,  19.4%) | ep_rewards:-0.28 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:918940 | GE:19132 | epochs:0.3  | ep_lens:86.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:74.0 (spuriousM:9.0 ,  12.2%) | ep_rewards:-0.73 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:919045 | GE:19136 | epochs:0.3  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.27  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:919505 | GE:19146 | epochs:0.3  | ep_lens:52.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:47.0 (spuriousM:4.0 ,   8.5%) | ep_rewards:-0.39 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:919905 | GE:19155 | epochs:0.3  | ep_lens:48.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:44.0 (spuriousM:7.0 ,  15.9%) | ep_rewards:-0.34 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:920909 | GE:19179 | epochs:0.3  | ep_lens:96.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:84.0 (spuriousM:11.0,  13.1%) | ep_rewards:-0.78 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:921066 | GE:19182 | epochs:0.3  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:921272 | GE:19185 | epochs:0.3  | ep_lens:36.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:30.0 (spuriousM:6.0 ,  20.0%) | ep_rewards:-0.33 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:921539 | GE:19194 | epochs:0.3  | ep_lens:40.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.28 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:921760 | GE:19197 | epochs:0.3  | ep_lens:37.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.31 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:922728 | GE:19218 | epochs:0.3  | ep_lens:84.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:76.0 (spuriousM:2.0 ,   2.6%) | ep_rewards:-0.62 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:923167 | GE:19226 | epochs:0.3  | ep_lens:57.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:51.0 (spuriousM:8.0 ,  15.7%) | ep_rewards:-0.44 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:923391 | GE:19229 | epochs:0.3  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.27 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:923626 | GE:19235 | epochs:0.3  | ep_lens:45.0 | edits:9.0  (spuriousE:8.0 ,  88.9%) | moves:36.0 (spuriousM:6.0 ,  16.7%) | ep_rewards:-0.41 | mean_Q:-0.20  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:923963 | GE:19243 | epochs:0.3  | ep_lens:51.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:42.0 (spuriousM:11.0,  26.2%) | ep_rewards:-0.48 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:924275 | GE:19246 | epochs:0.3  | ep_lens:51.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:45.0 (spuriousM:10.0,  22.2%) | ep_rewards:-0.41 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:924518 | GE:19254 | epochs:0.3  | ep_lens:41.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:32.0 (spuriousM:6.0 ,  18.8%) | ep_rewards:-0.43 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:924717 | GE:19258 | epochs:0.3  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:6.0 ,  25.0%) | ep_rewards:-0.24 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:925385 | GE:19273 | epochs:0.3  | ep_lens:58.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:54.0 (spuriousM:2.0 ,   3.7%) | ep_rewards:-0.39 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:925702 | GE:19280 | epochs:0.3  | ep_lens:49.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:36.0 (spuriousM:6.0 ,  16.7%) | ep_rewards:-0.57 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:926636 | GE:19292 | epochs:0.3  | ep_lens:96.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:85.0 (spuriousM:8.0 ,   9.4%) | ep_rewards:-0.76 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:927110 | GE:19303 | epochs:0.3  | ep_lens:68.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:55.0 (spuriousM:8.0 ,  14.5%) | ep_rewards:-0.67 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:927365 | GE:19306 | epochs:0.3  | ep_lens:43.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:35.0 (spuriousM:6.0 ,  17.1%) | ep_rewards:-0.42 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:927814 | GE:19317 | epochs:0.3  | ep_lens:59.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:50.0 (spuriousM:5.0 ,  10.0%) | ep_rewards:-0.52 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:928267 | GE:19323 | epochs:0.3  | ep_lens:58.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.49 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:928554 | GE:19330 | epochs:0.3  | ep_lens:40.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:37.0 (spuriousM:5.0 ,  13.5%) | ep_rewards:-0.28 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:928732 | GE:19333 | epochs:0.3  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.27 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:929367 | GE:19347 | epochs:0.3  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.46 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:929848 | GE:19355 | epochs:0.3  | ep_lens:52.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.41 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:930453 | GE:19365 | epochs:0.3  | ep_lens:60.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:54.0 (spuriousM:5.0 ,   9.3%) | ep_rewards:-0.45 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:930685 | GE:19373 | epochs:0.3  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:6.0 ,  18.2%) | ep_rewards:-0.23 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:930999 | GE:19378 | epochs:0.3  | ep_lens:48.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:44.0 (spuriousM:11.0,  25.0%) | ep_rewards:-0.34 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:931477 | GE:19388 | epochs:0.3  | ep_lens:66.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:62.0 (spuriousM:16.0,  25.8%) | ep_rewards:-0.43 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:931875 | GE:19398 | epochs:0.3  | ep_lens:51.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:46.0 (spuriousM:3.0 ,   6.5%) | ep_rewards:-0.38 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:932117 | GE:19404 | epochs:0.3  | ep_lens:32.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.29 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:932418 | GE:19412 | epochs:0.3  | ep_lens:47.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:41.0 (spuriousM:9.0 ,  22.0%) | ep_rewards:-0.39 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:932686 | GE:19416 | epochs:0.3  | ep_lens:28.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:27.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:932967 | GE:19423 | epochs:0.3  | ep_lens:38.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:36.0 (spuriousM:5.0 ,  13.9%) | ep_rewards:-0.24 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:933651 | GE:19438 | epochs:0.3  | ep_lens:56.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:50.0 (spuriousM:7.0 ,  14.0%) | ep_rewards:-0.43 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:933991 | GE:19447 | epochs:0.3  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.38 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:934879 | GE:19468 | epochs:0.3  | ep_lens:79.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:70.0 (spuriousM:11.0,  15.7%) | ep_rewards:-0.62 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:935130 | GE:19473 | epochs:0.3  | ep_lens:44.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:42.0 (spuriousM:6.0 ,  14.3%) | ep_rewards:-0.27 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:935343 | GE:19480 | epochs:0.3  | ep_lens:33.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.19 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:935566 | GE:19486 | epochs:0.3  | ep_lens:33.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.22 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:935828 | GE:19492 | epochs:0.3  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.26 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:936190 | GE:19502 | epochs:0.3  | ep_lens:47.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:43.0 (spuriousM:5.0 ,  11.6%) | ep_rewards:-0.34 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:936370 | GE:19506 | epochs:0.3  | ep_lens:26.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:21.0 (spuriousM:3.0 ,  14.3%) | ep_rewards:-0.26 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:936593 | GE:19510 | epochs:0.3  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.31 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:936809 | GE:19517 | epochs:0.3  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:937018 | GE:19522 | epochs:0.3  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.24 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:937560 | GE:19534 | epochs:0.3  | ep_lens:62.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:56.0 (spuriousM:13.0,  23.2%) | ep_rewards:-0.46 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:937651 | GE:19535 | epochs:0.3  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:938013 | GE:19545 | epochs:0.3  | ep_lens:63.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:57.0 (spuriousM:7.0 ,  12.3%) | ep_rewards:-0.47 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:938220 | GE:19550 | epochs:0.3  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.26 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:938514 | GE:19559 | epochs:0.3  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.32 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:938865 | GE:19564 | epochs:0.3  | ep_lens:40.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.28 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:939124 | GE:19574 | epochs:0.3  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.26 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:939567 | GE:19583 | epochs:0.3  | ep_lens:51.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:47.0 (spuriousM:7.0 ,  14.9%) | ep_rewards:-0.36 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:939726 | GE:19588 | epochs:0.3  | ep_lens:29.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.17 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:939957 | GE:19595 | epochs:0.3  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.28 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:940302 | GE:19602 | epochs:0.3  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.37 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:940481 | GE:19607 | epochs:0.3  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:4.0 ,  15.4%) | ep_rewards:-0.22 | mean_Q:0.02   | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:940668 | GE:19611 | epochs:0.3  | ep_lens:39.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.47 | mean_Q:0.04   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:940960 | GE:19618 | epochs:0.3  | ep_lens:43.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:40.0 (spuriousM:4.0 ,  10.0%) | ep_rewards:-0.29 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:941237 | GE:19622 | epochs:0.3  | ep_lens:44.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:40.0 (spuriousM:5.0 ,  12.5%) | ep_rewards:-0.32 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:941475 | GE:19630 | epochs:0.3  | ep_lens:40.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.45 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:941719 | GE:19635 | epochs:0.3  | ep_lens:36.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:30.0 (spuriousM:6.0 ,  20.0%) | ep_rewards:-0.33 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:942193 | GE:19645 | epochs:0.3  | ep_lens:49.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.35 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:942596 | GE:19657 | epochs:0.3  | ep_lens:50.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:45.0 (spuriousM:12.0,  26.7%) | ep_rewards:-0.38 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:942782 | GE:19660 | epochs:0.3  | ep_lens:30.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:28.0 (spuriousM:8.0 ,  28.6%) | ep_rewards:-0.20 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:942993 | GE:19665 | epochs:0.3  | ep_lens:34.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:26.0 (spuriousM:4.0 ,  15.4%) | ep_rewards:-0.37 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:943177 | GE:19675 | epochs:0.3  | ep_lens:28.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:22.0 (spuriousM:4.0 ,  18.2%) | ep_rewards:-0.29 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:943469 | GE:19679 | epochs:0.3  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:8.0 ,  20.5%) | ep_rewards:-0.38 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:943900 | GE:19690 | epochs:0.3  | ep_lens:51.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:45.0 (spuriousM:5.0 ,  11.1%) | ep_rewards:-0.41 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:944201 | GE:19699 | epochs:0.3  | ep_lens:41.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:40.0 (spuriousM:7.0 ,  17.5%) | ep_rewards:-0.23 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:944285 | GE:19700 | epochs:0.3  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.07  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:944644 | GE:19711 | epochs:0.3  | ep_lens:38.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.24 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:944971 | GE:19716 | epochs:0.3  | ep_lens:45.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:38.0 (spuriousM:6.0 ,  15.8%) | ep_rewards:-0.40 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:945175 | GE:19722 | epochs:0.3  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.19 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:945495 | GE:19730 | epochs:0.3  | ep_lens:40.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.43 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:945842 | GE:19740 | epochs:0.3  | ep_lens:36.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:34.0 (spuriousM:5.0 ,  14.7%) | ep_rewards:-0.23 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:946547 | GE:19755 | epochs:0.3  | ep_lens:61.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:60.0 (spuriousM:3.0 ,   5.0%) | ep_rewards:-0.33 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:947036 | GE:19766 | epochs:0.3  | ep_lens:59.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.42 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:947513 | GE:19776 | epochs:0.3  | ep_lens:54.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:49.0 (spuriousM:3.0 ,   6.1%) | ep_rewards:-0.40 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:947955 | GE:19788 | epochs:0.3  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.33 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:948316 | GE:19798 | epochs:0.3  | ep_lens:47.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:43.0 (spuriousM:9.0 ,  20.9%) | ep_rewards:-0.34 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:948597 | GE:19805 | epochs:0.3  | ep_lens:40.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.38 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:948963 | GE:19815 | epochs:0.3  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.32 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:949138 | GE:19818 | epochs:0.3  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.25 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:949222 | GE:19819 | epochs:0.3  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.13  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:949732 | GE:19829 | epochs:0.3  | ep_lens:59.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:52.0 (spuriousM:5.0 ,   9.6%) | ep_rewards:-0.47 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:949946 | GE:19835 | epochs:0.3  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:4.0 ,  13.8%) | ep_rewards:-0.24 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:950235 | GE:19841 | epochs:0.3  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.27 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:950407 | GE:19845 | epochs:0.3  | ep_lens:30.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:25.0 (spuriousM:4.0 ,  16.0%) | ep_rewards:-0.28 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:950527 | GE:19847 | epochs:0.3  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.29  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:951232 | GE:19868 | epochs:0.3  | ep_lens:60.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:55.0 (spuriousM:3.0 ,   5.5%) | ep_rewards:-0.43 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:951462 | GE:19873 | epochs:0.3  | ep_lens:34.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.32 | mean_Q:0.02   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:951670 | GE:19877 | epochs:0.3  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.32 | mean_Q:0.09   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:952060 | GE:19887 | epochs:0.3  | ep_lens:53.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.47 | mean_Q:0.08   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:952635 | GE:19899 | epochs:0.3  | ep_lens:68.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:57.0 (spuriousM:8.0 ,  14.0%) | ep_rewards:-0.62 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:952799 | GE:19901 | epochs:0.3  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.33 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:953276 | GE:19911 | epochs:0.3  | ep_lens:62.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:54.0 (spuriousM:6.0 ,  11.1%) | ep_rewards:-0.51 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:953543 | GE:19915 | epochs:0.3  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.24 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:954101 | GE:19927 | epochs:0.3  | ep_lens:79.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:71.0 (spuriousM:6.0 ,   8.5%) | ep_rewards:-0.60 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:954305 | GE:19929 | epochs:0.3  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:954572 | GE:19934 | epochs:0.3  | ep_lens:29.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.25 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:954819 | GE:19938 | epochs:0.3  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.33 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:955364 | GE:19944 | epochs:0.3  | ep_lens:66.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:53.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.66 | mean_Q:-0.32  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:955697 | GE:19952 | epochs:0.3  | ep_lens:44.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:41.0 (spuriousM:6.0 ,  14.6%) | ep_rewards:-0.30 | mean_Q:-0.35  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:956039 | GE:19962 | epochs:0.3  | ep_lens:47.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.46 | mean_Q:-0.37  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:956400 | GE:19972 | epochs:0.3  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.32 | mean_Q:-0.34  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:956872 | GE:19983 | epochs:0.3  | ep_lens:50.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.45 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:957191 | GE:19990 | epochs:0.3  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:5.0 ,  13.9%) | ep_rewards:-0.36 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:957380 | GE:19996 | epochs:0.3  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.24 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:957661 | GE:20004 | epochs:0.3  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.27 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:958242 | GE:20016 | epochs:0.3  | ep_lens:49.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:47.0 (spuriousM:4.0 ,   8.5%) | ep_rewards:-0.30 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:958539 | GE:20023 | epochs:0.3  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.34 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:959024 | GE:20035 | epochs:0.3  | ep_lens:56.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:50.0 (spuriousM:10.0,  20.0%) | ep_rewards:-0.43 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:959510 | GE:20046 | epochs:0.3  | ep_lens:60.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:55.0 (spuriousM:5.0 ,   9.1%) | ep_rewards:-0.43 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:959736 | GE:20052 | epochs:0.3  | ep_lens:35.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.35 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:960595 | GE:20072 | epochs:0.3  | ep_lens:64.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:59.0 (spuriousM:5.0 ,   8.5%) | ep_rewards:-0.45 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:960635 | GE:20073 | epochs:0.3  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:961038 | GE:20084 | epochs:0.3  | ep_lens:49.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:45.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.35 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:961651 | GE:20098 | epochs:0.3  | ep_lens:48.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:47.0 (spuriousM:6.0 ,  12.8%) | ep_rewards:-0.27 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:962105 | GE:20112 | epochs:0.3  | ep_lens:52.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:44.0 (spuriousM:7.0 ,  15.9%) | ep_rewards:-0.46 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:962506 | GE:20119 | epochs:0.3  | ep_lens:59.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:53.0 (spuriousM:7.0 ,  13.2%) | ep_rewards:-0.45 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:962611 | GE:20124 | epochs:0.3  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.03  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:963133 | GE:20133 | epochs:0.3  | ep_lens:52.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.36 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:963436 | GE:20139 | epochs:0.3  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:4.0 ,   9.5%) | ep_rewards:-0.33 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:963595 | GE:20142 | epochs:0.3  | ep_lens:26.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:24.0 (spuriousM:4.0 ,  16.7%) | ep_rewards:-0.18 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:964012 | GE:20151 | epochs:0.3  | ep_lens:44.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.40 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:964613 | GE:20162 | epochs:0.3  | ep_lens:63.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:56.0 (spuriousM:4.0 ,   7.1%) | ep_rewards:-0.49 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:964901 | GE:20168 | epochs:0.3  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.38 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:965146 | GE:20174 | epochs:0.3  | ep_lens:33.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.32 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:965412 | GE:20180 | epochs:0.3  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.26 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:966339 | GE:20202 | epochs:0.3  | ep_lens:82.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:75.0 (spuriousM:9.0 ,  12.0%) | ep_rewards:-0.59 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:966590 | GE:20209 | epochs:0.3  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.29 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:966770 | GE:20214 | epochs:0.3  | ep_lens:33.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.39 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:966961 | GE:20215 | epochs:0.3  | ep_lens:31.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.28 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:967377 | GE:20226 | epochs:0.3  | ep_lens:68.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:56.0 (spuriousM:1.0 ,   1.8%) | ep_rewards:-0.64 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:967777 | GE:20231 | epochs:0.3  | ep_lens:59.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:51.0 (spuriousM:2.0 ,   3.9%) | ep_rewards:-0.50 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:968046 | GE:20236 | epochs:0.3  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.35 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:969093 | GE:20261 | epochs:0.3  | ep_lens:84.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:69.0 (spuriousM:5.0 ,   7.2%) | ep_rewards:-0.80 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:969433 | GE:20265 | epochs:0.3  | ep_lens:26.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:25.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:969603 | GE:20270 | epochs:0.3  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.25 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:969792 | GE:20275 | epochs:0.3  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.24 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:969979 | GE:20278 | epochs:0.3  | ep_lens:33.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.34 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:970232 | GE:20283 | epochs:0.3  | ep_lens:50.0 | edits:7.0  (spuriousE:6.0 ,  85.7%) | moves:43.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:0.57  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:970832 | GE:20295 | epochs:0.3  | ep_lens:63.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:51.0 (spuriousM:4.0 ,   7.8%) | ep_rewards:-0.62 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:971018 | GE:20300 | epochs:0.3  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.24 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:971215 | GE:20304 | epochs:0.3  | ep_lens:38.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.44 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:971290 | GE:20306 | epochs:0.3  | ep_lens:9.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:8.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:971963 | GE:20322 | epochs:0.3  | ep_lens:67.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:63.0 (spuriousM:2.0 ,   3.2%) | ep_rewards:-0.44 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:972350 | GE:20333 | epochs:0.3  | ep_lens:42.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:40.0 (spuriousM:6.0 ,  15.0%) | ep_rewards:-0.26 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:972565 | GE:20337 | epochs:0.3  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.23 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:972839 | GE:20341 | epochs:0.3  | ep_lens:47.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.46 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:973226 | GE:20348 | epochs:0.3  | ep_lens:61.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:49.0 (spuriousM:7.0 ,  14.3%) | ep_rewards:-0.61 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:973587 | GE:20357 | epochs:0.3  | ep_lens:47.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.46 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:973875 | GE:20363 | epochs:0.3  | ep_lens:51.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.71 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:974037 | GE:20367 | epochs:0.3  | ep_lens:24.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.27  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:974129 | GE:20369 | epochs:0.3  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.26  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:974614 | GE:20381 | epochs:0.3  | ep_lens:53.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:48.0 (spuriousM:6.0 ,  12.5%) | ep_rewards:-0.39 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:975319 | GE:20395 | epochs:0.3  | ep_lens:68.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:60.0 (spuriousM:1.0 ,   1.7%) | ep_rewards:-0.54 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:975635 | GE:20401 | epochs:0.3  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.32 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:975880 | GE:20407 | epochs:0.3  | ep_lens:44.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:36.0 (spuriousM:5.0 ,  13.9%) | ep_rewards:-0.42 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:976075 | GE:20411 | epochs:0.3  | ep_lens:28.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.27 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:976341 | GE:20416 | epochs:0.3  | ep_lens:41.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.51 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:976486 | GE:20419 | epochs:0.3  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:976551 | GE:20420 | epochs:0.3  | ep_lens:9.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:8.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:977080 | GE:20431 | epochs:0.3  | ep_lens:63.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.77 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:977413 | GE:20439 | epochs:0.3  | ep_lens:28.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:27.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:977979 | GE:20452 | epochs:0.3  | ep_lens:52.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.46 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:978244 | GE:20458 | epochs:0.3  | ep_lens:45.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:35.0 (spuriousM:6.0 ,  17.1%) | ep_rewards:-0.48 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:978541 | GE:20466 | epochs:0.3  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.21  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:978614 | GE:20467 | epochs:0.3  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:979100 | GE:20478 | epochs:0.3  | ep_lens:50.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.45 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:979423 | GE:20487 | epochs:0.3  | ep_lens:54.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.52 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:979957 | GE:20498 | epochs:0.3  | ep_lens:67.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:56.0 (spuriousM:4.0 ,   7.1%) | ep_rewards:-0.61 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:980240 | GE:20503 | epochs:0.3  | ep_lens:50.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:42.0 (spuriousM:9.0 ,  21.4%) | ep_rewards:-0.45 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:980332 | GE:20506 | epochs:0.3  | ep_lens:17.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.24  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:980515 | GE:20508 | epochs:0.3  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.27 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:980850 | GE:20516 | epochs:0.3  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:7.0 ,  16.7%) | ep_rewards:-0.36 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:980962 | GE:20520 | epochs:0.3  | ep_lens:24.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.15 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:981233 | GE:20522 | epochs:0.3  | ep_lens:46.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.41 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:981668 | GE:20533 | epochs:0.3  | ep_lens:54.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:45.0 (spuriousM:8.0 ,  17.8%) | ep_rewards:-0.50 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:981843 | GE:20539 | epochs:0.3  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.21 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:982036 | GE:20541 | epochs:0.3  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.24 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:982521 | GE:20553 | epochs:0.3  | ep_lens:65.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:56.0 (spuriousM:3.0 ,   5.4%) | ep_rewards:-0.55 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:982920 | GE:20564 | epochs:0.3  | ep_lens:42.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.24 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:983410 | GE:20572 | epochs:0.3  | ep_lens:50.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:47.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.33 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:983714 | GE:20582 | epochs:0.3  | ep_lens:44.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:33.0 (spuriousM:6.0 ,  18.2%) | ep_rewards:-0.50 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:984101 | GE:20592 | epochs:0.3  | ep_lens:50.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.45 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:984256 | GE:20595 | epochs:0.3  | ep_lens:26.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:22.0 (spuriousM:4.0 ,  18.2%) | ep_rewards:-0.23 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:984659 | GE:20605 | epochs:0.3  | ep_lens:57.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:51.0 (spuriousM:3.0 ,   5.9%) | ep_rewards:-0.44 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:985096 | GE:20614 | epochs:0.3  | ep_lens:53.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:42.0 (spuriousM:6.0 ,  14.3%) | ep_rewards:-0.54 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:985571 | GE:20623 | epochs:0.3  | ep_lens:56.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:47.0 (spuriousM:3.0 ,   6.4%) | ep_rewards:-0.51 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:986320 | GE:20644 | epochs:0.3  | ep_lens:74.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:64.0 (spuriousM:4.0 ,   6.2%) | ep_rewards:-0.62 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:986529 | GE:20647 | epochs:0.3  | ep_lens:34.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.22 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:986744 | GE:20650 | epochs:0.3  | ep_lens:30.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.15 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:987562 | GE:20665 | epochs:0.3  | ep_lens:76.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:65.0 (spuriousM:7.0 ,  10.8%) | ep_rewards:-0.66 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:987669 | GE:20669 | epochs:0.3  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:987924 | GE:20676 | epochs:0.3  | ep_lens:30.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.20 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:988330 | GE:20685 | epochs:0.3  | ep_lens:61.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:54.0 (spuriousM:8.0 ,  14.8%) | ep_rewards:-0.48 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:988542 | GE:20689 | epochs:0.3  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.32 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:989110 | GE:20704 | epochs:0.3  | ep_lens:54.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:50.0 (spuriousM:3.0 ,   6.0%) | ep_rewards:-0.37 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:989681 | GE:20717 | epochs:0.3  | ep_lens:66.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:56.0 (spuriousM:1.0 ,   1.8%) | ep_rewards:-0.58 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:990184 | GE:20727 | epochs:0.3  | ep_lens:51.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:41.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.51 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:990343 | GE:20731 | epochs:0.3  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:990999 | GE:20745 | epochs:0.3  | ep_lens:71.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:56.0 (spuriousM:2.0 ,   3.6%) | ep_rewards:-0.73 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:991174 | GE:20748 | epochs:0.3  | ep_lens:19.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.22  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:991468 | GE:20757 | epochs:0.3  | ep_lens:37.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:36.0 (spuriousM:7.0 ,  19.4%) | ep_rewards:-0.21 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:991671 | GE:20762 | epochs:0.3  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.23 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:991842 | GE:20767 | epochs:0.3  | ep_lens:30.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.15 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:992336 | GE:20775 | epochs:0.3  | ep_lens:53.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.39 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:992547 | GE:20780 | epochs:0.3  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.24 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:992910 | GE:20790 | epochs:0.3  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.39 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:993121 | GE:20794 | epochs:0.3  | ep_lens:28.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:23.0 (spuriousM:6.0 ,  26.1%) | ep_rewards:-0.27 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:993522 | GE:20804 | epochs:0.3  | ep_lens:33.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:32.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.81  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:994889 | GE:20832 | epochs:0.3  | ep_lens:100.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:84.0 (spuriousM:8.0 ,   9.5%) | ep_rewards:-0.90 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:995140 | GE:20840 | epochs:0.3  | ep_lens:41.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.41 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:995620 | GE:20852 | epochs:0.3  | ep_lens:58.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:50.0 (spuriousM:4.0 ,   8.0%) | ep_rewards:-0.49 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:995720 | GE:20854 | epochs:0.3  | ep_lens:19.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:17.0 (spuriousM:2.0 ,  11.8%) | ep_rewards:-0.15 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:995901 | GE:20858 | epochs:0.3  | ep_lens:29.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.25 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:996164 | GE:20863 | epochs:0.3  | ep_lens:36.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:34.0 (spuriousM:4.0 ,  11.8%) | ep_rewards:-0.23 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:996569 | GE:20872 | epochs:0.3  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.36 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:997293 | GE:20887 | epochs:0.3  | ep_lens:82.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:73.0 (spuriousM:7.0 ,   9.6%) | ep_rewards:-0.64 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:997449 | GE:20892 | epochs:0.3  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.27 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:997964 | GE:20903 | epochs:0.3  | ep_lens:56.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:48.0 (spuriousM:2.0 ,   4.2%) | ep_rewards:-0.48 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:998956 | GE:20925 | epochs:0.3  | ep_lens:74.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:66.0 (spuriousM:4.0 ,   6.1%) | ep_rewards:-0.57 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:999318 | GE:20932 | epochs:0.3  | ep_lens:58.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:50.0 (spuriousM:4.0 ,   8.0%) | ep_rewards:-0.49 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:999859 | GE:20943 | epochs:0.3  | ep_lens:56.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:50.0 (spuriousM:6.0 ,  12.0%) | ep_rewards:-0.43 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1000089 | GE:20949 | epochs:0.3  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:5.0 ,  13.9%) | ep_rewards:-0.30 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1000572 | GE:20958 | epochs:0.3  | ep_lens:58.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:51.0 (spuriousM:3.0 ,   5.9%) | ep_rewards:-0.47 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1000787 | GE:20965 | epochs:0.3  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.30 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1001000 | GE:20971 | epochs:0.3  | ep_lens:27.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.26 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1001277 | GE:20977 | epochs:0.3  | ep_lens:39.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:37.0 (spuriousM:7.0 ,  18.9%) | ep_rewards:-0.25 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1001368 | GE:20980 | epochs:0.3  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.21  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1001530 | GE:20984 | epochs:0.3  | ep_lens:28.0 | edits:7.0  (spuriousE:6.0 ,  85.7%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:0.68  | mean_Q:-0.10  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1001749 | GE:20988 | epochs:0.3  | ep_lens:50.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:41.0 (spuriousM:6.0 ,  14.6%) | ep_rewards:-0.48 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1002267 | GE:20998 | epochs:0.3  | ep_lens:54.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:53.0 (spuriousM:5.0 ,   9.4%) | ep_rewards:-0.30 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1002919 | GE:21014 | epochs:0.3  | ep_lens:70.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:59.0 (spuriousM:5.0 ,   8.5%) | ep_rewards:-0.63 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1003184 | GE:21020 | epochs:0.3  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.36 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1003541 | GE:21027 | epochs:0.3  | ep_lens:46.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.31 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1004187 | GE:21042 | epochs:0.3  | ep_lens:67.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:54.0 (spuriousM:9.0 ,  16.7%) | ep_rewards:-0.66 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1004395 | GE:21045 | epochs:0.3  | ep_lens:30.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.20 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1004645 | GE:21052 | epochs:0.3  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.29 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1004926 | GE:21057 | epochs:0.3  | ep_lens:40.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:32.0 (spuriousM:6.0 ,  18.8%) | ep_rewards:-0.40 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1005101 | GE:21062 | epochs:0.3  | ep_lens:33.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.42 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1005470 | GE:21072 | epochs:0.3  | ep_lens:53.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:45.0 (spuriousM:9.0 ,  20.0%) | ep_rewards:-0.47 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1006023 | GE:21083 | epochs:0.3  | ep_lens:50.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:47.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.33 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1006144 | GE:21089 | epochs:0.3  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1006795 | GE:21101 | epochs:0.3  | ep_lens:71.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:61.0 (spuriousM:7.0 ,  11.5%) | ep_rewards:-0.61 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1007462 | GE:21113 | epochs:0.3  | ep_lens:72.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:65.0 (spuriousM:1.0 ,   1.5%) | ep_rewards:-0.54 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1007704 | GE:21119 | epochs:0.3  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.30 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1008118 | GE:21129 | epochs:0.3  | ep_lens:56.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:49.0 (spuriousM:2.0 ,   4.1%) | ep_rewards:-0.46 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1008282 | GE:21131 | epochs:0.3  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.21 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1009070 | GE:21147 | epochs:0.3  | ep_lens:95.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:85.0 (spuriousM:16.0,  18.8%) | ep_rewards:-0.73 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1009649 | GE:21159 | epochs:0.3  | ep_lens:63.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:52.0 (spuriousM:4.0 ,   7.7%) | ep_rewards:-0.59 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1009881 | GE:21164 | epochs:0.3  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.30 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1010061 | GE:21170 | epochs:0.3  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.25 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1010257 | GE:21173 | epochs:0.3  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:7.0 ,  19.4%) | ep_rewards:-0.30 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1010483 | GE:21178 | epochs:0.3  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.19 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1010967 | GE:21188 | epochs:0.4  | ep_lens:45.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.25 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1011183 | GE:21194 | epochs:0.4  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.21 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1011463 | GE:21199 | epochs:0.4  | ep_lens:57.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:43.0 (spuriousM:7.0 ,  16.3%) | ep_rewards:-0.64 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1011778 | GE:21206 | epochs:0.4  | ep_lens:52.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.66 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1012245 | GE:21215 | epochs:0.4  | ep_lens:57.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:51.0 (spuriousM:2.0 ,   3.9%) | ep_rewards:-0.44 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1012519 | GE:21220 | epochs:0.4  | ep_lens:37.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.39 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1012834 | GE:21226 | epochs:0.4  | ep_lens:54.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.65 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1013064 | GE:21231 | epochs:0.4  | ep_lens:48.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:40.0 (spuriousM:4.0 ,  10.0%) | ep_rewards:-0.44 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1013500 | GE:21241 | epochs:0.4  | ep_lens:49.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:45.0 (spuriousM:10.0,  22.2%) | ep_rewards:-0.35 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1013824 | GE:21251 | epochs:0.4  | ep_lens:30.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:29.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.82  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1014083 | GE:21255 | epochs:0.4  | ep_lens:42.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.39 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1014311 | GE:21260 | epochs:0.4  | ep_lens:39.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.42 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1014496 | GE:21264 | epochs:0.4  | ep_lens:27.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.31 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1014707 | GE:21268 | epochs:0.4  | ep_lens:37.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.36 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1015047 | GE:21276 | epochs:0.4  | ep_lens:49.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.47 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1015437 | GE:21285 | epochs:0.4  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.37 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1015817 | GE:21291 | epochs:0.4  | ep_lens:57.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.61 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1015988 | GE:21295 | epochs:0.4  | ep_lens:32.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:25.0 (spuriousM:6.0 ,  24.0%) | ep_rewards:-0.34 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1016904 | GE:21312 | epochs:0.4  | ep_lens:79.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:74.0 (spuriousM:7.0 ,   9.5%) | ep_rewards:-0.52 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1017071 | GE:21314 | epochs:0.4  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.33 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1017787 | GE:21327 | epochs:0.4  | ep_lens:74.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:61.0 (spuriousM:6.0 ,   9.8%) | ep_rewards:-0.70 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1018370 | GE:21340 | epochs:0.4  | ep_lens:63.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:57.0 (spuriousM:7.0 ,  12.3%) | ep_rewards:-0.47 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1018844 | GE:21349 | epochs:0.4  | ep_lens:72.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:61.0 (spuriousM:8.0 ,  13.1%) | ep_rewards:-0.64 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1019074 | GE:21352 | epochs:0.4  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.25 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1019297 | GE:21356 | epochs:0.4  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:6.0 ,  15.4%) | ep_rewards:-0.35 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1019383 | GE:21358 | epochs:0.4  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1019596 | GE:21362 | epochs:0.4  | ep_lens:38.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.42 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1019940 | GE:21367 | epochs:0.4  | ep_lens:58.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:49.0 (spuriousM:6.0 ,  12.2%) | ep_rewards:-0.52 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1020390 | GE:21375 | epochs:0.4  | ep_lens:59.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:54.0 (spuriousM:8.0 ,  14.8%) | ep_rewards:-0.42 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1020672 | GE:21381 | epochs:0.4  | ep_lens:47.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:39.0 (spuriousM:5.0 ,  12.8%) | ep_rewards:-0.44 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1020968 | GE:21385 | epochs:0.4  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.36 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1021564 | GE:21396 | epochs:0.4  | ep_lens:81.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:72.0 (spuriousM:11.0,  15.3%) | ep_rewards:-0.63 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1022566 | GE:21412 | epochs:0.4  | ep_lens:87.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:83.0 (spuriousM:7.0 ,   8.4%) | ep_rewards:-0.54 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1022730 | GE:21417 | epochs:0.4  | ep_lens:33.0 | edits:7.0  (spuriousE:6.0 ,  85.7%) | moves:26.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.66  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1023031 | GE:21423 | epochs:0.4  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.36 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1023484 | GE:21433 | epochs:0.4  | ep_lens:50.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:46.0 (spuriousM:7.0 ,  15.2%) | ep_rewards:-0.35 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1024011 | GE:21439 | epochs:0.4  | ep_lens:58.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:49.0 (spuriousM:2.0 ,   4.1%) | ep_rewards:-0.52 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1024483 | GE:21448 | epochs:0.4  | ep_lens:65.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:60.0 (spuriousM:6.0 ,  10.0%) | ep_rewards:-0.45 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1024555 | GE:21451 | epochs:0.4  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.30  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1024828 | GE:21455 | epochs:0.4  | ep_lens:43.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.42 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1025137 | GE:21461 | epochs:0.4  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.33 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1025614 | GE:21470 | epochs:0.4  | ep_lens:71.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:60.0 (spuriousM:5.0 ,   8.3%) | ep_rewards:-0.63 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1026150 | GE:21477 | epochs:0.4  | ep_lens:49.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:44.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.37 | mean_Q:-0.31  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1026439 | GE:21484 | epochs:0.4  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.19 | mean_Q:-0.32  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1026788 | GE:21491 | epochs:0.4  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.35 | mean_Q:-0.29  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1027215 | GE:21500 | epochs:0.4  | ep_lens:53.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.47 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1027802 | GE:21513 | epochs:0.4  | ep_lens:64.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:54.0 (spuriousM:13.0,  24.1%) | ep_rewards:-0.57 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1028008 | GE:21517 | epochs:0.4  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.24 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1028131 | GE:21520 | epochs:0.4  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.23  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1028424 | GE:21528 | epochs:0.4  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.29 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1028495 | GE:21531 | epochs:0.4  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.20  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1028807 | GE:21538 | epochs:0.4  | ep_lens:46.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.28 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1029058 | GE:21542 | epochs:0.4  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.33 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1029126 | GE:21545 | epochs:0.4  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1029411 | GE:21550 | epochs:0.4  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:5.0 ,  14.7%) | ep_rewards:-0.29 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1029906 | GE:21560 | epochs:0.4  | ep_lens:49.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:41.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.45 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1030310 | GE:21570 | epochs:0.4  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.40 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1030710 | GE:21581 | epochs:0.4  | ep_lens:44.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.32 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1031106 | GE:21590 | epochs:0.4  | ep_lens:45.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:44.0 (spuriousM:6.0 ,  13.6%) | ep_rewards:-0.25 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1031651 | GE:21603 | epochs:0.4  | ep_lens:59.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:56.0 (spuriousM:6.0 ,  10.7%) | ep_rewards:-0.37 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1031803 | GE:21606 | epochs:0.4  | ep_lens:24.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:21.0 (spuriousM:3.0 ,  14.3%) | ep_rewards:-0.20 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1032021 | GE:21613 | epochs:0.4  | ep_lens:26.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.18 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1032472 | GE:21626 | epochs:0.4  | ep_lens:44.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:42.0 (spuriousM:5.0 ,  11.9%) | ep_rewards:-0.27 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1032725 | GE:21629 | epochs:0.4  | ep_lens:34.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.22 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1033416 | GE:21644 | epochs:0.4  | ep_lens:71.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:56.0 (spuriousM:3.0 ,   5.4%) | ep_rewards:-0.73 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1033709 | GE:21651 | epochs:0.4  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.27 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1034306 | GE:21666 | epochs:0.4  | ep_lens:57.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:47.0 (spuriousM:3.0 ,   6.4%) | ep_rewards:-0.54 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1034548 | GE:21671 | epochs:0.4  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:8.0 ,  21.6%) | ep_rewards:-0.37 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1035142 | GE:21683 | epochs:0.4  | ep_lens:52.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:46.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.41 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1035391 | GE:21689 | epochs:0.4  | ep_lens:37.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.31 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1035819 | GE:21700 | epochs:0.4  | ep_lens:44.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.42 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1036280 | GE:21710 | epochs:0.4  | ep_lens:52.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.56 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1036819 | GE:21723 | epochs:0.4  | ep_lens:66.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:59.0 (spuriousM:11.0,  18.6%) | ep_rewards:-0.51 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1037002 | GE:21727 | epochs:0.4  | ep_lens:36.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.46 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1037194 | GE:21732 | epochs:0.4  | ep_lens:36.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:29.0 (spuriousM:5.0 ,  17.2%) | ep_rewards:-0.36 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1037368 | GE:21736 | epochs:0.4  | ep_lens:34.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.42 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1037987 | GE:21749 | epochs:0.4  | ep_lens:56.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:53.0 (spuriousM:4.0 ,   7.5%) | ep_rewards:-0.36 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1038501 | GE:21758 | epochs:0.4  | ep_lens:56.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:52.0 (spuriousM:5.0 ,   9.6%) | ep_rewards:-0.38 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1038778 | GE:21767 | epochs:0.4  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.23 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1039191 | GE:21776 | epochs:0.4  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.35 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1039367 | GE:21783 | epochs:0.4  | ep_lens:26.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.23 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1039551 | GE:21786 | epochs:0.4  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.28 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1039776 | GE:21790 | epochs:0.4  | ep_lens:39.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.45 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1040108 | GE:21795 | epochs:0.4  | ep_lens:60.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:48.0 (spuriousM:3.0 ,   6.2%) | ep_rewards:-0.60 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1040337 | GE:21799 | epochs:0.4  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.27 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1040386 | GE:21803 | epochs:0.4  | ep_lens:5.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:4.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.95  | mean_Q:-0.21  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1040493 | GE:21804 | epochs:0.4  | ep_lens:19.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.17  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1040885 | GE:21812 | epochs:0.4  | ep_lens:52.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:47.0 (spuriousM:5.0 ,  10.6%) | ep_rewards:-0.39 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1041132 | GE:21816 | epochs:0.4  | ep_lens:41.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:30.0 (spuriousM:5.0 ,  16.7%) | ep_rewards:-0.48 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1041414 | GE:21821 | epochs:0.4  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.29 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1041758 | GE:21831 | epochs:0.4  | ep_lens:57.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:48.0 (spuriousM:3.0 ,   6.2%) | ep_rewards:-0.51 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1042394 | GE:21843 | epochs:0.4  | ep_lens:69.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:59.0 (spuriousM:4.0 ,   6.8%) | ep_rewards:-0.60 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1042688 | GE:21848 | epochs:0.4  | ep_lens:45.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.40 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1042935 | GE:21853 | epochs:0.4  | ep_lens:36.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.33 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1043899 | GE:21876 | epochs:0.4  | ep_lens:83.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:75.0 (spuriousM:2.0 ,   2.7%) | ep_rewards:-0.62 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1044304 | GE:21884 | epochs:0.4  | ep_lens:38.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.34 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1044508 | GE:21890 | epochs:0.4  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:12.0,  31.6%) | ep_rewards:-0.31 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1044767 | GE:21896 | epochs:0.4  | ep_lens:35.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.20 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1044985 | GE:21900 | epochs:0.4  | ep_lens:41.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:33.0 (spuriousM:5.0 ,  15.2%) | ep_rewards:-0.41 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1045356 | GE:21911 | epochs:0.4  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:5.0 ,  13.5%) | ep_rewards:-0.34 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1045560 | GE:21916 | epochs:0.4  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.22 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1045967 | GE:21924 | epochs:0.4  | ep_lens:52.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:46.0 (spuriousM:3.0 ,   6.5%) | ep_rewards:-0.41 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1046092 | GE:21927 | epochs:0.4  | ep_lens:24.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:19.0 (spuriousM:3.0 ,  15.8%) | ep_rewards:-0.25 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1046245 | GE:21932 | epochs:0.4  | ep_lens:29.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:24.0 (spuriousM:4.0 ,  16.7%) | ep_rewards:-0.27 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1046407 | GE:21935 | epochs:0.4  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.16 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1046720 | GE:21943 | epochs:0.4  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.27 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1047569 | GE:21961 | epochs:0.4  | ep_lens:77.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:66.0 (spuriousM:4.0 ,   6.1%) | ep_rewards:-0.66 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1047868 | GE:21969 | epochs:0.4  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.32 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1048464 | GE:21982 | epochs:0.4  | ep_lens:57.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:53.0 (spuriousM:9.0 ,  17.0%) | ep_rewards:-0.39 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1048681 | GE:21989 | epochs:0.4  | ep_lens:30.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.18 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1048909 | GE:21994 | epochs:0.4  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:5.0 ,  17.2%) | ep_rewards:-0.33 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1049277 | GE:21999 | epochs:0.4  | ep_lens:49.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.45 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1049529 | GE:22008 | epochs:0.4  | ep_lens:34.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:33.0 (spuriousM:5.0 ,  15.2%) | ep_rewards:-0.20 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1049833 | GE:22015 | epochs:0.4  | ep_lens:47.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:35.0 (spuriousM:5.0 ,  14.3%) | ep_rewards:-0.54 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1050348 | GE:22027 | epochs:0.4  | ep_lens:47.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:46.0 (spuriousM:10.0,  21.7%) | ep_rewards:-0.26 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1050616 | GE:22032 | epochs:0.4  | ep_lens:48.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:41.0 (spuriousM:5.0 ,  12.2%) | ep_rewards:-0.42 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1050859 | GE:22038 | epochs:0.4  | ep_lens:43.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.47 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1051044 | GE:22042 | epochs:0.4  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:5.0 ,  15.2%) | ep_rewards:-0.26 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1051206 | GE:22048 | epochs:0.4  | ep_lens:36.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.41 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1051448 | GE:22054 | epochs:0.4  | ep_lens:33.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:32.0 (spuriousM:5.0 ,  15.6%) | ep_rewards:-0.19 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1051773 | GE:22063 | epochs:0.4  | ep_lens:44.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.32 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1052047 | GE:22068 | epochs:0.4  | ep_lens:40.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.25 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1052510 | GE:22077 | epochs:0.4  | ep_lens:41.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:40.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.77  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1053041 | GE:22089 | epochs:0.4  | ep_lens:58.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:52.0 (spuriousM:4.0 ,   7.7%) | ep_rewards:-0.44 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1053220 | GE:22095 | epochs:0.4  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.19 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1053499 | GE:22102 | epochs:0.4  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.34 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1053925 | GE:22113 | epochs:0.4  | ep_lens:46.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.28 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1054345 | GE:22124 | epochs:0.4  | ep_lens:44.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:40.0 (spuriousM:7.0 ,  17.5%) | ep_rewards:-0.32 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1054530 | GE:22128 | epochs:0.4  | ep_lens:31.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:29.0 (spuriousM:5.0 ,  17.2%) | ep_rewards:-0.21 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1054735 | GE:22132 | epochs:0.4  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.27 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1054975 | GE:22138 | epochs:0.4  | ep_lens:36.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.36 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1055232 | GE:22142 | epochs:0.4  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.36 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1055469 | GE:22150 | epochs:0.4  | ep_lens:32.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.19 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1055840 | GE:22160 | epochs:0.4  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:5.0 ,  11.4%) | ep_rewards:-0.40 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1056575 | GE:22179 | epochs:0.4  | ep_lens:86.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:76.0 (spuriousM:18.0,  23.7%) | ep_rewards:-0.68 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1057295 | GE:22197 | epochs:0.4  | ep_lens:55.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:53.0 (spuriousM:5.0 ,   9.4%) | ep_rewards:-0.33 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1057505 | GE:22204 | epochs:0.4  | ep_lens:38.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.34 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1057631 | GE:22206 | epochs:0.4  | ep_lens:23.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:19.0 (spuriousM:4.0 ,  21.1%) | ep_rewards:-0.22 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1058233 | GE:22220 | epochs:0.4  | ep_lens:62.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:58.0 (spuriousM:23.0,  39.7%) | ep_rewards:-0.41 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1058572 | GE:22230 | epochs:0.4  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.32 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1059104 | GE:22242 | epochs:0.4  | ep_lens:53.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.47 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1059247 | GE:22246 | epochs:0.4  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.21  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1059838 | GE:22256 | epochs:0.4  | ep_lens:59.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:55.0 (spuriousM:3.0 ,   5.5%) | ep_rewards:-0.40 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1060009 | GE:22262 | epochs:0.4  | ep_lens:33.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.39 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1060197 | GE:22267 | epochs:0.4  | ep_lens:35.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:28.0 (spuriousM:5.0 ,  17.9%) | ep_rewards:-0.35 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1060542 | GE:22274 | epochs:0.4  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.27 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1060979 | GE:22285 | epochs:0.4  | ep_lens:67.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:58.0 (spuriousM:10.0,  17.2%) | ep_rewards:-0.56 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1061294 | GE:22295 | epochs:0.4  | ep_lens:45.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.48 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1061891 | GE:22309 | epochs:0.4  | ep_lens:55.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:50.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.40 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1062083 | GE:22313 | epochs:0.4  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.16 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1062286 | GE:22317 | epochs:0.4  | ep_lens:42.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.39 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1062951 | GE:22332 | epochs:0.4  | ep_lens:68.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:62.0 (spuriousM:6.0 ,   9.7%) | ep_rewards:-0.49 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1063061 | GE:22333 | epochs:0.4  | ep_lens:17.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:15.0 (spuriousM:1.0 ,   6.7%) | ep_rewards:-0.14 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1063537 | GE:22344 | epochs:0.4  | ep_lens:66.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:55.0 (spuriousM:5.0 ,   9.1%) | ep_rewards:-0.61 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1063825 | GE:22349 | epochs:0.4  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.30 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1064029 | GE:22356 | epochs:0.4  | ep_lens:27.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.26 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1064433 | GE:22365 | epochs:0.4  | ep_lens:47.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:40.0 (spuriousM:6.0 ,  15.0%) | ep_rewards:-0.41 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1064695 | GE:22369 | epochs:0.4  | ep_lens:44.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.47 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1064991 | GE:22378 | epochs:0.4  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.33 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1065292 | GE:22386 | epochs:0.4  | ep_lens:46.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:39.0 (spuriousM:5.0 ,  12.8%) | ep_rewards:-0.41 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1065380 | GE:22387 | epochs:0.4  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.21  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1065800 | GE:22398 | epochs:0.4  | ep_lens:44.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:40.0 (spuriousM:4.0 ,  10.0%) | ep_rewards:-0.32 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1066445 | GE:22413 | epochs:0.4  | ep_lens:55.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:48.0 (spuriousM:7.0 ,  14.6%) | ep_rewards:-0.45 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1066629 | GE:22417 | epochs:0.4  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1066809 | GE:22421 | epochs:0.4  | ep_lens:36.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.43 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1067550 | GE:22438 | epochs:0.4  | ep_lens:73.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:63.0 (spuriousM:4.0 ,   6.3%) | ep_rewards:-0.62 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1067720 | GE:22439 | epochs:0.4  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:6.0 ,  20.7%) | ep_rewards:-0.27 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1067977 | GE:22446 | epochs:0.4  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.33 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1068126 | GE:22451 | epochs:0.4  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1068220 | GE:22454 | epochs:0.4  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1068420 | GE:22457 | epochs:0.4  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.25 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1068619 | GE:22464 | epochs:0.4  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.24 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1068735 | GE:22466 | epochs:0.4  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.10  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1069303 | GE:22478 | epochs:0.4  | ep_lens:61.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:52.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.53 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1069837 | GE:22490 | epochs:0.4  | ep_lens:57.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.59 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1070015 | GE:22495 | epochs:0.4  | ep_lens:27.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:21.0 (spuriousM:4.0 ,  19.0%) | ep_rewards:-0.29 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1070186 | GE:22498 | epochs:0.4  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.22 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1070458 | GE:22501 | epochs:0.4  | ep_lens:37.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.31 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1070878 | GE:22512 | epochs:0.4  | ep_lens:52.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:43.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.49 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1071019 | GE:22517 | epochs:0.4  | ep_lens:24.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.25 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1071193 | GE:22523 | epochs:0.4  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:3.0 ,  13.0%) | ep_rewards:-0.18 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1071317 | GE:22527 | epochs:0.4  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1071657 | GE:22534 | epochs:0.4  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:6.0 ,  14.6%) | ep_rewards:-0.33 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1072703 | GE:22557 | epochs:0.4  | ep_lens:85.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:71.0 (spuriousM:2.0 ,   2.8%) | ep_rewards:-0.78 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1072973 | GE:22564 | epochs:0.4  | ep_lens:36.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.36 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1073199 | GE:22569 | epochs:0.4  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.26 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1073434 | GE:22577 | epochs:0.4  | ep_lens:34.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.20 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1073674 | GE:22581 | epochs:0.4  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.28 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1073967 | GE:22588 | epochs:0.4  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.39 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1074248 | GE:22598 | epochs:0.4  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.33 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1074990 | GE:22613 | epochs:0.4  | ep_lens:69.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:60.0 (spuriousM:6.0 ,  10.0%) | ep_rewards:-0.57 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1075180 | GE:22618 | epochs:0.4  | ep_lens:35.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.43 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1075376 | GE:22623 | epochs:0.4  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.26 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1075508 | GE:22628 | epochs:0.4  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.23  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1075674 | GE:22632 | epochs:0.4  | ep_lens:36.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:29.0 (spuriousM:6.0 ,  20.7%) | ep_rewards:-0.36 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1076558 | GE:22654 | epochs:0.4  | ep_lens:100.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:82.0 (spuriousM:7.0 ,   8.5%) | ep_rewards:-0.95 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1076802 | GE:22657 | epochs:0.4  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.25 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1077214 | GE:22667 | epochs:0.4  | ep_lens:51.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.53 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1077613 | GE:22677 | epochs:0.4  | ep_lens:55.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:45.0 (spuriousM:4.0 ,   8.9%) | ep_rewards:-0.53 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1077950 | GE:22687 | epochs:0.4  | ep_lens:61.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:55.0 (spuriousM:8.0 ,  14.5%) | ep_rewards:-0.46 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1078069 | GE:22688 | epochs:0.4  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1078205 | GE:22694 | epochs:0.4  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1078659 | GE:22703 | epochs:0.4  | ep_lens:65.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:58.0 (spuriousM:15.0,  25.9%) | ep_rewards:-0.50 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1078889 | GE:22708 | epochs:0.4  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1079359 | GE:22716 | epochs:0.4  | ep_lens:50.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:46.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.35 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1079842 | GE:22725 | epochs:0.4  | ep_lens:52.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:44.0 (spuriousM:6.0 ,  13.6%) | ep_rewards:-0.46 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1080206 | GE:22733 | epochs:0.4  | ep_lens:57.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:48.0 (spuriousM:5.0 ,  10.4%) | ep_rewards:-0.51 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1081224 | GE:22752 | epochs:0.4  | ep_lens:100.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:85.0 (spuriousM:2.0 ,   2.4%) | ep_rewards:-0.88 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1081711 | GE:22760 | epochs:0.4  | ep_lens:63.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:52.0 (spuriousM:6.0 ,  11.5%) | ep_rewards:-0.59 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1081920 | GE:22764 | epochs:0.4  | ep_lens:35.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.18 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1082352 | GE:22773 | epochs:0.4  | ep_lens:63.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:49.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.67 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1082843 | GE:22786 | epochs:0.4  | ep_lens:57.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:52.0 (spuriousM:11.0,  21.2%) | ep_rewards:-0.41 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1083102 | GE:22794 | epochs:0.4  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.23 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1083727 | GE:22804 | epochs:0.4  | ep_lens:76.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:66.0 (spuriousM:6.0 ,   9.1%) | ep_rewards:-0.63 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1083833 | GE:22808 | epochs:0.4  | ep_lens:20.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.18 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1084150 | GE:22816 | epochs:0.4  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.37 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1084849 | GE:22831 | epochs:0.4  | ep_lens:57.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:56.0 (spuriousM:3.0 ,   5.4%) | ep_rewards:-0.31 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1085077 | GE:22837 | epochs:0.4  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.24 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1085269 | GE:22841 | epochs:0.4  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.31 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1085513 | GE:22847 | epochs:0.4  | ep_lens:26.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:25.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1086264 | GE:22866 | epochs:0.4  | ep_lens:69.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:67.0 (spuriousM:2.0 ,   3.0%) | ep_rewards:-0.40 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1086323 | GE:22867 | epochs:0.4  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.06  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1086606 | GE:22876 | epochs:0.4  | ep_lens:42.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.39 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1086951 | GE:22884 | epochs:0.4  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:6.0 ,  16.2%) | ep_rewards:-0.37 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1087289 | GE:22892 | epochs:0.4  | ep_lens:50.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:40.0 (spuriousM:6.0 ,  15.0%) | ep_rewards:-0.50 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1087670 | GE:22900 | epochs:0.4  | ep_lens:49.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.37 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1087772 | GE:22903 | epochs:0.4  | ep_lens:21.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:19.0 (spuriousM:3.0 ,  15.8%) | ep_rewards:-0.16 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1088225 | GE:22912 | epochs:0.4  | ep_lens:53.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:50.0 (spuriousM:3.0 ,   6.0%) | ep_rewards:-0.34 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1088445 | GE:22915 | epochs:0.4  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.26 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1089290 | GE:22937 | epochs:0.4  | ep_lens:84.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:75.0 (spuriousM:6.0 ,   8.0%) | ep_rewards:-0.65 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1089628 | GE:22943 | epochs:0.4  | ep_lens:40.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.28 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1090211 | GE:22956 | epochs:0.4  | ep_lens:63.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:56.0 (spuriousM:5.0 ,   8.9%) | ep_rewards:-0.49 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1090686 | GE:22969 | epochs:0.4  | ep_lens:44.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.30 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1091190 | GE:22981 | epochs:0.4  | ep_lens:58.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:51.0 (spuriousM:5.0 ,   9.8%) | ep_rewards:-0.47 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1091520 | GE:22990 | epochs:0.4  | ep_lens:48.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:39.0 (spuriousM:5.0 ,  12.8%) | ep_rewards:-0.47 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1091760 | GE:22994 | epochs:0.4  | ep_lens:45.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.48 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1092210 | GE:23004 | epochs:0.4  | ep_lens:61.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:49.0 (spuriousM:10.0,  20.4%) | ep_rewards:-0.61 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1092363 | GE:23007 | epochs:0.4  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.33 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1092453 | GE:23009 | epochs:0.4  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.16  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1092644 | GE:23012 | epochs:0.4  | ep_lens:48.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.47 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1092808 | GE:23015 | epochs:0.4  | ep_lens:26.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.21 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1093045 | GE:23019 | epochs:0.4  | ep_lens:48.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:41.0 (spuriousM:11.0,  26.8%) | ep_rewards:-0.42 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1093283 | GE:23025 | epochs:0.4  | ep_lens:40.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.40 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1093695 | GE:23035 | epochs:0.4  | ep_lens:57.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:48.0 (spuriousM:3.0 ,   6.2%) | ep_rewards:-0.51 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1094061 | GE:23038 | epochs:0.4  | ep_lens:64.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:53.0 (spuriousM:4.0 ,   7.5%) | ep_rewards:-0.60 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1094473 | GE:23047 | epochs:0.4  | ep_lens:48.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.34 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1094741 | GE:23051 | epochs:0.4  | ep_lens:48.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:43.0 (spuriousM:8.0 ,  18.6%) | ep_rewards:-0.37 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1095496 | GE:23064 | epochs:0.4  | ep_lens:70.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:63.0 (spuriousM:3.0 ,   4.8%) | ep_rewards:-0.53 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1095727 | GE:23068 | epochs:0.4  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.25 | mean_Q:-0.29  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1095936 | GE:23072 | epochs:0.4  | ep_lens:33.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.22 | mean_Q:-0.28  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1096455 | GE:23083 | epochs:0.4  | ep_lens:61.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:52.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.53 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1096904 | GE:23094 | epochs:0.4  | ep_lens:65.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:57.0 (spuriousM:12.0,  21.1%) | ep_rewards:-0.53 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1096991 | GE:23096 | epochs:0.4  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.21  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1097144 | GE:23099 | epochs:0.4  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:4.0 ,  15.4%) | ep_rewards:-0.25 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1097509 | GE:23106 | epochs:0.4  | ep_lens:49.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:44.0 (spuriousM:10.0,  22.7%) | ep_rewards:-0.37 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1097723 | GE:23112 | epochs:0.4  | ep_lens:31.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.28 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1097845 | GE:23114 | epochs:0.4  | ep_lens:23.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:20.0 (spuriousM:4.0 ,  20.0%) | ep_rewards:-0.19 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1098035 | GE:23121 | epochs:0.4  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.23  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1098090 | GE:23125 | epochs:0.4  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1098411 | GE:23128 | epochs:0.4  | ep_lens:57.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:43.0 (spuriousM:7.0 ,  16.3%) | ep_rewards:-0.64 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1099216 | GE:23146 | epochs:0.4  | ep_lens:76.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:62.0 (spuriousM:3.0 ,   4.8%) | ep_rewards:-0.73 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1099680 | GE:23157 | epochs:0.4  | ep_lens:44.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:43.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.25 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1099887 | GE:23161 | epochs:0.4  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.33 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1100210 | GE:23168 | epochs:0.4  | ep_lens:52.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:44.0 (spuriousM:5.0 ,  11.4%) | ep_rewards:-0.46 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1100476 | GE:23176 | epochs:0.4  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.29 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1101023 | GE:23186 | epochs:0.4  | ep_lens:64.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:57.0 (spuriousM:1.0 ,   1.8%) | ep_rewards:-0.50 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1101236 | GE:23191 | epochs:0.4  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.30 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1101469 | GE:23197 | epochs:0.4  | ep_lens:42.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.39 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1101954 | GE:23206 | epochs:0.4  | ep_lens:55.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.53 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1102108 | GE:23210 | epochs:0.4  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.26 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1102289 | GE:23212 | epochs:0.4  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.22 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1102557 | GE:23219 | epochs:0.4  | ep_lens:42.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.39 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1102667 | GE:23223 | epochs:0.4  | ep_lens:21.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:18.0 (spuriousM:2.0 ,  11.1%) | ep_rewards:-0.18 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1103033 | GE:23230 | epochs:0.4  | ep_lens:48.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:43.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.37 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1103224 | GE:23232 | epochs:0.4  | ep_lens:37.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.36 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1103513 | GE:23237 | epochs:0.4  | ep_lens:60.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:46.0 (spuriousM:10.0,  21.7%) | ep_rewards:-0.65 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1103761 | GE:23243 | epochs:0.4  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.39 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1104162 | GE:23250 | epochs:0.4  | ep_lens:52.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.49 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1104474 | GE:23259 | epochs:0.4  | ep_lens:43.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.29 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1104794 | GE:23266 | epochs:0.4  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.30 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1104968 | GE:23272 | epochs:0.4  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.26 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1105521 | GE:23286 | epochs:0.4  | ep_lens:60.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:53.0 (spuriousM:5.0 ,   9.4%) | ep_rewards:-0.48 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1106009 | GE:23299 | epochs:0.4  | ep_lens:56.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.48 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1106336 | GE:23304 | epochs:0.4  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.27 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1106529 | GE:23307 | epochs:0.4  | ep_lens:31.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:30.0 (spuriousM:5.0 ,  16.7%) | ep_rewards:-0.18 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1106734 | GE:23312 | epochs:0.4  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.27 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1106928 | GE:23318 | epochs:0.4  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.19 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1107355 | GE:23325 | epochs:0.4  | ep_lens:49.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.35 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1108166 | GE:23342 | epochs:0.4  | ep_lens:78.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:66.0 (spuriousM:8.0 ,  12.1%) | ep_rewards:-0.69 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1108677 | GE:23353 | epochs:0.4  | ep_lens:58.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:53.0 (spuriousM:3.0 ,   5.7%) | ep_rewards:-0.42 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1108895 | GE:23357 | epochs:0.4  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.30 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1109332 | GE:23365 | epochs:0.4  | ep_lens:51.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:47.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.36 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1109427 | GE:23368 | epochs:0.4  | ep_lens:22.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1109785 | GE:23375 | epochs:0.4  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.37 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1110216 | GE:23384 | epochs:0.4  | ep_lens:57.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:47.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.54 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1110482 | GE:23391 | epochs:0.4  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.37 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1111189 | GE:23406 | epochs:0.4  | ep_lens:73.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:57.0 (spuriousM:4.0 ,   7.0%) | ep_rewards:-0.77 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1111783 | GE:23422 | epochs:0.4  | ep_lens:61.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:54.0 (spuriousM:7.0 ,  13.0%) | ep_rewards:-0.48 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1112497 | GE:23433 | epochs:0.4  | ep_lens:77.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:68.0 (spuriousM:9.0 ,  13.2%) | ep_rewards:-0.61 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1112620 | GE:23438 | epochs:0.4  | ep_lens:14.0 | edits:3.0  (spuriousE:2.0 ,  66.7%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1112747 | GE:23440 | epochs:0.4  | ep_lens:23.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.19 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1112973 | GE:23444 | epochs:0.4  | ep_lens:44.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:34.0 (spuriousM:6.0 ,  17.6%) | ep_rewards:-0.47 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1113168 | GE:23448 | epochs:0.4  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.21 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1113713 | GE:23460 | epochs:0.4  | ep_lens:65.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:56.0 (spuriousM:2.0 ,   3.6%) | ep_rewards:-0.55 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1113884 | GE:23465 | epochs:0.4  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.27 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1114349 | GE:23473 | epochs:0.4  | ep_lens:58.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.67 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1114552 | GE:23478 | epochs:0.4  | ep_lens:44.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.40 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1114673 | GE:23482 | epochs:0.4  | ep_lens:10.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:9.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.25  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1115784 | GE:23507 | epochs:0.4  | ep_lens:86.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:78.0 (spuriousM:9.0 ,  11.5%) | ep_rewards:-0.63 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1116163 | GE:23513 | epochs:0.4  | ep_lens:71.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:53.0 (spuriousM:8.0 ,  15.1%) | ep_rewards:-0.81 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1116648 | GE:23518 | epochs:0.4  | ep_lens:60.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:54.0 (spuriousM:5.0 ,   9.3%) | ep_rewards:-0.45 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1117119 | GE:23526 | epochs:0.4  | ep_lens:77.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:59.0 (spuriousM:17.0,  28.8%) | ep_rewards:-0.84 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1117163 | GE:23527 | epochs:0.4  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.23  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1117576 | GE:23535 | epochs:0.4  | ep_lens:71.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:55.0 (spuriousM:9.0 ,  16.4%) | ep_rewards:-0.76 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1117987 | GE:23541 | epochs:0.4  | ep_lens:51.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:47.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.36 | mean_Q:-0.32  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1118238 | GE:23545 | epochs:0.4  | ep_lens:46.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.48 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1118379 | GE:23549 | epochs:0.4  | ep_lens:21.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.30  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1118650 | GE:23553 | epochs:0.4  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.37 | mean_Q:-0.31  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1119291 | GE:23568 | epochs:0.4  | ep_lens:70.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:63.0 (spuriousM:4.0 ,   6.3%) | ep_rewards:-0.53 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1119622 | GE:23575 | epochs:0.4  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:6.0 ,  20.0%) | ep_rewards:-0.30 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1120181 | GE:23588 | epochs:0.4  | ep_lens:52.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:44.0 (spuriousM:5.0 ,  11.4%) | ep_rewards:-0.46 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1120728 | GE:23600 | epochs:0.4  | ep_lens:66.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:53.0 (spuriousM:4.0 ,   7.5%) | ep_rewards:-0.66 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1120933 | GE:23604 | epochs:0.4  | ep_lens:30.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:28.0 (spuriousM:6.0 ,  21.4%) | ep_rewards:-0.20 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1121134 | GE:23606 | epochs:0.4  | ep_lens:43.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.29 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1121639 | GE:23618 | epochs:0.4  | ep_lens:71.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:64.0 (spuriousM:7.0 ,  10.9%) | ep_rewards:-0.53 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1121885 | GE:23622 | epochs:0.4  | ep_lens:36.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.23 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1122185 | GE:23628 | epochs:0.4  | ep_lens:55.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.65 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1122686 | GE:23639 | epochs:0.4  | ep_lens:64.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:56.0 (spuriousM:5.0 ,   8.9%) | ep_rewards:-0.52 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1123003 | GE:23645 | epochs:0.4  | ep_lens:58.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:50.0 (spuriousM:7.0 ,  14.0%) | ep_rewards:-0.49 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1123473 | GE:23653 | epochs:0.4  | ep_lens:65.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:56.0 (spuriousM:8.0 ,  14.3%) | ep_rewards:-0.55 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1123708 | GE:23659 | epochs:0.4  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.36 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1124320 | GE:23669 | epochs:0.4  | ep_lens:69.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:66.0 (spuriousM:19.0,  28.8%) | ep_rewards:-0.42 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1124807 | GE:23680 | epochs:0.4  | ep_lens:57.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:44.0 (spuriousM:5.0 ,  11.4%) | ep_rewards:-0.61 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1125154 | GE:23689 | epochs:0.4  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.29 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1125421 | GE:23695 | epochs:0.4  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.37 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1125685 | GE:23702 | epochs:0.4  | ep_lens:36.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.38 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1125930 | GE:23708 | epochs:0.4  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.26 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1126521 | GE:23722 | epochs:0.4  | ep_lens:72.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:58.0 (spuriousM:12.0,  20.7%) | ep_rewards:-0.71 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1126752 | GE:23726 | epochs:0.4  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.32 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1127591 | GE:23747 | epochs:0.4  | ep_lens:100.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:85.0 (spuriousM:18.0,  21.2%) | ep_rewards:-0.88 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1127897 | GE:23753 | epochs:0.4  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:4.0 ,  13.8%) | ep_rewards:-0.33 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1128328 | GE:23761 | epochs:0.4  | ep_lens:47.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.26 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1128435 | GE:23763 | epochs:0.4  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.13  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1128652 | GE:23768 | epochs:0.4  | ep_lens:27.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:26.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1129095 | GE:23778 | epochs:0.4  | ep_lens:56.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:47.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.51 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1129901 | GE:23793 | epochs:0.4  | ep_lens:85.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:72.0 (spuriousM:7.0 ,   9.7%) | ep_rewards:-0.75 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1130420 | GE:23804 | epochs:0.4  | ep_lens:58.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.49 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1130557 | GE:23808 | epochs:0.4  | ep_lens:37.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.31 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1131029 | GE:23816 | epochs:0.4  | ep_lens:63.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:57.0 (spuriousM:13.0,  22.8%) | ep_rewards:-0.47 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1131357 | GE:23824 | epochs:0.4  | ep_lens:46.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:38.0 (spuriousM:5.0 ,  13.2%) | ep_rewards:-0.43 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1131437 | GE:23828 | epochs:0.4  | ep_lens:12.0 | edits:2.0  (spuriousE:1.0 ,  50.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1131709 | GE:23835 | epochs:0.4  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:5.0 ,  15.2%) | ep_rewards:-0.23 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1131877 | GE:23841 | epochs:0.4  | ep_lens:26.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.28 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1131959 | GE:23845 | epochs:0.4  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1132223 | GE:23851 | epochs:0.4  | ep_lens:45.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:35.0 (spuriousM:7.0 ,  20.0%) | ep_rewards:-0.48 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1132513 | GE:23858 | epochs:0.4  | ep_lens:50.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.45 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1132707 | GE:23863 | epochs:0.4  | ep_lens:42.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.39 | mean_Q:-0.02  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1133259 | GE:23877 | epochs:0.4  | ep_lens:60.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:49.0 (spuriousM:4.0 ,   8.2%) | ep_rewards:-0.58 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1133655 | GE:23884 | epochs:0.4  | ep_lens:56.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:49.0 (spuriousM:5.0 ,  10.2%) | ep_rewards:-0.46 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1134108 | GE:23892 | epochs:0.4  | ep_lens:55.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:47.0 (spuriousM:3.0 ,   6.4%) | ep_rewards:-0.48 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1134319 | GE:23899 | epochs:0.4  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.34 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1134657 | GE:23907 | epochs:0.4  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.35 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1134884 | GE:23913 | epochs:0.4  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.27 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1135179 | GE:23919 | epochs:0.4  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:5.0 ,  13.2%) | ep_rewards:-0.37 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1135389 | GE:23921 | epochs:0.4  | ep_lens:42.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.51 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1135695 | GE:23927 | epochs:0.4  | ep_lens:49.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:42.0 (spuriousM:7.0 ,  16.7%) | ep_rewards:-0.42 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1136159 | GE:23938 | epochs:0.4  | ep_lens:51.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.48 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1137067 | GE:23955 | epochs:0.4  | ep_lens:72.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:55.0 (spuriousM:3.0 ,   5.5%) | ep_rewards:-0.79 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1137304 | GE:23959 | epochs:0.4  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.31 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1137607 | GE:23968 | epochs:0.4  | ep_lens:45.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:38.0 (spuriousM:5.0 ,  13.2%) | ep_rewards:-0.40 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1137757 | GE:23973 | epochs:0.4  | ep_lens:30.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:24.0 (spuriousM:4.0 ,  16.7%) | ep_rewards:-0.30 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1137935 | GE:23976 | epochs:0.4  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.25 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1138121 | GE:23983 | epochs:0.4  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.19 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1138245 | GE:23985 | epochs:0.4  | ep_lens:18.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.10  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1138780 | GE:24000 | epochs:0.4  | ep_lens:63.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:54.0 (spuriousM:4.0 ,   7.4%) | ep_rewards:-0.54 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1139005 | GE:24004 | epochs:0.4  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.30 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1139586 | GE:24015 | epochs:0.4  | ep_lens:66.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:56.0 (spuriousM:4.0 ,   7.1%) | ep_rewards:-0.58 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1140329 | GE:24031 | epochs:0.4  | ep_lens:89.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:77.0 (spuriousM:10.0,  13.0%) | ep_rewards:-0.75 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1140725 | GE:24039 | epochs:0.4  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.36 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1140927 | GE:24045 | epochs:0.4  | ep_lens:40.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.35 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1141327 | GE:24054 | epochs:0.4  | ep_lens:50.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:47.0 (spuriousM:8.0 ,  17.0%) | ep_rewards:-0.33 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1141682 | GE:24061 | epochs:0.4  | ep_lens:44.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:41.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.30 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1142357 | GE:24074 | epochs:0.4  | ep_lens:67.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.66 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1142516 | GE:24077 | epochs:0.4  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:4.0 ,  15.4%) | ep_rewards:-0.25 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1142644 | GE:24082 | epochs:0.4  | ep_lens:26.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.23 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1142924 | GE:24088 | epochs:0.4  | ep_lens:40.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:37.0 (spuriousM:6.0 ,  16.2%) | ep_rewards:-0.28 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1143030 | GE:24091 | epochs:0.4  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1143241 | GE:24094 | epochs:0.4  | ep_lens:46.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.58 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1143438 | GE:24096 | epochs:0.4  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:8.0 ,  22.9%) | ep_rewards:-0.36 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1143512 | GE:24099 | epochs:0.4  | ep_lens:20.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.12 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1144294 | GE:24116 | epochs:0.4  | ep_lens:94.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:77.0 (spuriousM:8.0 ,  10.4%) | ep_rewards:-0.90 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1144621 | GE:24123 | epochs:0.4  | ep_lens:47.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.39 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1145231 | GE:24138 | epochs:0.4  | ep_lens:58.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:54.0 (spuriousM:2.0 ,   3.7%) | ep_rewards:-0.39 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1145866 | GE:24154 | epochs:0.4  | ep_lens:60.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:56.0 (spuriousM:3.0 ,   5.4%) | ep_rewards:-0.40 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1146393 | GE:24163 | epochs:0.4  | ep_lens:65.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:55.0 (spuriousM:3.0 ,   5.5%) | ep_rewards:-0.58 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1146788 | GE:24172 | epochs:0.4  | ep_lens:61.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:50.0 (spuriousM:10.0,  20.0%) | ep_rewards:-0.58 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1147141 | GE:24180 | epochs:0.4  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.35 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1147514 | GE:24190 | epochs:0.4  | ep_lens:46.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.31 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1147905 | GE:24197 | epochs:0.4  | ep_lens:52.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:40.0 (spuriousM:8.0 ,  20.0%) | ep_rewards:-0.56 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1148335 | GE:24206 | epochs:0.4  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.40 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1148543 | GE:24212 | epochs:0.4  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.23 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1148720 | GE:24215 | epochs:0.4  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.22 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1148890 | GE:24219 | epochs:0.4  | ep_lens:22.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:18.0 (spuriousM:2.0 ,  11.1%) | ep_rewards:-0.21 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1149235 | GE:24226 | epochs:0.4  | ep_lens:51.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.38 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1149452 | GE:24232 | epochs:0.4  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:4.0 ,  16.0%) | ep_rewards:-0.22 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1149787 | GE:24241 | epochs:0.4  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.35 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1150263 | GE:24252 | epochs:0.4  | ep_lens:57.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:53.0 (spuriousM:6.0 ,  11.3%) | ep_rewards:-0.39 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1150806 | GE:24264 | epochs:0.4  | ep_lens:55.0 | edits:8.0  (spuriousE:7.0 ,  87.5%) | moves:47.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:0.52  | mean_Q:-0.08  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1150966 | GE:24268 | epochs:0.4  | ep_lens:26.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:24.0 (spuriousM:4.0 ,  16.7%) | ep_rewards:-0.18 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1151215 | GE:24277 | epochs:0.4  | ep_lens:30.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.20 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1151377 | GE:24281 | epochs:0.4  | ep_lens:26.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.28 | mean_Q:-0.01  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1151577 | GE:24285 | epochs:0.4  | ep_lens:43.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:39.0 (spuriousM:6.0 ,  15.4%) | ep_rewards:-0.32 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1151932 | GE:24296 | epochs:0.4  | ep_lens:48.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.47 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1152089 | GE:24300 | epochs:0.4  | ep_lens:19.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.14  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1152835 | GE:24312 | epochs:0.4  | ep_lens:83.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:74.0 (spuriousM:5.0 ,   6.8%) | ep_rewards:-0.64 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1153628 | GE:24329 | epochs:0.4  | ep_lens:66.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:62.0 (spuriousM:3.0 ,   4.8%) | ep_rewards:-0.43 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1153772 | GE:24332 | epochs:0.4  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.25  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1153983 | GE:24338 | epochs:0.4  | ep_lens:40.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:38.0 (spuriousM:8.0 ,  21.1%) | ep_rewards:-0.25 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1154529 | GE:24350 | epochs:0.4  | ep_lens:50.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.38 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1154750 | GE:24357 | epochs:0.4  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.30 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1155013 | GE:24361 | epochs:0.4  | ep_lens:36.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.33 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1155209 | GE:24368 | epochs:0.4  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:6.0 ,  19.4%) | ep_rewards:-0.31 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1155585 | GE:24377 | epochs:0.4  | ep_lens:46.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.41 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1156178 | GE:24392 | epochs:0.4  | ep_lens:55.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:49.0 (spuriousM:4.0 ,   8.2%) | ep_rewards:-0.43 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1156267 | GE:24395 | epochs:0.4  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.02  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1156473 | GE:24397 | epochs:0.4  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.36 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1156688 | GE:24405 | epochs:0.4  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.28 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1156866 | GE:24408 | epochs:0.4  | ep_lens:23.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.05  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1157016 | GE:24412 | epochs:0.4  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:3.0 ,  13.6%) | ep_rewards:-0.20 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1157336 | GE:24419 | epochs:0.4  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.36 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1157756 | GE:24431 | epochs:0.4  | ep_lens:52.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:45.0 (spuriousM:5.0 ,  11.1%) | ep_rewards:-0.44 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1157884 | GE:24435 | epochs:0.4  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.10  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1158256 | GE:24443 | epochs:0.4  | ep_lens:46.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:44.0 (spuriousM:6.0 ,  13.6%) | ep_rewards:-0.28 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1158761 | GE:24451 | epochs:0.4  | ep_lens:57.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:48.0 (spuriousM:2.0 ,   4.2%) | ep_rewards:-0.51 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1159465 | GE:24465 | epochs:0.4  | ep_lens:84.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:72.0 (spuriousM:13.0,  18.1%) | ep_rewards:-0.72 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1159837 | GE:24475 | epochs:0.4  | ep_lens:46.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:43.0 (spuriousM:4.0 ,   9.3%) | ep_rewards:-0.31 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1160180 | GE:24482 | epochs:0.4  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.26 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1160759 | GE:24499 | epochs:0.4  | ep_lens:57.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:51.0 (spuriousM:3.0 ,   5.9%) | ep_rewards:-0.44 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1160859 | GE:24502 | epochs:0.4  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.13  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1161047 | GE:24507 | epochs:0.4  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.33 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1161138 | GE:24509 | epochs:0.4  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1161735 | GE:24523 | epochs:0.4  | ep_lens:69.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:59.0 (spuriousM:3.0 ,   5.1%) | ep_rewards:-0.60 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1161895 | GE:24526 | epochs:0.4  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:4.0 ,  16.0%) | ep_rewards:-0.22 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1162124 | GE:24532 | epochs:0.4  | ep_lens:33.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.17 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1162542 | GE:24543 | epochs:0.4  | ep_lens:52.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:49.0 (spuriousM:8.0 ,  16.3%) | ep_rewards:-0.34 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1162844 | GE:24548 | epochs:0.4  | ep_lens:46.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.46 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1163020 | GE:24552 | epochs:0.4  | ep_lens:35.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.38 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1164037 | GE:24577 | epochs:0.4  | ep_lens:84.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:73.0 (spuriousM:3.0 ,   4.1%) | ep_rewards:-0.70 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1164362 | GE:24583 | epochs:0.4  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.25 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1165180 | GE:24602 | epochs:0.4  | ep_lens:84.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:71.0 (spuriousM:2.0 ,   2.8%) | ep_rewards:-0.75 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1165829 | GE:24617 | epochs:0.4  | ep_lens:63.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:55.0 (spuriousM:4.0 ,   7.3%) | ep_rewards:-0.52 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1166057 | GE:24621 | epochs:0.4  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.23 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1166147 | GE:24624 | epochs:0.4  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1166329 | GE:24629 | epochs:0.4  | ep_lens:25.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.15 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1166556 | GE:24637 | epochs:0.4  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.27 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1167412 | GE:24652 | epochs:0.4  | ep_lens:90.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:79.0 (spuriousM:7.0 ,   8.9%) | ep_rewards:-0.73 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1167739 | GE:24660 | epochs:0.4  | ep_lens:43.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.42 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1168450 | GE:24678 | epochs:0.4  | ep_lens:70.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:61.0 (spuriousM:3.0 ,   4.9%) | ep_rewards:-0.58 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1168925 | GE:24690 | epochs:0.4  | ep_lens:59.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:51.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.50 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1169392 | GE:24700 | epochs:0.4  | ep_lens:64.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:59.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.45 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1169689 | GE:24707 | epochs:0.4  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.33 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1169989 | GE:24716 | epochs:0.4  | ep_lens:40.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.28 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1170216 | GE:24723 | epochs:0.4  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:4.0 ,  11.8%) | ep_rewards:-0.29 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1170505 | GE:24727 | epochs:0.4  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.39 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1171136 | GE:24740 | epochs:0.4  | ep_lens:72.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:61.0 (spuriousM:5.0 ,   8.2%) | ep_rewards:-0.64 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1171690 | GE:24752 | epochs:0.4  | ep_lens:63.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:57.0 (spuriousM:8.0 ,  14.0%) | ep_rewards:-0.47 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1171837 | GE:24755 | epochs:0.4  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.20 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1172071 | GE:24763 | epochs:0.4  | ep_lens:42.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:33.0 (spuriousM:7.0 ,  21.2%) | ep_rewards:-0.44 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1172401 | GE:24770 | epochs:0.4  | ep_lens:52.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:44.0 (spuriousM:5.0 ,  11.4%) | ep_rewards:-0.46 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1172598 | GE:24775 | epochs:0.4  | ep_lens:32.0 | edits:6.0  (spuriousE:5.0 ,  83.3%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:0.69  | mean_Q:-0.10  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1173005 | GE:24782 | epochs:0.4  | ep_lens:52.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:45.0 (spuriousM:5.0 ,  11.1%) | ep_rewards:-0.44 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1173578 | GE:24795 | epochs:0.4  | ep_lens:61.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:52.0 (spuriousM:3.0 ,   5.8%) | ep_rewards:-0.53 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1174071 | GE:24804 | epochs:0.4  | ep_lens:51.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:44.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.43 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1174777 | GE:24821 | epochs:0.4  | ep_lens:67.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:62.0 (spuriousM:5.0 ,   8.1%) | ep_rewards:-0.46 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1174913 | GE:24823 | epochs:0.4  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.18  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1175145 | GE:24829 | epochs:0.4  | ep_lens:45.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.45 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1175597 | GE:24842 | epochs:0.4  | ep_lens:52.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:49.0 (spuriousM:3.0 ,   6.1%) | ep_rewards:-0.34 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1175994 | GE:24852 | epochs:0.4  | ep_lens:45.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:42.0 (spuriousM:4.0 ,   9.5%) | ep_rewards:-0.30 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1176082 | GE:24856 | epochs:0.4  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1176616 | GE:24866 | epochs:0.4  | ep_lens:59.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:51.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.50 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1176928 | GE:24874 | epochs:0.4  | ep_lens:40.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.40 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1177130 | GE:24877 | epochs:0.4  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.24 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1177356 | GE:24882 | epochs:0.4  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.28 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1177529 | GE:24887 | epochs:0.4  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.17  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1177728 | GE:24892 | epochs:0.4  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.25 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1177988 | GE:24896 | epochs:0.4  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:5.0 ,  16.7%) | ep_rewards:-0.24 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1178106 | GE:24898 | epochs:0.4  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:4.0 ,  18.2%) | ep_rewards:-0.20 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1178330 | GE:24905 | epochs:0.4  | ep_lens:26.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.23 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1178560 | GE:24911 | epochs:0.4  | ep_lens:33.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:27.0 (spuriousM:5.0 ,  18.5%) | ep_rewards:-0.32 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1178793 | GE:24916 | epochs:0.4  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.38 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1179080 | GE:24922 | epochs:0.4  | ep_lens:39.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.25 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1179376 | GE:24929 | epochs:0.4  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.35 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1179552 | GE:24933 | epochs:0.4  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.21 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1179885 | GE:24940 | epochs:0.4  | ep_lens:56.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:48.0 (spuriousM:6.0 ,  12.5%) | ep_rewards:-0.48 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1180122 | GE:24946 | epochs:0.4  | ep_lens:28.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.27 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1180348 | GE:24954 | epochs:0.4  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:5.0 ,  16.7%) | ep_rewards:-0.21 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1180597 | GE:24961 | epochs:0.4  | ep_lens:36.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.23 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1180847 | GE:24969 | epochs:0.4  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.33 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1181101 | GE:24977 | epochs:0.4  | ep_lens:35.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.18 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1181270 | GE:24982 | epochs:0.4  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:7.0 ,  24.1%) | ep_rewards:-0.33 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1181388 | GE:24985 | epochs:0.4  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1181611 | GE:24992 | epochs:0.4  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.28 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1181895 | GE:24999 | epochs:0.4  | ep_lens:31.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:29.0 (spuriousM:4.0 ,  13.8%) | ep_rewards:-0.21 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1182366 | GE:25011 | epochs:0.4  | ep_lens:63.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:54.0 (spuriousM:2.0 ,   3.7%) | ep_rewards:-0.54 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1182627 | GE:25017 | epochs:0.4  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.36 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1183078 | GE:25029 | epochs:0.4  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:7.0 ,  16.7%) | ep_rewards:-0.39 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1183301 | GE:25035 | epochs:0.4  | ep_lens:32.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.29 | mean_Q:-0.02  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1183817 | GE:25045 | epochs:0.4  | ep_lens:47.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:45.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.29 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1184278 | GE:25050 | epochs:0.4  | ep_lens:50.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:46.0 (spuriousM:3.0 ,   6.5%) | ep_rewards:-0.35 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1184913 | GE:25063 | epochs:0.4  | ep_lens:56.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:47.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.51 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1185184 | GE:25066 | epochs:0.4  | ep_lens:48.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.47 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1185301 | GE:25071 | epochs:0.4  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.28  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1186276 | GE:25088 | epochs:0.4  | ep_lens:95.0 | edits:23.0 (spuriousE:23.0, 100.0%) | moves:72.0 (spuriousM:15.0,  20.8%) | ep_rewards:-1.05 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1186836 | GE:25100 | epochs:0.4  | ep_lens:68.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:53.0 (spuriousM:4.0 ,   7.5%) | ep_rewards:-0.72 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1187389 | GE:25105 | epochs:0.4  | ep_lens:81.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:64.0 (spuriousM:7.0 ,  10.9%) | ep_rewards:-0.83 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1187732 | GE:25110 | epochs:0.4  | ep_lens:60.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:45.0 (spuriousM:5.0 ,  11.1%) | ep_rewards:-0.68 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1188005 | GE:25116 | epochs:0.4  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.34 | mean_Q:-0.34  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1188506 | GE:25127 | epochs:0.4  | ep_lens:53.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.62 | mean_Q:-0.35  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1188605 | GE:25128 | epochs:0.4  | ep_lens:17.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.25  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1188911 | GE:25137 | epochs:0.4  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.36 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1189360 | GE:25148 | epochs:0.4  | ep_lens:53.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.39 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1189584 | GE:25155 | epochs:0.4  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:6.0 ,  22.2%) | ep_rewards:-0.23 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1189921 | GE:25163 | epochs:0.4  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:7.0 ,  18.9%) | ep_rewards:-0.31 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1189975 | GE:25166 | epochs:0.4  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.09  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1190771 | GE:25183 | epochs:0.4  | ep_lens:86.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:70.0 (spuriousM:9.0 ,  12.9%) | ep_rewards:-0.83 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1191085 | GE:25191 | epochs:0.4  | ep_lens:45.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.43 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1191411 | GE:25199 | epochs:0.4  | ep_lens:40.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:34.0 (spuriousM:4.0 ,  11.8%) | ep_rewards:-0.35 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1191585 | GE:25205 | epochs:0.4  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1191689 | GE:25208 | epochs:0.4  | ep_lens:23.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.19 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1191774 | GE:25210 | epochs:0.4  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1192061 | GE:25217 | epochs:0.4  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:6.0 ,  18.2%) | ep_rewards:-0.29 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1192170 | GE:25220 | epochs:0.4  | ep_lens:23.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:22.0 (spuriousM:3.0 ,  13.6%) | ep_rewards:-0.14 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1192453 | GE:25227 | epochs:0.4  | ep_lens:40.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.28 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1192643 | GE:25233 | epochs:0.4  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.25 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1193166 | GE:25244 | epochs:0.4  | ep_lens:52.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:43.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.49 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1193456 | GE:25254 | epochs:0.4  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:5.0 ,  13.9%) | ep_rewards:-0.36 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1194476 | GE:25280 | epochs:0.4  | ep_lens:90.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:79.0 (spuriousM:6.0 ,   7.6%) | ep_rewards:-0.73 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1195019 | GE:25289 | epochs:0.4  | ep_lens:51.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:45.0 (spuriousM:6.0 ,  13.3%) | ep_rewards:-0.41 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1195317 | GE:25294 | epochs:0.4  | ep_lens:36.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.21 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1195531 | GE:25301 | epochs:0.4  | ep_lens:24.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1195908 | GE:25310 | epochs:0.4  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.35 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1196545 | GE:25323 | epochs:0.4  | ep_lens:66.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:61.0 (spuriousM:1.0 ,   1.6%) | ep_rewards:-0.46 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1196732 | GE:25327 | epochs:0.4  | ep_lens:38.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.34 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1196863 | GE:25330 | epochs:0.4  | ep_lens:24.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.17 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1197253 | GE:25340 | epochs:0.4  | ep_lens:47.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.41 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1198096 | GE:25360 | epochs:0.4  | ep_lens:66.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:56.0 (spuriousM:3.0 ,   5.4%) | ep_rewards:-0.58 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1198394 | GE:25366 | epochs:0.4  | ep_lens:42.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.39 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1198520 | GE:25370 | epochs:0.4  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.22  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1198818 | GE:25378 | epochs:0.4  | ep_lens:43.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:33.0 (spuriousM:9.0 ,  27.3%) | ep_rewards:-0.47 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1199210 | GE:25386 | epochs:0.4  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.33 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1199506 | GE:25393 | epochs:0.4  | ep_lens:43.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.24 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1199694 | GE:25397 | epochs:0.4  | ep_lens:35.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.35 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1199974 | GE:25407 | epochs:0.4  | ep_lens:42.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.41 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1200863 | GE:25425 | epochs:0.4  | ep_lens:68.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:64.0 (spuriousM:4.0 ,   6.2%) | ep_rewards:-0.44 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1201394 | GE:25432 | epochs:0.4  | ep_lens:73.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:60.0 (spuriousM:3.0 ,   5.0%) | ep_rewards:-0.69 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1202471 | GE:25452 | epochs:0.4  | ep_lens:100.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:84.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:-0.90 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1203077 | GE:25466 | epochs:0.4  | ep_lens:64.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:59.0 (spuriousM:3.0 ,   5.1%) | ep_rewards:-0.45 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1203410 | GE:25473 | epochs:0.4  | ep_lens:46.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.43 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1203638 | GE:25481 | epochs:0.4  | ep_lens:31.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:29.0 (spuriousM:4.0 ,  13.8%) | ep_rewards:-0.21 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1204073 | GE:25491 | epochs:0.4  | ep_lens:59.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:53.0 (spuriousM:8.0 ,  15.1%) | ep_rewards:-0.45 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1204301 | GE:25497 | epochs:0.4  | ep_lens:36.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:35.0 (spuriousM:7.0 ,  20.0%) | ep_rewards:-0.21 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1204472 | GE:25502 | epochs:0.4  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.18  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1204832 | GE:25511 | epochs:0.4  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.33 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1205079 | GE:25519 | epochs:0.4  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:6.0 ,  17.6%) | ep_rewards:-0.26 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1205395 | GE:25529 | epochs:0.4  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.26 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1205551 | GE:25533 | epochs:0.4  | ep_lens:24.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.17 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1205794 | GE:25540 | epochs:0.4  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.24 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1206075 | GE:25546 | epochs:0.4  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.29 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1206721 | GE:25561 | epochs:0.4  | ep_lens:78.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:67.0 (spuriousM:10.0,  14.9%) | ep_rewards:-0.67 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1207109 | GE:25572 | epochs:0.4  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.29 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1207643 | GE:25584 | epochs:0.4  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.40 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1207926 | GE:25589 | epochs:0.4  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.26 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1208102 | GE:25595 | epochs:0.4  | ep_lens:30.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:25.0 (spuriousM:4.0 ,  16.0%) | ep_rewards:-0.28 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1208509 | GE:25603 | epochs:0.4  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:7.0 ,  16.7%) | ep_rewards:-0.33 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1208602 | GE:25609 | epochs:0.4  | ep_lens:20.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:3.0 ,  15.0%) | ep_rewards:-0.10 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1208757 | GE:25614 | epochs:0.4  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1209084 | GE:25622 | epochs:0.4  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.39 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1209208 | GE:25625 | epochs:0.4  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1209471 | GE:25634 | epochs:0.4  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.29 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1209722 | GE:25638 | epochs:0.4  | ep_lens:40.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.38 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1209844 | GE:25641 | epochs:0.4  | ep_lens:24.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.15 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1210073 | GE:25647 | epochs:0.4  | ep_lens:32.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.31 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1210170 | GE:25651 | epochs:0.4  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1210395 | GE:25658 | epochs:0.4  | ep_lens:36.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:30.0 (spuriousM:5.0 ,  16.7%) | ep_rewards:-0.33 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1211213 | GE:25674 | epochs:0.4  | ep_lens:75.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:68.0 (spuriousM:13.0,  19.1%) | ep_rewards:-0.55 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1211980 | GE:25695 | epochs:0.4  | ep_lens:62.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:58.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.41 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1212339 | GE:25705 | epochs:0.4  | ep_lens:44.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:41.0 (spuriousM:6.0 ,  14.6%) | ep_rewards:-0.30 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1212777 | GE:25716 | epochs:0.4  | ep_lens:60.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:47.0 (spuriousM:5.0 ,  10.6%) | ep_rewards:-0.63 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1213098 | GE:25721 | epochs:0.4  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.29 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1213395 | GE:25730 | epochs:0.4  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:6.0 ,  17.1%) | ep_rewards:-0.27 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1213621 | GE:25736 | epochs:0.4  | ep_lens:39.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.50 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1214099 | GE:25748 | epochs:0.4  | ep_lens:66.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:58.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.53 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1214318 | GE:25753 | epochs:0.4  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.22 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1214910 | GE:25768 | epochs:0.4  | ep_lens:62.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:60.0 (spuriousM:4.0 ,   6.7%) | ep_rewards:-0.36 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1215227 | GE:25775 | epochs:0.4  | ep_lens:46.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.28 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1215300 | GE:25776 | epochs:0.4  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.07  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1215412 | GE:25781 | epochs:0.4  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.16 | mean_Q:0.01   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1215609 | GE:25785 | epochs:0.4  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.29 | mean_Q:-0.00  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1215922 | GE:25794 | epochs:0.4  | ep_lens:37.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:32.0 (spuriousM:5.0 ,  15.6%) | ep_rewards:-0.31 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1216229 | GE:25800 | epochs:0.4  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.33 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1216545 | GE:25807 | epochs:0.4  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.34 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1216843 | GE:25817 | epochs:0.4  | ep_lens:28.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:27.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.13  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1217181 | GE:25824 | epochs:0.4  | ep_lens:55.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:44.0 (spuriousM:15.0,  34.1%) | ep_rewards:-0.55 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1217384 | GE:25829 | epochs:0.4  | ep_lens:35.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.38 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1218156 | GE:25844 | epochs:0.4  | ep_lens:78.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:67.0 (spuriousM:7.0 ,  10.4%) | ep_rewards:-0.67 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1218928 | GE:25859 | epochs:0.4  | ep_lens:75.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:66.0 (spuriousM:6.0 ,   9.1%) | ep_rewards:-0.60 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1219320 | GE:25868 | epochs:0.4  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.38 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1219393 | GE:25870 | epochs:0.4  | ep_lens:10.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:9.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1219687 | GE:25876 | epochs:0.4  | ep_lens:46.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:38.0 (spuriousM:14.0,  36.8%) | ep_rewards:-0.43 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1219991 | GE:25885 | epochs:0.4  | ep_lens:54.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:41.0 (spuriousM:7.0 ,  17.1%) | ep_rewards:-0.60 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1220116 | GE:25888 | epochs:0.4  | ep_lens:26.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:18.0 (spuriousM:2.0 ,  11.1%) | ep_rewards:-0.33 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1220379 | GE:25892 | epochs:0.4  | ep_lens:50.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.48 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1221120 | GE:25909 | epochs:0.4  | ep_lens:83.0 | edits:21.0 (spuriousE:21.0, 100.0%) | moves:62.0 (spuriousM:4.0 ,   6.5%) | ep_rewards:-0.94 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1221314 | GE:25915 | epochs:0.4  | ep_lens:17.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.17  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1221647 | GE:25920 | epochs:0.4  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.23 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1221911 | GE:25925 | epochs:0.4  | ep_lens:33.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.19 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1222210 | GE:25932 | epochs:0.4  | ep_lens:53.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.54 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1222572 | GE:25943 | epochs:0.4  | ep_lens:48.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:45.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.32 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1222865 | GE:25954 | epochs:0.4  | ep_lens:53.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:42.0 (spuriousM:7.0 ,  16.7%) | ep_rewards:-0.54 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1223133 | GE:25958 | epochs:0.4  | ep_lens:42.0 | edits:5.0  (spuriousE:4.0 ,  80.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.30 | mean_Q:-0.07  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:1223414 | GE:25965 | epochs:0.4  | ep_lens:47.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:43.0 (spuriousM:15.0,  34.9%) | ep_rewards:-0.34 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1223924 | GE:25972 | epochs:0.4  | ep_lens:63.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:57.0 (spuriousM:2.0 ,   3.5%) | ep_rewards:-0.47 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1224149 | GE:25975 | epochs:0.4  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.27 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1225101 | GE:25996 | epochs:0.4  | ep_lens:84.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:76.0 (spuriousM:11.0,  14.5%) | ep_rewards:-0.62 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1225391 | GE:26002 | epochs:0.4  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.34 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1226039 | GE:26017 | epochs:0.4  | ep_lens:61.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:53.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.51 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1226224 | GE:26021 | epochs:0.4  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:5.0 ,  15.2%) | ep_rewards:-0.26 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1226457 | GE:26029 | epochs:0.4  | ep_lens:37.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.31 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1226819 | GE:26037 | epochs:0.4  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.28 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1227032 | GE:26042 | epochs:0.4  | ep_lens:39.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.42 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1227689 | GE:26058 | epochs:0.4  | ep_lens:67.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:60.0 (spuriousM:3.0 ,   5.0%) | ep_rewards:-0.51 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1227940 | GE:26061 | epochs:0.4  | ep_lens:43.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.29 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1228270 | GE:26069 | epochs:0.4  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.28 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1228570 | GE:26076 | epochs:0.4  | ep_lens:46.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.46 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1228701 | GE:26082 | epochs:0.4  | ep_lens:23.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:20.0 (spuriousM:3.0 ,  15.0%) | ep_rewards:-0.19 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1228999 | GE:26088 | epochs:0.4  | ep_lens:51.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:43.0 (spuriousM:8.0 ,  18.6%) | ep_rewards:-0.46 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1229166 | GE:26091 | epochs:0.4  | ep_lens:24.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.17 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1229355 | GE:26095 | epochs:0.4  | ep_lens:43.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:35.0 (spuriousM:6.0 ,  17.1%) | ep_rewards:-0.42 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1229724 | GE:26101 | epochs:0.4  | ep_lens:57.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:54.0 (spuriousM:11.0,  20.4%) | ep_rewards:-0.36 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1229998 | GE:26108 | epochs:0.4  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.34 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1230393 | GE:26120 | epochs:0.4  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.36 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1230750 | GE:26125 | epochs:0.4  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.29 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1230833 | GE:26130 | epochs:0.4  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1231159 | GE:26136 | epochs:0.4  | ep_lens:39.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.22 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1231230 | GE:26140 | epochs:0.4  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1231598 | GE:26150 | epochs:0.4  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.27 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1231921 | GE:26159 | epochs:0.4  | ep_lens:42.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.41 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1232151 | GE:26164 | epochs:0.4  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.25 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1232270 | GE:26169 | epochs:0.4  | ep_lens:24.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.17 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1232670 | GE:26180 | epochs:0.4  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.33 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1233556 | GE:26198 | epochs:0.4  | ep_lens:74.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:66.0 (spuriousM:2.0 ,   3.0%) | ep_rewards:-0.57 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1233885 | GE:26208 | epochs:0.4  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:4.0 ,  11.8%) | ep_rewards:-0.32 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1234181 | GE:26217 | epochs:0.4  | ep_lens:39.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.25 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1234361 | GE:26224 | epochs:0.4  | ep_lens:31.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.28 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1234678 | GE:26232 | epochs:0.4  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.32 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1235391 | GE:26251 | epochs:0.4  | ep_lens:63.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:52.0 (spuriousM:4.0 ,   7.7%) | ep_rewards:-0.59 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1235829 | GE:26257 | epochs:0.4  | ep_lens:52.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:46.0 (spuriousM:3.0 ,   6.5%) | ep_rewards:-0.41 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1236074 | GE:26265 | epochs:0.4  | ep_lens:37.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.31 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1236615 | GE:26274 | epochs:0.4  | ep_lens:50.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.55 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1236995 | GE:26280 | epochs:0.4  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.39 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1237155 | GE:26285 | epochs:0.4  | ep_lens:24.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.15 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1237467 | GE:26292 | epochs:0.4  | ep_lens:48.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.42 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1237949 | GE:26300 | epochs:0.4  | ep_lens:63.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.54 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1238154 | GE:26306 | epochs:0.4  | ep_lens:39.0 | edits:9.0  (spuriousE:8.0 ,  88.9%) | moves:30.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.58  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1238581 | GE:26313 | epochs:0.4  | ep_lens:54.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:46.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.47 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1238887 | GE:26319 | epochs:0.4  | ep_lens:41.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.46 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1239181 | GE:26323 | epochs:0.4  | ep_lens:40.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.43 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1239397 | GE:26331 | epochs:0.4  | ep_lens:39.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.40 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1240207 | GE:26347 | epochs:0.4  | ep_lens:72.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:60.0 (spuriousM:3.0 ,   5.0%) | ep_rewards:-0.66 | mean_Q:-0.30  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1240648 | GE:26356 | epochs:0.4  | ep_lens:52.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.51 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1241312 | GE:26371 | epochs:0.4  | ep_lens:58.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:45.0 (spuriousM:5.0 ,  11.1%) | ep_rewards:-0.62 | mean_Q:-0.31  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1241377 | GE:26374 | epochs:0.4  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.25  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1241601 | GE:26381 | epochs:0.4  | ep_lens:26.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:24.0 (spuriousM:7.0 ,  29.2%) | ep_rewards:-0.18 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1241885 | GE:26384 | epochs:0.4  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:8.0 ,  18.6%) | ep_rewards:-0.43 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1242274 | GE:26392 | epochs:0.4  | ep_lens:60.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:43.0 (spuriousM:4.0 ,   9.3%) | ep_rewards:-0.73 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1242435 | GE:26397 | epochs:0.4  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.19 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1242636 | GE:26401 | epochs:0.4  | ep_lens:32.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:28.0 (spuriousM:4.0 ,  14.3%) | ep_rewards:-0.26 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1242965 | GE:26411 | epochs:0.4  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.37 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1243670 | GE:26429 | epochs:0.4  | ep_lens:55.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:46.0 (spuriousM:5.0 ,  10.9%) | ep_rewards:-0.50 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1243928 | GE:26435 | epochs:0.4  | ep_lens:24.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1244083 | GE:26438 | epochs:0.4  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1244275 | GE:26443 | epochs:0.4  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.24 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1244442 | GE:26450 | epochs:0.4  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:6.0 ,  20.0%) | ep_rewards:-0.24 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1244560 | GE:26451 | epochs:0.4  | ep_lens:24.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:19.0 (spuriousM:4.0 ,  21.1%) | ep_rewards:-0.25 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1244624 | GE:26453 | epochs:0.4  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1245048 | GE:26465 | epochs:0.4  | ep_lens:49.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:43.0 (spuriousM:8.0 ,  18.6%) | ep_rewards:-0.40 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1245420 | GE:26473 | epochs:0.4  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:5.0 ,  11.9%) | ep_rewards:-0.33 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1245552 | GE:26475 | epochs:0.4  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.13  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1246458 | GE:26498 | epochs:0.4  | ep_lens:97.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:88.0 (spuriousM:31.0,  35.2%) | ep_rewards:-0.71 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1246977 | GE:26509 | epochs:0.4  | ep_lens:67.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:59.0 (spuriousM:7.0 ,  11.9%) | ep_rewards:-0.54 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1247138 | GE:26512 | epochs:0.4  | ep_lens:33.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.34 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1247497 | GE:26517 | epochs:0.4  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.40 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1247740 | GE:26522 | epochs:0.4  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.30 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1248300 | GE:26538 | epochs:0.4  | ep_lens:58.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:50.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.49 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1248674 | GE:26546 | epochs:0.4  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.23 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1248821 | GE:26551 | epochs:0.4  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1249116 | GE:26558 | epochs:0.4  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.33 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1249284 | GE:26562 | epochs:0.4  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.27 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1249397 | GE:26565 | epochs:0.4  | ep_lens:22.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.16 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1249607 | GE:26570 | epochs:0.4  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.18 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1250434 | GE:26592 | epochs:0.4  | ep_lens:66.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:62.0 (spuriousM:5.0 ,   8.1%) | ep_rewards:-0.43 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1250571 | GE:26594 | epochs:0.4  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:6.0 ,  25.0%) | ep_rewards:-0.21 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1250922 | GE:26603 | epochs:0.4  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.35 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1251192 | GE:26609 | epochs:0.4  | ep_lens:32.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.19 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1251318 | GE:26612 | epochs:0.4  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1252474 | GE:26636 | epochs:0.4  | ep_lens:100.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:89.0 (spuriousM:8.0 ,   9.0%) | ep_rewards:-0.78 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1252668 | GE:26641 | epochs:0.4  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.28 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1253100 | GE:26648 | epochs:0.4  | ep_lens:54.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:45.0 (spuriousM:4.0 ,   8.9%) | ep_rewards:-0.50 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1253677 | GE:26657 | epochs:0.4  | ep_lens:79.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:65.0 (spuriousM:12.0,  18.5%) | ep_rewards:-0.75 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1253778 | GE:26661 | epochs:0.4  | ep_lens:22.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.19 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1254290 | GE:26670 | epochs:0.4  | ep_lens:67.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:51.0 (spuriousM:4.0 ,   7.8%) | ep_rewards:-0.74 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1254483 | GE:26674 | epochs:0.4  | ep_lens:27.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:26.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1254940 | GE:26685 | epochs:0.4  | ep_lens:62.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:49.0 (spuriousM:3.0 ,   6.1%) | ep_rewards:-0.64 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1255618 | GE:26697 | epochs:0.4  | ep_lens:67.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:56.0 (spuriousM:3.0 ,   5.4%) | ep_rewards:-0.61 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1256190 | GE:26709 | epochs:0.4  | ep_lens:53.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.47 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1256774 | GE:26724 | epochs:0.4  | ep_lens:56.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:50.0 (spuriousM:7.0 ,  14.0%) | ep_rewards:-0.43 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1257083 | GE:26731 | epochs:0.4  | ep_lens:42.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.44 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1257446 | GE:26740 | epochs:0.4  | ep_lens:58.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:51.0 (spuriousM:8.0 ,  15.7%) | ep_rewards:-0.47 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1258219 | GE:26756 | epochs:0.4  | ep_lens:80.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:72.0 (spuriousM:7.0 ,   9.7%) | ep_rewards:-0.60 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1258383 | GE:26759 | epochs:0.4  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:4.0 ,  15.4%) | ep_rewards:-0.19 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1258821 | GE:26769 | epochs:0.4  | ep_lens:70.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:54.0 (spuriousM:5.0 ,   9.3%) | ep_rewards:-0.75 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1259062 | GE:26776 | epochs:0.4  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.36 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1259295 | GE:26784 | epochs:0.4  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.22 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1259794 | GE:26793 | epochs:0.4  | ep_lens:63.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:56.0 (spuriousM:6.0 ,  10.7%) | ep_rewards:-0.49 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1260235 | GE:26803 | epochs:0.4  | ep_lens:51.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:42.0 (spuriousM:4.0 ,   9.5%) | ep_rewards:-0.48 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1260337 | GE:26806 | epochs:0.4  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1260619 | GE:26812 | epochs:0.4  | ep_lens:29.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:28.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1260806 | GE:26816 | epochs:0.4  | ep_lens:41.0 | edits:7.0  (spuriousE:6.0 ,  85.7%) | moves:34.0 (spuriousM:11.0,  32.4%) | ep_rewards:-0.34 | mean_Q:-0.00  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:1261064 | GE:26823 | epochs:0.4  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.37 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1261234 | GE:26828 | epochs:0.4  | ep_lens:33.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:27.0 (spuriousM:4.0 ,  14.8%) | ep_rewards:-0.32 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1261577 | GE:26834 | epochs:0.4  | ep_lens:44.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:40.0 (spuriousM:4.0 ,  10.0%) | ep_rewards:-0.32 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1261783 | GE:26838 | epochs:0.4  | ep_lens:40.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.35 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1261981 | GE:26844 | epochs:0.4  | ep_lens:23.0 | edits:4.0  (spuriousE:3.0 ,  75.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.78  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1262201 | GE:26848 | epochs:0.4  | ep_lens:29.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.25 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1262805 | GE:26865 | epochs:0.4  | ep_lens:68.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:58.0 (spuriousM:6.0 ,  10.3%) | ep_rewards:-0.59 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1263326 | GE:26877 | epochs:0.4  | ep_lens:58.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:52.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.44 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1263456 | GE:26880 | epochs:0.4  | ep_lens:19.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.11  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1264384 | GE:26897 | epochs:0.4  | ep_lens:96.0 | edits:19.0 (spuriousE:19.0, 100.0%) | moves:77.0 (spuriousM:14.0,  18.2%) | ep_rewards:-0.96 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1264571 | GE:26902 | epochs:0.4  | ep_lens:35.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.35 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1265443 | GE:26919 | epochs:0.4  | ep_lens:82.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:73.0 (spuriousM:8.0 ,  11.0%) | ep_rewards:-0.64 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1265834 | GE:26932 | epochs:0.4  | ep_lens:51.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.46 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1266044 | GE:26934 | epochs:0.4  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.19 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1266197 | GE:26936 | epochs:0.4  | ep_lens:20.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.10 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1266398 | GE:26944 | epochs:0.4  | ep_lens:29.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.30 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1266594 | GE:26948 | epochs:0.4  | ep_lens:29.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.25 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1266845 | GE:26954 | epochs:0.4  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:5.0 ,  19.2%) | ep_rewards:-0.19 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1267173 | GE:26960 | epochs:0.4  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.25 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1267740 | GE:26972 | epochs:0.4  | ep_lens:65.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:54.0 (spuriousM:7.0 ,  13.0%) | ep_rewards:-0.60 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1268047 | GE:26982 | epochs:0.4  | ep_lens:45.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:32.0 (spuriousM:6.0 ,  18.8%) | ep_rewards:-0.55 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1268158 | GE:26984 | epochs:0.4  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1268554 | GE:26991 | epochs:0.4  | ep_lens:49.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:40.0 (spuriousM:4.0 ,  10.0%) | ep_rewards:-0.47 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1268775 | GE:26997 | epochs:0.4  | ep_lens:38.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.34 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1268956 | GE:27002 | epochs:0.4  | ep_lens:24.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.26  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1269683 | GE:27018 | epochs:0.4  | ep_lens:80.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:68.0 (spuriousM:17.0,  25.0%) | ep_rewards:-0.70 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1269877 | GE:27022 | epochs:0.4  | ep_lens:35.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:28.0 (spuriousM:4.0 ,  14.3%) | ep_rewards:-0.35 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1270307 | GE:27031 | epochs:0.4  | ep_lens:54.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:46.0 (spuriousM:7.0 ,  15.2%) | ep_rewards:-0.47 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1271155 | GE:27055 | epochs:0.4  | ep_lens:88.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:70.0 (spuriousM:6.0 ,   8.6%) | ep_rewards:-0.89 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1271382 | GE:27060 | epochs:0.4  | ep_lens:31.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.21 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1271643 | GE:27069 | epochs:0.4  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.23 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1271846 | GE:27073 | epochs:0.4  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.33 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1272677 | GE:27095 | epochs:0.4  | ep_lens:65.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:60.0 (spuriousM:3.0 ,   5.0%) | ep_rewards:-0.45 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1272967 | GE:27102 | epochs:0.4  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.36 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1273244 | GE:27108 | epochs:0.4  | ep_lens:39.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.40 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1273592 | GE:27116 | epochs:0.4  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.32 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1274222 | GE:27135 | epochs:0.4  | ep_lens:52.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:45.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.44 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1274869 | GE:27151 | epochs:0.4  | ep_lens:88.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:76.0 (spuriousM:14.0,  18.4%) | ep_rewards:-0.74 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1274958 | GE:27153 | epochs:0.4  | ep_lens:18.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.12 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1275132 | GE:27155 | epochs:0.4  | ep_lens:26.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.18 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1275304 | GE:27160 | epochs:0.4  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.21 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1275636 | GE:27167 | epochs:0.4  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.38 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1275777 | GE:27170 | epochs:0.4  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1276003 | GE:27177 | epochs:0.4  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.29 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1276557 | GE:27189 | epochs:0.4  | ep_lens:62.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:53.0 (spuriousM:9.0 ,  17.0%) | ep_rewards:-0.54 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1276753 | GE:27195 | epochs:0.4  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.31 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1277275 | GE:27208 | epochs:0.4  | ep_lens:56.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:45.0 (spuriousM:8.0 ,  17.8%) | ep_rewards:-0.56 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1277709 | GE:27220 | epochs:0.4  | ep_lens:56.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:46.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.53 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1278119 | GE:27228 | epochs:0.4  | ep_lens:46.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.31 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1278290 | GE:27233 | epochs:0.5  | ep_lens:22.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1278482 | GE:27237 | epochs:0.5  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.22 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1279024 | GE:27249 | epochs:0.5  | ep_lens:68.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:57.0 (spuriousM:14.0,  24.6%) | ep_rewards:-0.62 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1279178 | GE:27252 | epochs:0.5  | ep_lens:23.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.10  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1279384 | GE:27257 | epochs:0.5  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.27 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1279789 | GE:27265 | epochs:0.5  | ep_lens:64.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:51.0 (spuriousM:7.0 ,  13.7%) | ep_rewards:-0.65 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1280235 | GE:27277 | epochs:0.5  | ep_lens:59.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:50.0 (spuriousM:9.0 ,  18.0%) | ep_rewards:-0.52 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1281092 | GE:27299 | epochs:0.5  | ep_lens:71.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:64.0 (spuriousM:3.0 ,   4.7%) | ep_rewards:-0.53 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1281401 | GE:27305 | epochs:0.5  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.37 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1281683 | GE:27311 | epochs:0.5  | ep_lens:30.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:29.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.82  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1281824 | GE:27316 | epochs:0.5  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.22 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1282135 | GE:27322 | epochs:0.5  | ep_lens:51.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.53 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1282320 | GE:27326 | epochs:0.5  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.22 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1282773 | GE:27334 | epochs:0.5  | ep_lens:53.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:44.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.49 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1282802 | GE:27335 | epochs:0.5  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1283445 | GE:27352 | epochs:0.5  | ep_lens:64.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:60.0 (spuriousM:8.0 ,  13.3%) | ep_rewards:-0.42 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1284138 | GE:27366 | epochs:0.5  | ep_lens:58.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:52.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.44 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1284348 | GE:27371 | epochs:0.5  | ep_lens:27.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.24 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1285132 | GE:27390 | epochs:0.5  | ep_lens:78.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:70.0 (spuriousM:3.0 ,   4.3%) | ep_rewards:-0.59 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1285858 | GE:27408 | epochs:0.5  | ep_lens:67.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:58.0 (spuriousM:5.0 ,   8.6%) | ep_rewards:-0.56 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1286148 | GE:27414 | epochs:0.5  | ep_lens:43.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.32 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1286347 | GE:27418 | epochs:0.5  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:5.0 ,  12.8%) | ep_rewards:-0.35 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1286472 | GE:27422 | epochs:0.5  | ep_lens:24.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.17 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1286661 | GE:27426 | epochs:0.5  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.21 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1286955 | GE:27433 | epochs:0.5  | ep_lens:50.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.50 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1287147 | GE:27439 | epochs:0.5  | ep_lens:24.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:20.0 (spuriousM:4.0 ,  20.0%) | ep_rewards:-0.22 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1287370 | GE:27441 | epochs:0.5  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.34 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1287711 | GE:27452 | epochs:0.5  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.33 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1288206 | GE:27463 | epochs:0.5  | ep_lens:58.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:48.0 (spuriousM:6.0 ,  12.5%) | ep_rewards:-0.54 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1288616 | GE:27473 | epochs:0.5  | ep_lens:50.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:45.0 (spuriousM:6.0 ,  13.3%) | ep_rewards:-0.38 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1289272 | GE:27489 | epochs:0.5  | ep_lens:69.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:62.0 (spuriousM:7.0 ,  11.3%) | ep_rewards:-0.52 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1289831 | GE:27504 | epochs:0.5  | ep_lens:64.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:50.0 (spuriousM:8.0 ,  16.0%) | ep_rewards:-0.67 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1289970 | GE:27506 | epochs:0.5  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.23 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1290098 | GE:27510 | epochs:0.5  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:5.0 ,  20.8%) | ep_rewards:-0.21 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1290574 | GE:27522 | epochs:0.5  | ep_lens:63.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:57.0 (spuriousM:7.0 ,  12.3%) | ep_rewards:-0.47 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1291018 | GE:27534 | epochs:0.5  | ep_lens:56.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.56 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1291387 | GE:27545 | epochs:0.5  | ep_lens:43.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:40.0 (spuriousM:4.0 ,  10.0%) | ep_rewards:-0.29 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1291661 | GE:27550 | epochs:0.5  | ep_lens:36.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.33 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1291817 | GE:27554 | epochs:0.5  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1291949 | GE:27559 | epochs:0.5  | ep_lens:22.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:5.0 ,  22.7%) | ep_rewards:-0.11 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1292640 | GE:27577 | epochs:0.5  | ep_lens:57.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:54.0 (spuriousM:2.0 ,   3.7%) | ep_rewards:-0.36 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1292753 | GE:27580 | epochs:0.5  | ep_lens:17.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:2.0 ,  11.8%) | ep_rewards:-0.09 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1292913 | GE:27583 | epochs:0.5  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.16 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1293456 | GE:27597 | epochs:0.5  | ep_lens:59.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:51.0 (spuriousM:5.0 ,   9.8%) | ep_rewards:-0.50 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1293702 | GE:27605 | epochs:0.5  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:5.0 ,  14.3%) | ep_rewards:-0.33 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1293958 | GE:27613 | epochs:0.5  | ep_lens:42.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.41 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1294094 | GE:27617 | epochs:0.5  | ep_lens:24.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.15 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1294830 | GE:27630 | epochs:0.5  | ep_lens:70.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:61.0 (spuriousM:2.0 ,   3.3%) | ep_rewards:-0.58 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1294957 | GE:27632 | epochs:0.5  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1295146 | GE:27640 | epochs:0.5  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.25 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1295973 | GE:27659 | epochs:0.5  | ep_lens:68.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:56.0 (spuriousM:4.0 ,   7.1%) | ep_rewards:-0.64 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1296258 | GE:27666 | epochs:0.5  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.29 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1297086 | GE:27685 | epochs:0.5  | ep_lens:67.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:60.0 (spuriousM:4.0 ,   6.7%) | ep_rewards:-0.51 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1297682 | GE:27696 | epochs:0.5  | ep_lens:63.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:58.0 (spuriousM:1.0 ,   1.7%) | ep_rewards:-0.44 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1298250 | GE:27709 | epochs:0.5  | ep_lens:70.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:59.0 (spuriousM:18.0,  30.5%) | ep_rewards:-0.63 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1298471 | GE:27717 | epochs:0.5  | ep_lens:28.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:27.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.20  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1298808 | GE:27722 | epochs:0.5  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.35 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1299076 | GE:27730 | epochs:0.5  | ep_lens:42.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:29.0 (spuriousM:5.0 ,  17.2%) | ep_rewards:-0.54 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1299194 | GE:27736 | epochs:0.5  | ep_lens:9.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:8.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1299464 | GE:27739 | epochs:0.5  | ep_lens:43.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.32 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1299988 | GE:27753 | epochs:0.5  | ep_lens:62.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:55.0 (spuriousM:2.0 ,   3.6%) | ep_rewards:-0.49 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1300350 | GE:27760 | epochs:0.5  | ep_lens:47.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.41 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1300935 | GE:27772 | epochs:0.5  | ep_lens:57.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:53.0 (spuriousM:4.0 ,   7.5%) | ep_rewards:-0.39 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1301100 | GE:27775 | epochs:0.5  | ep_lens:33.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.37 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1301334 | GE:27780 | epochs:0.5  | ep_lens:32.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.26 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1301505 | GE:27784 | epochs:0.5  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.31 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1301632 | GE:27786 | epochs:0.5  | ep_lens:20.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.18 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1302098 | GE:27799 | epochs:0.5  | ep_lens:63.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:50.0 (spuriousM:6.0 ,  12.0%) | ep_rewards:-0.64 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1302383 | GE:27809 | epochs:0.5  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.28 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1302518 | GE:27813 | epochs:0.5  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1303246 | GE:27824 | epochs:0.5  | ep_lens:92.0 | edits:19.0 (spuriousE:19.0, 100.0%) | moves:73.0 (spuriousM:19.0,  26.0%) | ep_rewards:-0.94 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1303619 | GE:27831 | epochs:0.5  | ep_lens:71.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:61.0 (spuriousM:6.0 ,   9.8%) | ep_rewards:-0.61 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1304374 | GE:27846 | epochs:0.5  | ep_lens:92.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:79.0 (spuriousM:4.0 ,   5.1%) | ep_rewards:-0.79 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1304815 | GE:27857 | epochs:0.5  | ep_lens:77.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:64.0 (spuriousM:14.0,  21.9%) | ep_rewards:-0.71 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1305265 | GE:27863 | epochs:0.5  | ep_lens:54.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:46.0 (spuriousM:3.0 ,   6.5%) | ep_rewards:-0.47 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1305564 | GE:27871 | epochs:0.5  | ep_lens:42.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.26 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1305789 | GE:27874 | epochs:0.5  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.23 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1306110 | GE:27883 | epochs:0.5  | ep_lens:47.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.51 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1306263 | GE:27887 | epochs:0.5  | ep_lens:23.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.14 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1306618 | GE:27897 | epochs:0.5  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.32 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1306929 | GE:27902 | epochs:0.5  | ep_lens:40.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.25 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1307115 | GE:27907 | epochs:0.5  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1307559 | GE:27917 | epochs:0.5  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.27 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1307918 | GE:27927 | epochs:0.5  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.31 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1308182 | GE:27937 | epochs:0.5  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.28 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1308311 | GE:27939 | epochs:0.5  | ep_lens:21.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.16 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1308457 | GE:27945 | epochs:0.5  | ep_lens:29.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:22.0 (spuriousM:3.0 ,  13.6%) | ep_rewards:-0.32 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1308686 | GE:27948 | epochs:0.5  | ep_lens:36.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:34.0 (spuriousM:6.0 ,  17.6%) | ep_rewards:-0.23 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1309342 | GE:27964 | epochs:0.5  | ep_lens:72.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:65.0 (spuriousM:2.0 ,   3.1%) | ep_rewards:-0.54 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1309664 | GE:27971 | epochs:0.5  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.38 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1310141 | GE:27982 | epochs:0.5  | ep_lens:52.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:46.0 (spuriousM:3.0 ,   6.5%) | ep_rewards:-0.41 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1310332 | GE:27986 | epochs:0.5  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.34 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1310441 | GE:27987 | epochs:0.5  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1310947 | GE:27997 | epochs:0.5  | ep_lens:63.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:53.0 (spuriousM:3.0 ,   5.7%) | ep_rewards:-0.57 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1311290 | GE:28003 | epochs:0.5  | ep_lens:47.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.49 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1311462 | GE:28006 | epochs:0.5  | ep_lens:29.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.20 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1311671 | GE:28012 | epochs:0.5  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:5.0 ,  19.2%) | ep_rewards:-0.22 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1312431 | GE:28030 | epochs:0.5  | ep_lens:73.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:62.0 (spuriousM:7.0 ,  11.3%) | ep_rewards:-0.64 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1312504 | GE:28032 | epochs:0.5  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.16  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1312835 | GE:28039 | epochs:0.5  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.31 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1313135 | GE:28042 | epochs:0.5  | ep_lens:49.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:46.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.32 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1313393 | GE:28051 | epochs:0.5  | ep_lens:31.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:29.0 (spuriousM:4.0 ,  13.8%) | ep_rewards:-0.21 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1313849 | GE:28060 | epochs:0.5  | ep_lens:50.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.48 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1314057 | GE:28066 | epochs:0.5  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.22 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1314240 | GE:28069 | epochs:0.5  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:8.0 ,  21.1%) | ep_rewards:-0.28 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1314569 | GE:28074 | epochs:0.5  | ep_lens:45.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.40 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1314771 | GE:28079 | epochs:0.5  | ep_lens:35.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.35 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1314952 | GE:28083 | epochs:0.5  | ep_lens:32.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.29 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1315179 | GE:28088 | epochs:0.5  | ep_lens:43.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.49 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1315492 | GE:28095 | epochs:0.5  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.34 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1315827 | GE:28103 | epochs:0.5  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:5.0 ,  11.9%) | ep_rewards:-0.39 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1316192 | GE:28108 | epochs:0.5  | ep_lens:51.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:47.0 (spuriousM:10.0,  21.3%) | ep_rewards:-0.36 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1316860 | GE:28123 | epochs:0.5  | ep_lens:78.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:63.0 (spuriousM:8.0 ,  12.7%) | ep_rewards:-0.77 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1317178 | GE:28131 | epochs:0.5  | ep_lens:29.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:28.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1317572 | GE:28139 | epochs:0.5  | ep_lens:52.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:39.0 (spuriousM:6.0 ,  15.4%) | ep_rewards:-0.59 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1317781 | GE:28143 | epochs:0.5  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.28 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1318177 | GE:28154 | epochs:0.5  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.28 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1318806 | GE:28164 | epochs:0.5  | ep_lens:65.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:57.0 (spuriousM:4.0 ,   7.0%) | ep_rewards:-0.53 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1319297 | GE:28175 | epochs:0.5  | ep_lens:70.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:61.0 (spuriousM:4.0 ,   6.6%) | ep_rewards:-0.58 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1319413 | GE:28176 | epochs:0.5  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.21  | Errs:2  | Fixes:2  (100.0%) | TF:No 
TRAIN || T:1319603 | GE:28180 | epochs:0.5  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.30 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1319846 | GE:28187 | epochs:0.5  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.26 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1320979 | GE:28207 | epochs:0.5  | ep_lens:100.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:82.0 (spuriousM:10.0,  12.2%) | ep_rewards:-0.95 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1321050 | GE:28209 | epochs:0.5  | ep_lens:13.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.14  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1321232 | GE:28213 | epochs:0.5  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.22 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1321466 | GE:28219 | epochs:0.5  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1321554 | GE:28224 | epochs:0.5  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.13  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1322267 | GE:28236 | epochs:0.5  | ep_lens:68.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:60.0 (spuriousM:3.0 ,   5.0%) | ep_rewards:-0.54 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1322484 | GE:28242 | epochs:0.5  | ep_lens:43.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.44 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1322727 | GE:28249 | epochs:0.5  | ep_lens:36.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.36 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1323498 | GE:28263 | epochs:0.5  | ep_lens:67.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:61.0 (spuriousM:1.0 ,   1.6%) | ep_rewards:-0.49 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1323772 | GE:28268 | epochs:0.5  | ep_lens:40.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:30.0 (spuriousM:5.0 ,  16.7%) | ep_rewards:-0.45 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1323998 | GE:28270 | epochs:0.5  | ep_lens:44.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.45 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1324716 | GE:28289 | epochs:0.5  | ep_lens:79.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:71.0 (spuriousM:3.0 ,   4.2%) | ep_rewards:-0.60 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1324964 | GE:28296 | epochs:0.5  | ep_lens:44.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.50 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1325445 | GE:28305 | epochs:0.5  | ep_lens:69.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:59.0 (spuriousM:4.0 ,   6.8%) | ep_rewards:-0.60 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1325881 | GE:28310 | epochs:0.5  | ep_lens:62.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:53.0 (spuriousM:5.0 ,   9.4%) | ep_rewards:-0.54 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1326433 | GE:28324 | epochs:0.5  | ep_lens:77.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:63.0 (spuriousM:9.0 ,  14.3%) | ep_rewards:-0.74 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1326797 | GE:28333 | epochs:0.5  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.27 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1327293 | GE:28342 | epochs:0.5  | ep_lens:56.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:50.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.43 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1327369 | GE:28345 | epochs:0.5  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.19  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1327630 | GE:28352 | epochs:0.5  | ep_lens:39.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.30 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1327814 | GE:28356 | epochs:0.5  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.28 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1328015 | GE:28359 | epochs:0.5  | ep_lens:36.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.38 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1328374 | GE:28368 | epochs:0.5  | ep_lens:40.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.28 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1328963 | GE:28378 | epochs:0.5  | ep_lens:60.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:51.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.53 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1329288 | GE:28389 | epochs:0.5  | ep_lens:36.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.23 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1329433 | GE:28394 | epochs:0.5  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1330234 | GE:28410 | epochs:0.5  | ep_lens:76.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:69.0 (spuriousM:7.0 ,  10.1%) | ep_rewards:-0.56 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1330467 | GE:28416 | epochs:0.5  | ep_lens:37.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.36 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1330942 | GE:28429 | epochs:0.5  | ep_lens:52.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.46 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1331021 | GE:28432 | epochs:0.5  | ep_lens:16.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:2.0 ,  12.5%) | ep_rewards:-0.08 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1331498 | GE:28443 | epochs:0.5  | ep_lens:53.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:50.0 (spuriousM:4.0 ,   8.0%) | ep_rewards:-0.34 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1332002 | GE:28456 | epochs:0.5  | ep_lens:55.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:50.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.40 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1332132 | GE:28460 | epochs:0.5  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1332439 | GE:28466 | epochs:0.5  | ep_lens:42.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.39 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1332662 | GE:28471 | epochs:0.5  | ep_lens:46.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.43 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1332944 | GE:28478 | epochs:0.5  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.27 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1333302 | GE:28487 | epochs:0.5  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.29 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1333719 | GE:28500 | epochs:0.5  | ep_lens:52.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:47.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.39 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1333866 | GE:28503 | epochs:0.5  | ep_lens:26.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.21 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1334313 | GE:28512 | epochs:0.5  | ep_lens:47.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.31 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1334520 | GE:28516 | epochs:0.5  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.25 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1334585 | GE:28518 | epochs:0.5  | ep_lens:9.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:8.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.05  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1334914 | GE:28526 | epochs:0.5  | ep_lens:49.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.42 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1335156 | GE:28533 | epochs:0.5  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.29 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1335326 | GE:28536 | epochs:0.5  | ep_lens:26.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.13 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1335719 | GE:28546 | epochs:0.5  | ep_lens:48.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.32 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1335825 | GE:28548 | epochs:0.5  | ep_lens:9.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:8.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1336261 | GE:28557 | epochs:0.5  | ep_lens:49.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:41.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.45 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1336493 | GE:28563 | epochs:0.5  | ep_lens:40.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.43 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1336871 | GE:28570 | epochs:0.5  | ep_lens:52.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:44.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.46 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1337183 | GE:28578 | epochs:0.5  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.36 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1337385 | GE:28583 | epochs:0.5  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.19 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1337742 | GE:28592 | epochs:0.5  | ep_lens:31.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:29.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.28  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1337950 | GE:28596 | epochs:0.5  | ep_lens:26.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:25.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1338772 | GE:28618 | epochs:0.5  | ep_lens:81.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:65.0 (spuriousM:3.0 ,   4.6%) | ep_rewards:-0.81 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1339066 | GE:28626 | epochs:0.5  | ep_lens:30.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:29.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.82  | mean_Q:-0.15  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1339696 | GE:28641 | epochs:0.5  | ep_lens:73.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:62.0 (spuriousM:8.0 ,  12.9%) | ep_rewards:-0.64 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1340040 | GE:28650 | epochs:0.5  | ep_lens:46.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:44.0 (spuriousM:8.0 ,  18.2%) | ep_rewards:-0.28 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1340257 | GE:28654 | epochs:0.5  | ep_lens:29.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.27 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1340744 | GE:28670 | epochs:0.5  | ep_lens:52.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:47.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.39 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1340926 | GE:28674 | epochs:0.5  | ep_lens:23.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.19 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1341159 | GE:28678 | epochs:0.5  | ep_lens:34.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.35 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1341858 | GE:28698 | epochs:0.5  | ep_lens:57.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:51.0 (spuriousM:3.0 ,   5.9%) | ep_rewards:-0.44 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1342021 | GE:28704 | epochs:0.5  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1342337 | GE:28712 | epochs:0.5  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.27 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1342536 | GE:28717 | epochs:0.5  | ep_lens:45.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.40 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1342947 | GE:28726 | epochs:0.5  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.28 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1343780 | GE:28749 | epochs:0.5  | ep_lens:74.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:60.0 (spuriousM:3.0 ,   5.0%) | ep_rewards:-0.72 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1344055 | GE:28755 | epochs:0.5  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.26 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1344147 | GE:28757 | epochs:0.5  | ep_lens:24.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.20 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1344417 | GE:28763 | epochs:0.5  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:8.0 ,  19.5%) | ep_rewards:-0.36 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1344606 | GE:28770 | epochs:0.5  | ep_lens:26.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.21 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1344952 | GE:28780 | epochs:0.5  | ep_lens:29.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:28.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.25  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1345114 | GE:28783 | epochs:0.5  | ep_lens:16.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.18  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1345854 | GE:28801 | epochs:0.5  | ep_lens:56.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:52.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.38 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1346141 | GE:28804 | epochs:0.5  | ep_lens:37.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.31 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1346906 | GE:28819 | epochs:0.5  | ep_lens:71.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:57.0 (spuriousM:3.0 ,   5.3%) | ep_rewards:-0.71 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1347368 | GE:28830 | epochs:0.5  | ep_lens:51.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:50.0 (spuriousM:3.0 ,   6.0%) | ep_rewards:-0.28 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1347543 | GE:28836 | epochs:0.5  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.21  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1347947 | GE:28846 | epochs:0.5  | ep_lens:53.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:45.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.47 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1348107 | GE:28851 | epochs:0.5  | ep_lens:24.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.09  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1348356 | GE:28855 | epochs:0.5  | ep_lens:40.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.40 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1348568 | GE:28857 | epochs:0.5  | ep_lens:46.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.53 | mean_Q:0.05   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1348969 | GE:28864 | epochs:0.5  | ep_lens:60.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:51.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.53 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1349234 | GE:28868 | epochs:0.5  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.27 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1349472 | GE:28874 | epochs:0.5  | ep_lens:39.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:37.0 (spuriousM:5.0 ,  13.5%) | ep_rewards:-0.25 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1349847 | GE:28879 | epochs:0.5  | ep_lens:52.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.49 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1350398 | GE:28889 | epochs:0.5  | ep_lens:64.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:58.0 (spuriousM:5.0 ,   8.6%) | ep_rewards:-0.47 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1350863 | GE:28901 | epochs:0.5  | ep_lens:49.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.50 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1351119 | GE:28906 | epochs:0.5  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.32 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1351574 | GE:28918 | epochs:0.5  | ep_lens:54.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:49.0 (spuriousM:4.0 ,   8.2%) | ep_rewards:-0.40 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1352313 | GE:28933 | epochs:0.5  | ep_lens:63.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:59.0 (spuriousM:8.0 ,  13.6%) | ep_rewards:-0.42 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1353003 | GE:28948 | epochs:0.5  | ep_lens:59.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.42 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1353233 | GE:28956 | epochs:0.5  | ep_lens:34.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.20 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1353501 | GE:28959 | epochs:0.5  | ep_lens:44.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.42 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1353938 | GE:28968 | epochs:0.5  | ep_lens:60.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:52.0 (spuriousM:5.0 ,   9.6%) | ep_rewards:-0.50 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1354538 | GE:28982 | epochs:0.5  | ep_lens:55.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:51.0 (spuriousM:6.0 ,  11.8%) | ep_rewards:-0.38 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1355065 | GE:28996 | epochs:0.5  | ep_lens:50.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:41.0 (spuriousM:5.0 ,  12.2%) | ep_rewards:-0.48 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1355394 | GE:29004 | epochs:0.5  | ep_lens:49.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.45 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1355597 | GE:29009 | epochs:0.5  | ep_lens:34.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:33.0 (spuriousM:6.0 ,  18.2%) | ep_rewards:-0.20 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1356378 | GE:29026 | epochs:0.5  | ep_lens:91.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:76.0 (spuriousM:14.0,  18.4%) | ep_rewards:-0.83 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1356646 | GE:29032 | epochs:0.5  | ep_lens:41.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:40.0 (spuriousM:5.0 ,  12.5%) | ep_rewards:-0.23 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1357055 | GE:29038 | epochs:0.5  | ep_lens:44.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:42.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.27 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1357382 | GE:29047 | epochs:0.5  | ep_lens:42.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.21 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1357771 | GE:29058 | epochs:0.5  | ep_lens:46.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.43 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1358538 | GE:29078 | epochs:0.5  | ep_lens:66.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:60.0 (spuriousM:10.0,  16.7%) | ep_rewards:-0.48 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1358958 | GE:29087 | epochs:0.5  | ep_lens:56.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:48.0 (spuriousM:6.0 ,  12.5%) | ep_rewards:-0.48 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1359185 | GE:29092 | epochs:0.5  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.34 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1360207 | GE:29114 | epochs:0.5  | ep_lens:85.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:74.0 (spuriousM:11.0,  14.9%) | ep_rewards:-0.70 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1360544 | GE:29119 | epochs:0.5  | ep_lens:44.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.42 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1360777 | GE:29125 | epochs:0.5  | ep_lens:30.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:29.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.82  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1360943 | GE:29127 | epochs:0.5  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.31 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1361203 | GE:29133 | epochs:0.5  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.29 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1361269 | GE:29135 | epochs:0.5  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.21  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1361337 | GE:29137 | epochs:0.5  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1361569 | GE:29142 | epochs:0.5  | ep_lens:36.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:34.0 (spuriousM:8.0 ,  23.5%) | ep_rewards:-0.23 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1361964 | GE:29153 | epochs:0.5  | ep_lens:54.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:43.0 (spuriousM:10.0,  23.3%) | ep_rewards:-0.55 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1362297 | GE:29158 | epochs:0.5  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.36 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1362550 | GE:29168 | epochs:0.5  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.30 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1362892 | GE:29177 | epochs:0.5  | ep_lens:33.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.22 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1363002 | GE:29182 | epochs:0.5  | ep_lens:10.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:9.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1363808 | GE:29200 | epochs:0.5  | ep_lens:75.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:59.0 (spuriousM:3.0 ,   5.1%) | ep_rewards:-0.78 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1364093 | GE:29209 | epochs:0.5  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.33 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1365242 | GE:29236 | epochs:0.5  | ep_lens:92.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:79.0 (spuriousM:8.0 ,  10.1%) | ep_rewards:-0.79 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1365594 | GE:29243 | epochs:0.5  | ep_lens:50.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:37.0 (spuriousM:5.0 ,  13.5%) | ep_rewards:-0.58 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1365876 | GE:29248 | epochs:0.5  | ep_lens:49.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:42.0 (spuriousM:9.0 ,  21.4%) | ep_rewards:-0.42 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1366115 | GE:29254 | epochs:0.5  | ep_lens:31.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.28 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1366614 | GE:29264 | epochs:0.5  | ep_lens:58.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:50.0 (spuriousM:6.0 ,  12.0%) | ep_rewards:-0.49 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1366723 | GE:29267 | epochs:0.5  | ep_lens:23.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:3.0 ,  13.0%) | ep_rewards:-0.12 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1366957 | GE:29272 | epochs:0.5  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.28 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1367117 | GE:29274 | epochs:0.5  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.21 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1367272 | GE:29280 | epochs:0.5  | ep_lens:29.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:22.0 (spuriousM:3.0 ,  13.6%) | ep_rewards:-0.32 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1367457 | GE:29284 | epochs:0.5  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.23  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1367640 | GE:29288 | epochs:0.5  | ep_lens:27.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:26.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1367906 | GE:29292 | epochs:0.5  | ep_lens:47.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:40.0 (spuriousM:6.0 ,  15.0%) | ep_rewards:-0.41 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1368049 | GE:29295 | epochs:0.5  | ep_lens:29.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.25 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1368248 | GE:29302 | epochs:0.5  | ep_lens:31.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:29.0 (spuriousM:5.0 ,  17.2%) | ep_rewards:-0.21 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1368548 | GE:29310 | epochs:0.5  | ep_lens:46.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.51 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1368716 | GE:29313 | epochs:0.5  | ep_lens:30.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:22.0 (spuriousM:3.0 ,  13.6%) | ep_rewards:-0.35 | mean_Q:-0.03  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1369108 | GE:29324 | epochs:0.5  | ep_lens:44.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:43.0 (spuriousM:6.0 ,  14.0%) | ep_rewards:-0.25 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1369199 | GE:29326 | epochs:0.5  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1369671 | GE:29336 | epochs:0.5  | ep_lens:67.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:51.0 (spuriousM:5.0 ,   9.8%) | ep_rewards:-0.74 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1369722 | GE:29338 | epochs:0.5  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.09  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1370211 | GE:29350 | epochs:0.5  | ep_lens:56.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.48 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1370349 | GE:29355 | epochs:0.5  | ep_lens:21.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.16 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1370580 | GE:29360 | epochs:0.5  | ep_lens:37.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.24 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1370997 | GE:29369 | epochs:0.5  | ep_lens:65.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:57.0 (spuriousM:8.0 ,  14.0%) | ep_rewards:-0.53 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1371299 | GE:29377 | epochs:0.5  | ep_lens:35.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.18 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1371415 | GE:29380 | epochs:0.5  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1371667 | GE:29387 | epochs:0.5  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:5.0 ,  21.7%) | ep_rewards:-0.18 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1372227 | GE:29401 | epochs:0.5  | ep_lens:64.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:53.0 (spuriousM:5.0 ,   9.4%) | ep_rewards:-0.60 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1372429 | GE:29405 | epochs:0.5  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.27 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1372660 | GE:29411 | epochs:0.5  | ep_lens:32.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.31 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1372773 | GE:29414 | epochs:0.5  | ep_lens:24.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:20.0 (spuriousM:3.0 ,  15.0%) | ep_rewards:-0.22 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1373015 | GE:29418 | epochs:0.5  | ep_lens:36.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.33 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1373322 | GE:29429 | epochs:0.5  | ep_lens:58.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:47.0 (spuriousM:3.0 ,   6.4%) | ep_rewards:-0.57 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1373678 | GE:29437 | epochs:0.5  | ep_lens:54.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:45.0 (spuriousM:4.0 ,   8.9%) | ep_rewards:-0.50 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1374062 | GE:29443 | epochs:0.5  | ep_lens:62.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:54.0 (spuriousM:7.0 ,  13.0%) | ep_rewards:-0.51 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1374379 | GE:29451 | epochs:0.5  | ep_lens:49.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:46.0 (spuriousM:9.0 ,  19.6%) | ep_rewards:-0.32 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1375159 | GE:29465 | epochs:0.5  | ep_lens:77.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:65.0 (spuriousM:4.0 ,   6.2%) | ep_rewards:-0.69 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1375712 | GE:29477 | epochs:0.5  | ep_lens:58.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:54.0 (spuriousM:2.0 ,   3.7%) | ep_rewards:-0.39 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1375910 | GE:29481 | epochs:0.5  | ep_lens:29.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.25 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1376594 | GE:29494 | epochs:0.5  | ep_lens:66.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.63 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1377169 | GE:29504 | epochs:0.5  | ep_lens:80.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:72.0 (spuriousM:13.0,  18.1%) | ep_rewards:-0.60 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1377455 | GE:29511 | epochs:0.5  | ep_lens:44.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.32 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1377629 | GE:29515 | epochs:0.5  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1378036 | GE:29524 | epochs:0.5  | ep_lens:55.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:52.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.35 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1378393 | GE:29531 | epochs:0.5  | ep_lens:53.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:48.0 (spuriousM:12.0,  25.0%) | ep_rewards:-0.39 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1379348 | GE:29552 | epochs:0.5  | ep_lens:75.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:69.0 (spuriousM:4.0 ,   5.8%) | ep_rewards:-0.53 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1379551 | GE:29556 | epochs:0.5  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.23 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1379772 | GE:29560 | epochs:0.5  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.31 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1380526 | GE:29577 | epochs:0.5  | ep_lens:88.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:73.0 (spuriousM:8.0 ,  11.0%) | ep_rewards:-0.82 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1380792 | GE:29581 | epochs:0.5  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.23 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1380935 | GE:29585 | epochs:0.5  | ep_lens:30.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.20 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1381498 | GE:29597 | epochs:0.5  | ep_lens:84.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:72.0 (spuriousM:12.0,  16.7%) | ep_rewards:-0.72 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1381881 | GE:29605 | epochs:0.5  | ep_lens:56.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:47.0 (spuriousM:3.0 ,   6.4%) | ep_rewards:-0.51 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1382217 | GE:29610 | epochs:0.5  | ep_lens:56.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:53.0 (spuriousM:15.0,  28.3%) | ep_rewards:-0.36 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1382455 | GE:29615 | epochs:0.5  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.29 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1382713 | GE:29620 | epochs:0.5  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.38 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1383080 | GE:29628 | epochs:0.5  | ep_lens:45.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:42.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.30 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1383404 | GE:29634 | epochs:0.5  | ep_lens:37.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.36 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1383875 | GE:29642 | epochs:0.5  | ep_lens:72.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:64.0 (spuriousM:27.0,  42.2%) | ep_rewards:-0.56 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1384200 | GE:29650 | epochs:0.5  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.36 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1384447 | GE:29654 | epochs:0.5  | ep_lens:42.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:40.0 (spuriousM:6.0 ,  15.0%) | ep_rewards:-0.26 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1384816 | GE:29664 | epochs:0.5  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.37 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1385109 | GE:29671 | epochs:0.5  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.26 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1385405 | GE:29676 | epochs:0.5  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.28 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1385617 | GE:29680 | epochs:0.5  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:5.0 ,  13.9%) | ep_rewards:-0.33 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1385755 | GE:29685 | epochs:0.5  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.17  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1386055 | GE:29689 | epochs:0.5  | ep_lens:48.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.37 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1386243 | GE:29693 | epochs:0.5  | ep_lens:24.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1386533 | GE:29700 | epochs:0.5  | ep_lens:45.0 | edits:7.0  (spuriousE:6.0 ,  85.7%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.36 | mean_Q:-0.15  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:1387100 | GE:29711 | epochs:0.5  | ep_lens:75.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:67.0 (spuriousM:9.0 ,  13.4%) | ep_rewards:-0.58 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1387190 | GE:29713 | epochs:0.5  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.08  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1387436 | GE:29718 | epochs:0.5  | ep_lens:27.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:26.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1387541 | GE:29719 | epochs:0.5  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1387764 | GE:29726 | epochs:0.5  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.31 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1388217 | GE:29737 | epochs:0.5  | ep_lens:52.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:48.0 (spuriousM:8.0 ,  16.7%) | ep_rewards:-0.36 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1388554 | GE:29743 | epochs:0.5  | ep_lens:61.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:50.0 (spuriousM:21.0,  42.0%) | ep_rewards:-0.58 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1388730 | GE:29745 | epochs:0.5  | ep_lens:31.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:29.0 (spuriousM:4.0 ,  13.8%) | ep_rewards:-0.21 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1389145 | GE:29752 | epochs:0.5  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.33 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1389342 | GE:29757 | epochs:0.5  | ep_lens:37.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.44 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1389514 | GE:29761 | epochs:0.5  | ep_lens:29.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.20 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1389833 | GE:29768 | epochs:0.5  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.27 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1390112 | GE:29772 | epochs:0.5  | ep_lens:49.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:38.0 (spuriousM:5.0 ,  13.2%) | ep_rewards:-0.52 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1390331 | GE:29779 | epochs:0.5  | ep_lens:30.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.20 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1390734 | GE:29788 | epochs:0.5  | ep_lens:52.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:46.0 (spuriousM:8.0 ,  17.4%) | ep_rewards:-0.41 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1391010 | GE:29795 | epochs:0.5  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.34 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1391105 | GE:29796 | epochs:0.5  | ep_lens:19.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:15.0 (spuriousM:3.0 ,  20.0%) | ep_rewards:-0.20 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1391354 | GE:29801 | epochs:0.5  | ep_lens:28.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.27 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1391552 | GE:29805 | epochs:0.5  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.26 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1391770 | GE:29809 | epochs:0.5  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:7.0 ,  17.5%) | ep_rewards:-0.38 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1392222 | GE:29818 | epochs:0.5  | ep_lens:44.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.27 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1392415 | GE:29822 | epochs:0.5  | ep_lens:19.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.25  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1392497 | GE:29827 | epochs:0.5  | ep_lens:17.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:16.0 (spuriousM:1.0 ,   6.2%) | ep_rewards:-0.11 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1392711 | GE:29833 | epochs:0.5  | ep_lens:31.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:29.0 (spuriousM:6.0 ,  20.7%) | ep_rewards:-0.21 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1392890 | GE:29838 | epochs:0.5  | ep_lens:39.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.40 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1393702 | GE:29852 | epochs:0.5  | ep_lens:73.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:64.0 (spuriousM:3.0 ,   4.7%) | ep_rewards:-0.59 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1394039 | GE:29861 | epochs:0.5  | ep_lens:52.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:47.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.39 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1394339 | GE:29867 | epochs:0.5  | ep_lens:43.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.32 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1394496 | GE:29869 | epochs:0.5  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.19 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1395011 | GE:29880 | epochs:0.5  | ep_lens:57.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:52.0 (spuriousM:10.0,  19.2%) | ep_rewards:-0.41 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1395523 | GE:29890 | epochs:0.5  | ep_lens:67.0 | edits:7.0  (spuriousE:6.0 ,  85.7%) | moves:60.0 (spuriousM:11.0,  18.3%) | ep_rewards:0.49  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1396183 | GE:29899 | epochs:0.5  | ep_lens:81.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:74.0 (spuriousM:6.0 ,   8.1%) | ep_rewards:-0.58 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1396242 | GE:29902 | epochs:0.5  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1396525 | GE:29910 | epochs:0.5  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.29 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1396870 | GE:29918 | epochs:0.5  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.35 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1397170 | GE:29925 | epochs:0.5  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.38 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1397477 | GE:29932 | epochs:0.5  | ep_lens:42.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.26 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1398116 | GE:29945 | epochs:0.5  | ep_lens:62.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.51 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1398346 | GE:29949 | epochs:0.5  | ep_lens:38.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.34 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1398849 | GE:29959 | epochs:0.5  | ep_lens:53.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.34 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1398971 | GE:29962 | epochs:0.5  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1399520 | GE:29971 | epochs:0.5  | ep_lens:61.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:53.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.51 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1399852 | GE:29980 | epochs:0.5  | ep_lens:45.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.43 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1400406 | GE:29993 | epochs:0.5  | ep_lens:53.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:47.0 (spuriousM:4.0 ,   8.5%) | ep_rewards:-0.42 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1400493 | GE:29996 | epochs:0.5  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.19  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1400731 | GE:30000 | epochs:0.5  | ep_lens:31.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.21 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1400889 | GE:30004 | epochs:0.5  | ep_lens:31.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.28 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1401124 | GE:30011 | epochs:0.5  | ep_lens:39.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.40 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1401403 | GE:30015 | epochs:0.5  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:4.0 ,  11.8%) | ep_rewards:-0.38 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1401581 | GE:30021 | epochs:0.5  | ep_lens:33.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.32 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1401830 | GE:30029 | epochs:0.5  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.29 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1402229 | GE:30039 | epochs:0.5  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:5.0 ,  11.6%) | ep_rewards:-0.43 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1402468 | GE:30045 | epochs:0.5  | ep_lens:37.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:35.0 (spuriousM:5.0 ,  14.3%) | ep_rewards:-0.24 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1402773 | GE:30051 | epochs:0.5  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.36 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1402871 | GE:30052 | epochs:0.5  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.17  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1403202 | GE:30060 | epochs:0.5  | ep_lens:40.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.28 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1403844 | GE:30076 | epochs:0.5  | ep_lens:74.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:56.0 (spuriousM:3.0 ,   5.4%) | ep_rewards:-0.82 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1404128 | GE:30080 | epochs:0.5  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.36 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1404425 | GE:30087 | epochs:0.5  | ep_lens:30.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.20 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1404953 | GE:30102 | epochs:0.5  | ep_lens:49.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:48.0 (spuriousM:3.0 ,   6.2%) | ep_rewards:-0.27 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1405045 | GE:30103 | epochs:0.5  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.10  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1405492 | GE:30114 | epochs:0.5  | ep_lens:53.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.49 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1405841 | GE:30123 | epochs:0.5  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.26 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1405960 | GE:30126 | epochs:0.5  | ep_lens:22.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:19.0 (spuriousM:3.0 ,  15.8%) | ep_rewards:-0.19 | mean_Q:0.01   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1406194 | GE:30134 | epochs:0.5  | ep_lens:26.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.18 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1406420 | GE:30139 | epochs:0.5  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:6.0 ,  16.7%) | ep_rewards:-0.30 | mean_Q:0.02   | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1406919 | GE:30151 | epochs:0.5  | ep_lens:61.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:54.0 (spuriousM:2.0 ,   3.7%) | ep_rewards:-0.48 | mean_Q:0.00   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1407210 | GE:30158 | epochs:0.5  | ep_lens:47.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.51 | mean_Q:-0.00  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1408086 | GE:30179 | epochs:0.5  | ep_lens:78.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:67.0 (spuriousM:4.0 ,   6.0%) | ep_rewards:-0.67 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1408343 | GE:30183 | epochs:0.5  | ep_lens:47.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:39.0 (spuriousM:11.0,  28.2%) | ep_rewards:-0.44 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1408710 | GE:30190 | epochs:0.5  | ep_lens:51.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.53 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1409671 | GE:30205 | epochs:0.5  | ep_lens:100.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:84.0 (spuriousM:4.0 ,   4.8%) | ep_rewards:-0.90 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1410056 | GE:30211 | epochs:0.5  | ep_lens:52.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:43.0 (spuriousM:6.0 ,  14.0%) | ep_rewards:-0.49 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1410234 | GE:30215 | epochs:0.5  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.22 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1410395 | GE:30219 | epochs:0.5  | ep_lens:31.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.21 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1410903 | GE:30230 | epochs:0.5  | ep_lens:59.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:49.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.55 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1411349 | GE:30242 | epochs:0.5  | ep_lens:50.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:46.0 (spuriousM:18.0,  39.1%) | ep_rewards:-0.35 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1411422 | GE:30244 | epochs:0.5  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1411771 | GE:30251 | epochs:0.5  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.37 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1411922 | GE:30257 | epochs:0.5  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.17  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1412229 | GE:30263 | epochs:0.5  | ep_lens:31.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:30.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.82  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1412382 | GE:30269 | epochs:0.5  | ep_lens:29.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.30 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1412554 | GE:30274 | epochs:0.5  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.16 | mean_Q:-0.02  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1412822 | GE:30278 | epochs:0.5  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.23 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1413097 | GE:30281 | epochs:0.5  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:7.0 ,  19.4%) | ep_rewards:-0.27 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1413404 | GE:30290 | epochs:0.5  | ep_lens:43.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.42 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1413619 | GE:30296 | epochs:0.5  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.23 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1413833 | GE:30303 | epochs:0.5  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.31 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1414481 | GE:30317 | epochs:0.5  | ep_lens:56.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.63 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1414589 | GE:30319 | epochs:0.5  | ep_lens:19.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:18.0 (spuriousM:2.0 ,  11.1%) | ep_rewards:-0.12 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1414876 | GE:30328 | epochs:0.5  | ep_lens:45.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.40 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1415184 | GE:30332 | epochs:0.5  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:5.0 ,  15.2%) | ep_rewards:-0.23 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1415601 | GE:30344 | epochs:0.5  | ep_lens:51.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:48.0 (spuriousM:2.0 ,   4.2%) | ep_rewards:-0.33 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1415893 | GE:30350 | epochs:0.5  | ep_lens:59.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:45.0 (spuriousM:5.0 ,  11.1%) | ep_rewards:-0.65 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1416338 | GE:30362 | epochs:0.5  | ep_lens:48.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.42 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1416684 | GE:30367 | epochs:0.5  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:5.0 ,  12.2%) | ep_rewards:-0.36 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1417062 | GE:30378 | epochs:0.5  | ep_lens:49.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:47.0 (spuriousM:3.0 ,   6.4%) | ep_rewards:-0.30 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1417515 | GE:30387 | epochs:0.5  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.37 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1417761 | GE:30391 | epochs:0.5  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.23 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1418335 | GE:30401 | epochs:0.5  | ep_lens:61.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:53.0 (spuriousM:5.0 ,   9.4%) | ep_rewards:-0.51 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1418685 | GE:30409 | epochs:0.5  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.34 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1419085 | GE:30416 | epochs:0.5  | ep_lens:54.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.42 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1419338 | GE:30422 | epochs:0.5  | ep_lens:36.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.21 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1419795 | GE:30430 | epochs:0.5  | ep_lens:52.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:47.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.39 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1420409 | GE:30448 | epochs:0.5  | ep_lens:63.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:54.0 (spuriousM:9.0 ,  16.7%) | ep_rewards:-0.54 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1420783 | GE:30454 | epochs:0.5  | ep_lens:43.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.32 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1420932 | GE:30458 | epochs:0.5  | ep_lens:27.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:23.0 (spuriousM:3.0 ,  13.0%) | ep_rewards:-0.24 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1421295 | GE:30470 | epochs:0.5  | ep_lens:51.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.53 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1421852 | GE:30484 | epochs:0.5  | ep_lens:60.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:54.0 (spuriousM:5.0 ,   9.3%) | ep_rewards:-0.45 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1422037 | GE:30486 | epochs:0.5  | ep_lens:27.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.24 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1422283 | GE:30492 | epochs:0.5  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.27 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1422452 | GE:30500 | epochs:0.5  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.22 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1422918 | GE:30508 | epochs:0.5  | ep_lens:57.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:48.0 (spuriousM:3.0 ,   6.2%) | ep_rewards:-0.51 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1423023 | GE:30512 | epochs:0.5  | ep_lens:23.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:21.0 (spuriousM:3.0 ,  14.3%) | ep_rewards:-0.17 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1423236 | GE:30518 | epochs:0.5  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:4.0 ,  14.8%) | ep_rewards:-0.26 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1423675 | GE:30529 | epochs:0.5  | ep_lens:44.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:37.0 (spuriousM:6.0 ,  16.2%) | ep_rewards:-0.40 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1423938 | GE:30533 | epochs:0.5  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.38 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1424387 | GE:30542 | epochs:0.5  | ep_lens:77.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:60.0 (spuriousM:5.0 ,   8.3%) | ep_rewards:-0.81 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1424633 | GE:30548 | epochs:0.5  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.34 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1424860 | GE:30551 | epochs:0.5  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.25 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1425017 | GE:30556 | epochs:0.5  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.22 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1425405 | GE:30562 | epochs:0.5  | ep_lens:60.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:53.0 (spuriousM:7.0 ,  13.2%) | ep_rewards:-0.48 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1425938 | GE:30572 | epochs:0.5  | ep_lens:84.0 | edits:20.0 (spuriousE:20.0, 100.0%) | moves:64.0 (spuriousM:11.0,  17.2%) | ep_rewards:-0.92 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1426222 | GE:30578 | epochs:0.5  | ep_lens:43.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:34.0 (spuriousM:5.0 ,  14.7%) | ep_rewards:-0.44 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1426481 | GE:30584 | epochs:0.5  | ep_lens:47.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.44 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1427005 | GE:30589 | epochs:0.5  | ep_lens:58.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:51.0 (spuriousM:6.0 ,  11.8%) | ep_rewards:-0.47 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1427232 | GE:30593 | epochs:0.5  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.37 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1427982 | GE:30605 | epochs:0.5  | ep_lens:92.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:75.0 (spuriousM:2.0 ,   2.7%) | ep_rewards:-0.89 | mean_Q:-0.34  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1428785 | GE:30617 | epochs:0.5  | ep_lens:100.0 | edits:27.0 (spuriousE:27.0, 100.0%) | moves:73.0 (spuriousM:3.0 ,   4.1%) | ep_rewards:-1.17 | mean_Q:-0.36  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1429178 | GE:30623 | epochs:0.5  | ep_lens:50.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.55 | mean_Q:-0.43  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1429406 | GE:30627 | epochs:0.5  | ep_lens:46.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:37.0 (spuriousM:9.0 ,  24.3%) | ep_rewards:-0.46 | mean_Q:-0.33  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1429623 | GE:30635 | epochs:0.5  | ep_lens:48.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:37.0 (spuriousM:5.0 ,  13.5%) | ep_rewards:-0.52 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1430095 | GE:30643 | epochs:0.5  | ep_lens:68.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:56.0 (spuriousM:7.0 ,  12.5%) | ep_rewards:-0.64 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1430485 | GE:30647 | epochs:0.5  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:5.0 ,  11.4%) | ep_rewards:-0.40 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1430852 | GE:30656 | epochs:0.5  | ep_lens:55.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:46.0 (spuriousM:6.0 ,  13.0%) | ep_rewards:-0.50 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1431045 | GE:30660 | epochs:0.5  | ep_lens:38.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.42 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1431808 | GE:30677 | epochs:0.5  | ep_lens:83.0 | edits:22.0 (spuriousE:22.0, 100.0%) | moves:61.0 (spuriousM:9.0 ,  14.8%) | ep_rewards:-0.97 | mean_Q:-0.31  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1432045 | GE:30682 | epochs:0.5  | ep_lens:35.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:34.0 (spuriousM:4.0 ,  11.8%) | ep_rewards:-0.20 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1432621 | GE:30695 | epochs:0.5  | ep_lens:51.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:44.0 (spuriousM:8.0 ,  18.2%) | ep_rewards:-0.43 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1432822 | GE:30703 | epochs:0.5  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:5.0 ,  18.5%) | ep_rewards:-0.26 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1433028 | GE:30706 | epochs:0.5  | ep_lens:36.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.36 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1433402 | GE:30715 | epochs:0.5  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:7.0 ,  18.4%) | ep_rewards:-0.37 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1433766 | GE:30724 | epochs:0.5  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:10.0,  27.0%) | ep_rewards:-0.34 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1433914 | GE:30728 | epochs:0.5  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.21  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1434309 | GE:30737 | epochs:0.5  | ep_lens:64.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:50.0 (spuriousM:18.0,  36.0%) | ep_rewards:-0.67 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1434710 | GE:30749 | epochs:0.5  | ep_lens:49.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:42.0 (spuriousM:12.0,  28.6%) | ep_rewards:-0.42 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1435059 | GE:30757 | epochs:0.5  | ep_lens:51.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:45.0 (spuriousM:11.0,  24.4%) | ep_rewards:-0.41 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1435423 | GE:30766 | epochs:0.5  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.38 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1436297 | GE:30783 | epochs:0.5  | ep_lens:91.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:76.0 (spuriousM:6.0 ,   7.9%) | ep_rewards:-0.83 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1437235 | GE:30800 | epochs:0.5  | ep_lens:94.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:79.0 (spuriousM:2.0 ,   2.5%) | ep_rewards:-0.85 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1437820 | GE:30811 | epochs:0.5  | ep_lens:72.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:57.0 (spuriousM:3.0 ,   5.3%) | ep_rewards:-0.74 | mean_Q:-0.29  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1438115 | GE:30818 | epochs:0.5  | ep_lens:29.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:28.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.35  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1438464 | GE:30824 | epochs:0.5  | ep_lens:48.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.37 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1438762 | GE:30832 | epochs:0.5  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.27 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1439462 | GE:30844 | epochs:0.5  | ep_lens:83.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:69.0 (spuriousM:8.0 ,  11.6%) | ep_rewards:-0.77 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1439587 | GE:30846 | epochs:0.5  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1440030 | GE:30857 | epochs:0.5  | ep_lens:52.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:46.0 (spuriousM:5.0 ,  10.9%) | ep_rewards:-0.41 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1440331 | GE:30866 | epochs:0.5  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.33 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1440537 | GE:30868 | epochs:0.5  | ep_lens:46.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:36.0 (spuriousM:6.0 ,  16.7%) | ep_rewards:-0.48 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1441092 | GE:30880 | epochs:0.5  | ep_lens:63.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:56.0 (spuriousM:4.0 ,   7.1%) | ep_rewards:-0.49 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1441564 | GE:30891 | epochs:0.5  | ep_lens:62.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:54.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.51 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1441653 | GE:30894 | epochs:0.5  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.13  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1441836 | GE:30899 | epochs:0.5  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:5.0 ,  17.2%) | ep_rewards:-0.27 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1442930 | GE:30918 | epochs:0.5  | ep_lens:97.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:81.0 (spuriousM:10.0,  12.3%) | ep_rewards:-0.89 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1443215 | GE:30928 | epochs:0.5  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.34 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1443634 | GE:30940 | epochs:0.5  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.36 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1444138 | GE:30950 | epochs:0.5  | ep_lens:63.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:57.0 (spuriousM:6.0 ,  10.5%) | ep_rewards:-0.47 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1444351 | GE:30957 | epochs:0.5  | ep_lens:38.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.34 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1444869 | GE:30970 | epochs:0.5  | ep_lens:67.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:57.0 (spuriousM:7.0 ,  12.3%) | ep_rewards:-0.59 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1445155 | GE:30974 | epochs:0.5  | ep_lens:32.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.19 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1445263 | GE:30978 | epochs:0.5  | ep_lens:20.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.22  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1445405 | GE:30982 | epochs:0.5  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.25  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1446029 | GE:30997 | epochs:0.5  | ep_lens:50.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:49.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.28 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1446472 | GE:31010 | epochs:0.5  | ep_lens:54.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:47.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.45 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1446964 | GE:31018 | epochs:0.5  | ep_lens:52.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:45.0 (spuriousM:5.0 ,  11.1%) | ep_rewards:-0.44 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1447311 | GE:31023 | epochs:0.5  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.35 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1447814 | GE:31031 | epochs:0.5  | ep_lens:65.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:59.0 (spuriousM:5.0 ,   8.5%) | ep_rewards:-0.48 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1448206 | GE:31040 | epochs:0.5  | ep_lens:55.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.65 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1448395 | GE:31041 | epochs:0.5  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.22 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1448547 | GE:31044 | epochs:0.5  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.23 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1449185 | GE:31059 | epochs:0.5  | ep_lens:68.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:57.0 (spuriousM:6.0 ,  10.5%) | ep_rewards:-0.62 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1449444 | GE:31062 | epochs:0.5  | ep_lens:43.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.44 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1449640 | GE:31067 | epochs:0.5  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:5.0 ,  21.7%) | ep_rewards:-0.18 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1449986 | GE:31074 | epochs:0.5  | ep_lens:50.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:42.0 (spuriousM:5.0 ,  11.9%) | ep_rewards:-0.45 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1450102 | GE:31077 | epochs:0.5  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.26  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1450321 | GE:31083 | epochs:0.5  | ep_lens:46.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:37.0 (spuriousM:6.0 ,  16.2%) | ep_rewards:-0.46 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1450878 | GE:31096 | epochs:0.5  | ep_lens:53.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:48.0 (spuriousM:3.0 ,   6.2%) | ep_rewards:-0.39 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1451435 | GE:31110 | epochs:0.5  | ep_lens:64.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:56.0 (spuriousM:2.0 ,   3.6%) | ep_rewards:-0.52 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1451927 | GE:31122 | epochs:0.5  | ep_lens:55.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.53 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1452097 | GE:31127 | epochs:0.5  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.26 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1452363 | GE:31131 | epochs:0.5  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.35 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1452456 | GE:31133 | epochs:0.5  | ep_lens:23.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:21.0 (spuriousM:4.0 ,  19.0%) | ep_rewards:-0.17 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1452827 | GE:31143 | epochs:0.5  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.43 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1453330 | GE:31154 | epochs:0.5  | ep_lens:61.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:52.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.53 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1453496 | GE:31157 | epochs:0.5  | ep_lens:26.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.23 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1453907 | GE:31169 | epochs:0.5  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.38 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1454233 | GE:31175 | epochs:0.5  | ep_lens:49.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.47 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1454567 | GE:31185 | epochs:0.5  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.38 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1454695 | GE:31190 | epochs:0.5  | ep_lens:22.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.14 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1454906 | GE:31196 | epochs:0.5  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.21 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1455249 | GE:31205 | epochs:0.5  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.31 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1455431 | GE:31207 | epochs:0.5  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.25 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1455647 | GE:31211 | epochs:0.5  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:5.0 ,  16.7%) | ep_rewards:-0.21 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1456044 | GE:31221 | epochs:0.5  | ep_lens:54.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:45.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.50 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1456289 | GE:31228 | epochs:0.5  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.27 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1456478 | GE:31235 | epochs:0.5  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.23 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1456991 | GE:31246 | epochs:0.5  | ep_lens:66.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:54.0 (spuriousM:2.0 ,   3.7%) | ep_rewards:-0.63 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1457203 | GE:31250 | epochs:0.5  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.27 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1457924 | GE:31265 | epochs:0.5  | ep_lens:69.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:59.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.60 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1458209 | GE:31273 | epochs:0.5  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.28 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1458824 | GE:31287 | epochs:0.5  | ep_lens:59.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:53.0 (spuriousM:3.0 ,   5.7%) | ep_rewards:-0.45 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1458936 | GE:31290 | epochs:0.5  | ep_lens:24.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:22.0 (spuriousM:4.0 ,  18.2%) | ep_rewards:-0.17 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1459211 | GE:31298 | epochs:0.5  | ep_lens:47.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.49 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1460097 | GE:31318 | epochs:0.5  | ep_lens:89.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:71.0 (spuriousM:8.0 ,  11.3%) | ep_rewards:-0.90 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1460301 | GE:31324 | epochs:0.5  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.23 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1461116 | GE:31345 | epochs:0.5  | ep_lens:85.0 | edits:20.0 (spuriousE:20.0, 100.0%) | moves:65.0 (spuriousM:5.0 ,   7.7%) | ep_rewards:-0.93 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1461392 | GE:31352 | epochs:0.5  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.39 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1461702 | GE:31359 | epochs:0.5  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.32 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1462125 | GE:31368 | epochs:0.5  | ep_lens:49.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:47.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.30 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1462527 | GE:31377 | epochs:0.5  | ep_lens:46.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.41 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1462743 | GE:31381 | epochs:0.5  | ep_lens:38.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:32.0 (spuriousM:7.0 ,  21.9%) | ep_rewards:-0.34 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1462981 | GE:31388 | epochs:0.5  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.31 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1463274 | GE:31390 | epochs:0.5  | ep_lens:35.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:28.0 (spuriousM:4.0 ,  14.3%) | ep_rewards:-0.35 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1463553 | GE:31399 | epochs:0.5  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.38 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1463877 | GE:31409 | epochs:0.5  | ep_lens:44.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:41.0 (spuriousM:8.0 ,  19.5%) | ep_rewards:-0.30 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1464350 | GE:31417 | epochs:0.5  | ep_lens:52.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:47.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.39 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1464740 | GE:31427 | epochs:0.5  | ep_lens:53.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:47.0 (spuriousM:7.0 ,  14.9%) | ep_rewards:-0.42 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1464972 | GE:31433 | epochs:0.5  | ep_lens:32.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.19 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1465033 | GE:31436 | epochs:0.5  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1465221 | GE:31442 | epochs:0.5  | ep_lens:37.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.31 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1465425 | GE:31447 | epochs:0.5  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:10.0,  34.5%) | ep_rewards:-0.33 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1465934 | GE:31458 | epochs:0.5  | ep_lens:68.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:63.0 (spuriousM:8.0 ,  12.7%) | ep_rewards:-0.47 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1466704 | GE:31473 | epochs:0.5  | ep_lens:86.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:71.0 (spuriousM:3.0 ,   4.2%) | ep_rewards:-0.81 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1467293 | GE:31485 | epochs:0.5  | ep_lens:76.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:62.0 (spuriousM:8.0 ,  12.9%) | ep_rewards:-0.73 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1467497 | GE:31489 | epochs:0.5  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.27 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1467828 | GE:31495 | epochs:0.5  | ep_lens:48.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.44 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1468284 | GE:31503 | epochs:0.5  | ep_lens:65.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:57.0 (spuriousM:3.0 ,   5.3%) | ep_rewards:-0.53 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1468473 | GE:31510 | epochs:0.5  | ep_lens:34.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:27.0 (spuriousM:4.0 ,  14.8%) | ep_rewards:-0.35 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1468577 | GE:31513 | epochs:0.5  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1468750 | GE:31519 | epochs:0.5  | ep_lens:30.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.30 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1469021 | GE:31525 | epochs:0.5  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:6.0 ,  17.1%) | ep_rewards:-0.33 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1469255 | GE:31528 | epochs:0.5  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.23 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1469471 | GE:31532 | epochs:0.5  | ep_lens:33.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.22 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1469979 | GE:31542 | epochs:0.5  | ep_lens:68.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:57.0 (spuriousM:5.0 ,   8.8%) | ep_rewards:-0.62 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1470211 | GE:31548 | epochs:0.5  | ep_lens:43.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.42 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1470676 | GE:31559 | epochs:0.5  | ep_lens:51.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.53 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1470735 | GE:31561 | epochs:0.5  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1471022 | GE:31568 | epochs:0.5  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.33 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1471208 | GE:31571 | epochs:0.5  | ep_lens:32.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.31 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1471525 | GE:31578 | epochs:0.5  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.23 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1472041 | GE:31587 | epochs:0.5  | ep_lens:48.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.37 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1472791 | GE:31607 | epochs:0.5  | ep_lens:66.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:57.0 (spuriousM:5.0 ,   8.8%) | ep_rewards:-0.56 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1473025 | GE:31612 | epochs:0.5  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.39 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1473402 | GE:31620 | epochs:0.5  | ep_lens:40.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.23 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1473489 | GE:31623 | epochs:0.5  | ep_lens:5.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:4.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.95  | mean_Q:-0.19  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1473639 | GE:31626 | epochs:0.5  | ep_lens:26.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.18 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1474163 | GE:31636 | epochs:0.5  | ep_lens:70.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:54.0 (spuriousM:6.0 ,  11.1%) | ep_rewards:-0.75 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1474500 | GE:31640 | epochs:0.5  | ep_lens:43.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:40.0 (spuriousM:4.0 ,  10.0%) | ep_rewards:-0.29 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1475237 | GE:31655 | epochs:0.5  | ep_lens:68.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:60.0 (spuriousM:4.0 ,   6.7%) | ep_rewards:-0.54 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1475357 | GE:31658 | epochs:0.5  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1475720 | GE:31666 | epochs:0.5  | ep_lens:46.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:39.0 (spuriousM:5.0 ,  12.8%) | ep_rewards:-0.41 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1476003 | GE:31675 | epochs:0.5  | ep_lens:31.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.18 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1476166 | GE:31679 | epochs:0.5  | ep_lens:30.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:29.0 (spuriousM:4.0 ,  13.8%) | ep_rewards:-0.18 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1476421 | GE:31685 | epochs:0.5  | ep_lens:38.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.24 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1477214 | GE:31701 | epochs:0.5  | ep_lens:72.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:67.0 (spuriousM:4.0 ,   6.0%) | ep_rewards:-0.49 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1477775 | GE:31712 | epochs:0.5  | ep_lens:58.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:53.0 (spuriousM:4.0 ,   7.5%) | ep_rewards:-0.42 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1477930 | GE:31716 | epochs:0.5  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.19 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1478105 | GE:31720 | epochs:0.5  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.21 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1478668 | GE:31733 | epochs:0.5  | ep_lens:55.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:50.0 (spuriousM:4.0 ,   8.0%) | ep_rewards:-0.40 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1478922 | GE:31736 | epochs:0.5  | ep_lens:48.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.49 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1479466 | GE:31748 | epochs:0.5  | ep_lens:67.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:57.0 (spuriousM:4.0 ,   7.0%) | ep_rewards:-0.59 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1479628 | GE:31752 | epochs:0.5  | ep_lens:29.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.30 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1480016 | GE:31761 | epochs:0.5  | ep_lens:54.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:47.0 (spuriousM:6.0 ,  12.8%) | ep_rewards:-0.45 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1480392 | GE:31768 | epochs:0.5  | ep_lens:61.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:51.0 (spuriousM:3.0 ,   5.9%) | ep_rewards:-0.56 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1481425 | GE:31792 | epochs:0.5  | ep_lens:87.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:74.0 (spuriousM:8.0 ,  10.8%) | ep_rewards:-0.76 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1481655 | GE:31796 | epochs:0.5  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1481738 | GE:31799 | epochs:0.5  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.08  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1481904 | GE:31805 | epochs:0.5  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.28 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1482205 | GE:31810 | epochs:0.5  | ep_lens:36.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.38 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1482574 | GE:31816 | epochs:0.5  | ep_lens:63.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:53.0 (spuriousM:14.0,  26.4%) | ep_rewards:-0.57 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1482771 | GE:31821 | epochs:0.5  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:4.0 ,  16.7%) | ep_rewards:-0.21 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1483170 | GE:31829 | epochs:0.5  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.37 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1483865 | GE:31844 | epochs:0.5  | ep_lens:80.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:69.0 (spuriousM:4.0 ,   5.8%) | ep_rewards:-0.68 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1484048 | GE:31848 | epochs:0.5  | ep_lens:38.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.39 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1484231 | GE:31852 | epochs:0.5  | ep_lens:39.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.40 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1484453 | GE:31856 | epochs:0.5  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.28 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1484889 | GE:31867 | epochs:0.5  | ep_lens:58.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:56.0 (spuriousM:3.0 ,   5.4%) | ep_rewards:-0.34 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1485145 | GE:31873 | epochs:0.5  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.24 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1485390 | GE:31878 | epochs:0.5  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:6.0 ,  16.2%) | ep_rewards:-0.34 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1485652 | GE:31885 | epochs:0.5  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.21 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1486406 | GE:31899 | epochs:0.5  | ep_lens:67.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:59.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.54 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1486928 | GE:31909 | epochs:0.5  | ep_lens:50.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.45 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1487390 | GE:31923 | epochs:0.5  | ep_lens:50.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:45.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.38 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1487726 | GE:31930 | epochs:0.5  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:6.0 ,  15.8%) | ep_rewards:-0.31 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1487809 | GE:31934 | epochs:0.5  | ep_lens:19.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.15 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1488055 | GE:31938 | epochs:0.5  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.36 | mean_Q:-0.02  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1488541 | GE:31951 | epochs:0.5  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.39 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1488744 | GE:31957 | epochs:0.5  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:6.0 ,  18.2%) | ep_rewards:-0.29 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1489047 | GE:31964 | epochs:0.5  | ep_lens:41.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.26 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1489137 | GE:31969 | epochs:0.5  | ep_lens:10.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:9.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1489514 | GE:31975 | epochs:0.5  | ep_lens:57.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:49.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.49 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1489623 | GE:31978 | epochs:0.5  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1489716 | GE:31980 | epochs:0.5  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.02  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1490076 | GE:31990 | epochs:0.5  | ep_lens:52.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.46 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1490522 | GE:32000 | epochs:0.5  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.40 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1490606 | GE:32003 | epochs:0.5  | ep_lens:14.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:0.07   | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1490883 | GE:32010 | epochs:0.5  | ep_lens:44.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:40.0 (spuriousM:6.0 ,  15.0%) | ep_rewards:-0.32 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1491197 | GE:32018 | epochs:0.5  | ep_lens:44.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:37.0 (spuriousM:6.0 ,  16.2%) | ep_rewards:-0.40 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1491455 | GE:32028 | epochs:0.5  | ep_lens:31.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.18 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1491971 | GE:32040 | epochs:0.5  | ep_lens:59.0 | edits:10.0 (spuriousE:9.0 ,  90.0%) | moves:49.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.51 | mean_Q:-0.18  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:1492696 | GE:32058 | epochs:0.5  | ep_lens:60.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:55.0 (spuriousM:2.0 ,   3.6%) | ep_rewards:-0.43 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1493143 | GE:32070 | epochs:0.5  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.35 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1493398 | GE:32074 | epochs:0.5  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:6.0 ,  18.2%) | ep_rewards:-0.32 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1493601 | GE:32080 | epochs:0.5  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.18 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1494288 | GE:32099 | epochs:0.5  | ep_lens:54.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:46.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.47 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1494777 | GE:32110 | epochs:0.5  | ep_lens:62.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:55.0 (spuriousM:9.0 ,  16.4%) | ep_rewards:-0.49 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1495012 | GE:32114 | epochs:0.5  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.28 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1495220 | GE:32118 | epochs:0.5  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:5.0 ,  19.2%) | ep_rewards:-0.25 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1495599 | GE:32127 | epochs:0.5  | ep_lens:49.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:46.0 (spuriousM:6.0 ,  13.0%) | ep_rewards:-0.32 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1495688 | GE:32131 | epochs:0.5  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1495739 | GE:32134 | epochs:0.5  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.13  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1496001 | GE:32141 | epochs:0.5  | ep_lens:47.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.49 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1496566 | GE:32154 | epochs:0.5  | ep_lens:67.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:56.0 (spuriousM:2.0 ,   3.6%) | ep_rewards:-0.61 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1497023 | GE:32166 | epochs:0.5  | ep_lens:55.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:48.0 (spuriousM:5.0 ,  10.4%) | ep_rewards:-0.45 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1497340 | GE:32175 | epochs:0.5  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.37 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1497604 | GE:32179 | epochs:0.5  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.31 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1497840 | GE:32184 | epochs:0.5  | ep_lens:45.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.43 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1498164 | GE:32192 | epochs:0.5  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.27 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1498561 | GE:32201 | epochs:0.5  | ep_lens:45.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.40 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1498758 | GE:32205 | epochs:0.5  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.21 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1499199 | GE:32216 | epochs:0.5  | ep_lens:51.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:46.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.38 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1499268 | GE:32221 | epochs:0.5  | ep_lens:10.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:9.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1499458 | GE:32223 | epochs:0.5  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:6.0 ,  18.8%) | ep_rewards:-0.37 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1499777 | GE:32228 | epochs:0.5  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.39 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1500355 | GE:32241 | epochs:0.5  | ep_lens:64.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:50.0 (spuriousM:4.0 ,   8.0%) | ep_rewards:-0.67 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1500646 | GE:32247 | epochs:0.5  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.31 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1500968 | GE:32256 | epochs:0.5  | ep_lens:46.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.48 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1501294 | GE:32262 | epochs:0.5  | ep_lens:45.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.45 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1501405 | GE:32266 | epochs:0.5  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.16  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1501604 | GE:32270 | epochs:0.5  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.24 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1502125 | GE:32284 | epochs:0.5  | ep_lens:53.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:49.0 (spuriousM:2.0 ,   4.1%) | ep_rewards:-0.37 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1502306 | GE:32289 | epochs:0.5  | ep_lens:24.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.13  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1502368 | GE:32290 | epochs:0.5  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1502464 | GE:32293 | epochs:0.5  | ep_lens:19.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.10 | mean_Q:0.01   | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1502611 | GE:32297 | epochs:0.5  | ep_lens:25.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:21.0 (spuriousM:4.0 ,  19.0%) | ep_rewards:-0.23 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1502903 | GE:32302 | epochs:0.5  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.26 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1503094 | GE:32306 | epochs:0.5  | ep_lens:32.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.34 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1503410 | GE:32314 | epochs:0.5  | ep_lens:46.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.41 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1503807 | GE:32322 | epochs:0.5  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:8.0 ,  16.0%) | ep_rewards:-0.46 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1503915 | GE:32325 | epochs:0.5  | ep_lens:24.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:21.0 (spuriousM:3.0 ,  14.3%) | ep_rewards:-0.20 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1504877 | GE:32345 | epochs:0.5  | ep_lens:95.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:82.0 (spuriousM:18.0,  22.0%) | ep_rewards:-0.80 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1505158 | GE:32352 | epochs:0.5  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.29 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1505314 | GE:32354 | epochs:0.5  | ep_lens:30.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:25.0 (spuriousM:4.0 ,  16.0%) | ep_rewards:-0.28 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1505455 | GE:32357 | epochs:0.5  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1506208 | GE:32377 | epochs:0.5  | ep_lens:70.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:58.0 (spuriousM:1.0 ,   1.7%) | ep_rewards:-0.65 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1506287 | GE:32380 | epochs:0.5  | ep_lens:20.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:18.0 (spuriousM:1.0 ,   5.6%) | ep_rewards:-0.15 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1506720 | GE:32388 | epochs:0.5  | ep_lens:47.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:46.0 (spuriousM:3.0 ,   6.5%) | ep_rewards:-0.26 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1507189 | GE:32400 | epochs:0.5  | ep_lens:51.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.41 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1507589 | GE:32407 | epochs:0.5  | ep_lens:52.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.54 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1507823 | GE:32413 | epochs:0.5  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.28 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1508085 | GE:32419 | epochs:0.5  | ep_lens:30.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.18 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1508696 | GE:32431 | epochs:0.5  | ep_lens:69.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:59.0 (spuriousM:6.0 ,  10.2%) | ep_rewards:-0.60 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1509583 | GE:32449 | epochs:0.5  | ep_lens:83.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:75.0 (spuriousM:4.0 ,   5.3%) | ep_rewards:-0.62 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1509709 | GE:32450 | epochs:0.5  | ep_lens:22.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.15  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1510180 | GE:32459 | epochs:0.5  | ep_lens:67.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:59.0 (spuriousM:11.0,  18.6%) | ep_rewards:-0.54 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1510470 | GE:32465 | epochs:0.5  | ep_lens:43.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.44 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1510717 | GE:32472 | epochs:0.5  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.33 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1510955 | GE:32474 | epochs:0.5  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.21 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1511179 | GE:32479 | epochs:0.5  | ep_lens:33.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.32 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1511424 | GE:32488 | epochs:0.5  | ep_lens:42.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.39 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1511981 | GE:32497 | epochs:0.5  | ep_lens:61.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:51.0 (spuriousM:7.0 ,  13.7%) | ep_rewards:-0.56 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1512764 | GE:32511 | epochs:0.5  | ep_lens:89.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:78.0 (spuriousM:5.0 ,   6.4%) | ep_rewards:-0.72 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1513375 | GE:32525 | epochs:0.5  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:5.0 ,  11.6%) | ep_rewards:-0.43 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1513476 | GE:32530 | epochs:0.5  | ep_lens:10.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:9.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.23  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1514379 | GE:32547 | epochs:0.5  | ep_lens:100.0 | edits:26.0 (spuriousE:26.0, 100.0%) | moves:74.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:-1.15 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1514556 | GE:32551 | epochs:0.5  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.24 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1515188 | GE:32559 | epochs:0.5  | ep_lens:67.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:60.0 (spuriousM:2.0 ,   3.3%) | ep_rewards:-0.51 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1515399 | GE:32567 | epochs:0.5  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.36 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1515522 | GE:32572 | epochs:0.5  | ep_lens:20.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.12 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1515718 | GE:32577 | epochs:0.5  | ep_lens:26.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.31 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1515908 | GE:32582 | epochs:0.5  | ep_lens:31.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.21 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1516532 | GE:32592 | epochs:0.5  | ep_lens:77.0 | edits:20.0 (spuriousE:20.0, 100.0%) | moves:57.0 (spuriousM:6.0 ,  10.5%) | ep_rewards:-0.89 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1516594 | GE:32595 | epochs:0.5  | ep_lens:9.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:8.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1516864 | GE:32601 | epochs:0.5  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.27 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1517163 | GE:32609 | epochs:0.5  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.36 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1517324 | GE:32613 | epochs:0.5  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.28 | mean_Q:-0.01  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1517654 | GE:32618 | epochs:0.5  | ep_lens:65.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:51.0 (spuriousM:6.0 ,  11.8%) | ep_rewards:-0.68 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1517945 | GE:32625 | epochs:0.5  | ep_lens:54.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:45.0 (spuriousM:10.0,  22.2%) | ep_rewards:-0.50 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1518103 | GE:32629 | epochs:0.5  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.22 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1518230 | GE:32631 | epochs:0.5  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.18  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1519049 | GE:32648 | epochs:0.5  | ep_lens:89.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:72.0 (spuriousM:5.0 ,   6.9%) | ep_rewards:-0.87 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1519720 | GE:32661 | epochs:0.5  | ep_lens:77.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:67.0 (spuriousM:1.0 ,   1.5%) | ep_rewards:-0.64 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1520052 | GE:32670 | epochs:0.5  | ep_lens:50.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.53 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1520250 | GE:32673 | epochs:0.5  | ep_lens:42.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:40.0 (spuriousM:9.0 ,  22.5%) | ep_rewards:-0.26 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1520864 | GE:32687 | epochs:0.5  | ep_lens:66.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:60.0 (spuriousM:2.0 ,   3.3%) | ep_rewards:-0.48 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1521530 | GE:32701 | epochs:0.5  | ep_lens:62.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:51.0 (spuriousM:10.0,  19.6%) | ep_rewards:-0.59 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1521996 | GE:32713 | epochs:0.5  | ep_lens:60.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.75 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1522195 | GE:32717 | epochs:0.5  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.24 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1522480 | GE:32719 | epochs:0.5  | ep_lens:39.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.35 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1522903 | GE:32733 | epochs:0.5  | ep_lens:50.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:46.0 (spuriousM:3.0 ,   6.5%) | ep_rewards:-0.35 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1523230 | GE:32739 | epochs:0.5  | ep_lens:49.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.62 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1523756 | GE:32751 | epochs:0.5  | ep_lens:65.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.75 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1524094 | GE:32761 | epochs:0.5  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.28 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1524406 | GE:32769 | epochs:0.5  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.36 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1524508 | GE:32772 | epochs:0.5  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1524820 | GE:32780 | epochs:0.5  | ep_lens:47.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:40.0 (spuriousM:6.0 ,  15.0%) | ep_rewards:-0.41 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1525139 | GE:32788 | epochs:0.5  | ep_lens:38.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.24 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1525319 | GE:32790 | epochs:0.5  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.21 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1525518 | GE:32797 | epochs:0.5  | ep_lens:26.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.28 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1525670 | GE:32801 | epochs:0.5  | ep_lens:29.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.25 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1525772 | GE:32803 | epochs:0.5  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.16  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1526037 | GE:32810 | epochs:0.5  | ep_lens:33.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.32 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1526356 | GE:32817 | epochs:0.5  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.33 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1526546 | GE:32822 | epochs:0.5  | ep_lens:36.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.33 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1526637 | GE:32824 | epochs:0.5  | ep_lens:21.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.11 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1526781 | GE:32828 | epochs:0.5  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1526993 | GE:32835 | epochs:0.5  | ep_lens:25.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.19  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1527122 | GE:32839 | epochs:0.5  | ep_lens:23.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.12 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1527242 | GE:32840 | epochs:0.5  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1527347 | GE:32843 | epochs:0.5  | ep_lens:23.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.14 | mean_Q:-0.01  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1527467 | GE:32847 | epochs:0.5  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.18 | mean_Q:-0.00  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1527894 | GE:32857 | epochs:0.5  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.28 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1528133 | GE:32865 | epochs:0.5  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.26 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1528237 | GE:32869 | epochs:0.5  | ep_lens:18.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.12 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1528518 | GE:32876 | epochs:0.5  | ep_lens:43.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.32 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1529067 | GE:32885 | epochs:0.5  | ep_lens:50.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:45.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.38 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1529543 | GE:32897 | epochs:0.5  | ep_lens:59.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:49.0 (spuriousM:2.0 ,   4.1%) | ep_rewards:-0.55 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1529750 | GE:32901 | epochs:0.5  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1530221 | GE:32911 | epochs:0.5  | ep_lens:60.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:50.0 (spuriousM:6.0 ,  12.0%) | ep_rewards:-0.55 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1531095 | GE:32930 | epochs:0.5  | ep_lens:83.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:78.0 (spuriousM:6.0 ,   7.7%) | ep_rewards:-0.54 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1531637 | GE:32940 | epochs:0.5  | ep_lens:53.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:50.0 (spuriousM:4.0 ,   8.0%) | ep_rewards:-0.34 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1531964 | GE:32946 | epochs:0.5  | ep_lens:38.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:36.0 (spuriousM:7.0 ,  19.4%) | ep_rewards:-0.24 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1532408 | GE:32956 | epochs:0.5  | ep_lens:68.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:61.0 (spuriousM:11.0,  18.0%) | ep_rewards:-0.52 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1532747 | GE:32962 | epochs:0.5  | ep_lens:50.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.48 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1533007 | GE:32970 | epochs:0.5  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:4.0 ,  11.8%) | ep_rewards:-0.26 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1533226 | GE:32975 | epochs:0.5  | ep_lens:37.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.36 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1533347 | GE:32979 | epochs:0.5  | ep_lens:21.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.13 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1533636 | GE:32986 | epochs:0.5  | ep_lens:26.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:25.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1533953 | GE:32994 | epochs:0.5  | ep_lens:48.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.44 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1534361 | GE:33003 | epochs:0.5  | ep_lens:47.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.34 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1534749 | GE:33010 | epochs:0.5  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.23 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1535245 | GE:33025 | epochs:0.5  | ep_lens:58.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:51.0 (spuriousM:6.0 ,  11.8%) | ep_rewards:-0.47 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1535589 | GE:33033 | epochs:0.5  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.33 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1535751 | GE:33037 | epochs:0.5  | ep_lens:26.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:24.0 (spuriousM:4.0 ,  16.7%) | ep_rewards:-0.18 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1536309 | GE:33048 | epochs:0.5  | ep_lens:64.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:60.0 (spuriousM:1.0 ,   1.7%) | ep_rewards:-0.42 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1536755 | GE:33061 | epochs:0.5  | ep_lens:51.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.43 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1537245 | GE:33072 | epochs:0.5  | ep_lens:58.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.59 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1537532 | GE:33076 | epochs:0.5  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.32 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1537737 | GE:33080 | epochs:0.5  | ep_lens:25.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.15 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1538402 | GE:33096 | epochs:0.5  | ep_lens:53.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:49.0 (spuriousM:2.0 ,   4.1%) | ep_rewards:-0.37 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1539294 | GE:33115 | epochs:0.5  | ep_lens:77.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:67.0 (spuriousM:4.0 ,   6.0%) | ep_rewards:-0.64 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1539712 | GE:33124 | epochs:0.5  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:6.0 ,  13.6%) | ep_rewards:-0.40 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1539998 | GE:33133 | epochs:0.5  | ep_lens:34.0 | edits:7.0  (spuriousE:5.0 ,  71.4%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:0.69  | mean_Q:-0.24  | Errs:2  | Fixes:2  (100.0%) | TF:No 
TRAIN || T:1540104 | GE:33136 | epochs:0.5  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.13  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1540469 | GE:33144 | epochs:0.5  | ep_lens:53.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.49 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1541115 | GE:33158 | epochs:0.5  | ep_lens:63.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:55.0 (spuriousM:8.0 ,  14.5%) | ep_rewards:-0.52 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1541400 | GE:33163 | epochs:0.5  | ep_lens:41.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.23 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1541673 | GE:33168 | epochs:0.5  | ep_lens:39.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.30 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1541733 | GE:33171 | epochs:0.5  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.04  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1541981 | GE:33176 | epochs:0.5  | ep_lens:43.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.32 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1542586 | GE:33185 | epochs:0.5  | ep_lens:72.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:60.0 (spuriousM:3.0 ,   5.0%) | ep_rewards:-0.66 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1543409 | GE:33204 | epochs:0.5  | ep_lens:83.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:72.0 (spuriousM:2.0 ,   2.8%) | ep_rewards:-0.69 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1543634 | GE:33208 | epochs:0.5  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.21 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1543802 | GE:33211 | epochs:0.5  | ep_lens:34.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.22 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1544029 | GE:33218 | epochs:0.5  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:8.0 ,  21.6%) | ep_rewards:-0.31 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1544146 | GE:33219 | epochs:0.5  | ep_lens:22.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.16 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1544237 | GE:33221 | epochs:0.5  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1544679 | GE:33231 | epochs:0.5  | ep_lens:71.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:59.0 (spuriousM:4.0 ,   6.8%) | ep_rewards:-0.66 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1545297 | GE:33242 | epochs:0.5  | ep_lens:83.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:70.0 (spuriousM:10.0,  14.3%) | ep_rewards:-0.74 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1545577 | GE:33249 | epochs:0.5  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.33 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1546075 | GE:33261 | epochs:0.5  | ep_lens:62.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:50.0 (spuriousM:4.0 ,   8.0%) | ep_rewards:-0.61 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1546315 | GE:33265 | epochs:0.5  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:7.0 ,  19.4%) | ep_rewards:-0.33 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1546712 | GE:33273 | epochs:0.5  | ep_lens:52.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:45.0 (spuriousM:8.0 ,  17.8%) | ep_rewards:-0.44 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1547292 | GE:33288 | epochs:0.6  | ep_lens:53.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:51.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.32 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1547486 | GE:33292 | epochs:0.6  | ep_lens:29.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.27 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1547800 | GE:33298 | epochs:0.6  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.29 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1548090 | GE:33305 | epochs:0.6  | ep_lens:43.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.29 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1548262 | GE:33309 | epochs:0.6  | ep_lens:27.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:21.0 (spuriousM:3.0 ,  14.3%) | ep_rewards:-0.29 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1548371 | GE:33314 | epochs:0.6  | ep_lens:24.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.22 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1548675 | GE:33322 | epochs:0.6  | ep_lens:44.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.42 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1549207 | GE:33332 | epochs:0.6  | ep_lens:69.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:60.0 (spuriousM:7.0 ,  11.7%) | ep_rewards:-0.57 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1549517 | GE:33339 | epochs:0.6  | ep_lens:51.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:45.0 (spuriousM:10.0,  22.2%) | ep_rewards:-0.41 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1550629 | GE:33365 | epochs:0.6  | ep_lens:97.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:85.0 (spuriousM:8.0 ,   9.4%) | ep_rewards:-0.79 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1550868 | GE:33370 | epochs:0.6  | ep_lens:43.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.44 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1551240 | GE:33378 | epochs:0.6  | ep_lens:53.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:44.0 (spuriousM:11.0,  25.0%) | ep_rewards:-0.49 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1551397 | GE:33384 | epochs:0.6  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:5.0 ,  21.7%) | ep_rewards:-0.18 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1551834 | GE:33392 | epochs:0.6  | ep_lens:52.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.46 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1552131 | GE:33401 | epochs:0.6  | ep_lens:30.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:29.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.82  | mean_Q:-0.24  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1552394 | GE:33406 | epochs:0.6  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:6.0 ,  15.4%) | ep_rewards:-0.29 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1552692 | GE:33412 | epochs:0.6  | ep_lens:44.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:40.0 (spuriousM:4.0 ,  10.0%) | ep_rewards:-0.32 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1552818 | GE:33416 | epochs:0.6  | ep_lens:23.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:22.0 (spuriousM:3.0 ,  13.6%) | ep_rewards:-0.14 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1553034 | GE:33421 | epochs:0.6  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:8.0 ,  29.6%) | ep_rewards:-0.26 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1553262 | GE:33427 | epochs:0.6  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:7.0 ,  21.9%) | ep_rewards:-0.25 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1553434 | GE:33429 | epochs:0.6  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.34 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1553720 | GE:33435 | epochs:0.6  | ep_lens:39.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.22 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1555039 | GE:33468 | epochs:0.6  | ep_lens:100.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:86.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:-0.85 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1555728 | GE:33482 | epochs:0.6  | ep_lens:56.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:52.0 (spuriousM:7.0 ,  13.5%) | ep_rewards:-0.38 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1555991 | GE:33487 | epochs:0.6  | ep_lens:29.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.17 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1556150 | GE:33492 | epochs:0.6  | ep_lens:24.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.12 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1556425 | GE:33498 | epochs:0.6  | ep_lens:39.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.40 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1557060 | GE:33514 | epochs:0.6  | ep_lens:68.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:60.0 (spuriousM:5.0 ,   8.3%) | ep_rewards:-0.54 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1557348 | GE:33521 | epochs:0.6  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.37 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1558167 | GE:33539 | epochs:0.6  | ep_lens:63.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:52.0 (spuriousM:12.0,  23.1%) | ep_rewards:-0.59 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1558542 | GE:33547 | epochs:0.6  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:8.0 ,  20.5%) | ep_rewards:-0.38 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1558687 | GE:33551 | epochs:0.6  | ep_lens:30.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:21.0 (spuriousM:4.0 ,  19.0%) | ep_rewards:-0.38 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1558907 | GE:33554 | epochs:0.6  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.27 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1559229 | GE:33562 | epochs:0.6  | ep_lens:59.0 | edits:6.0  (spuriousE:5.0 ,  83.3%) | moves:53.0 (spuriousM:6.0 ,  11.3%) | ep_rewards:-0.41 | mean_Q:-0.18  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:1559426 | GE:33564 | epochs:0.6  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.26  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1559845 | GE:33568 | epochs:0.6  | ep_lens:68.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.69 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1560098 | GE:33578 | epochs:0.6  | ep_lens:38.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.24 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1560445 | GE:33582 | epochs:0.6  | ep_lens:49.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.40 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1560541 | GE:33584 | epochs:0.6  | ep_lens:24.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.22 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1561347 | GE:33601 | epochs:0.6  | ep_lens:89.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:73.0 (spuriousM:4.0 ,   5.5%) | ep_rewards:-0.85 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1561723 | GE:33607 | epochs:0.6  | ep_lens:83.0 | edits:19.0 (spuriousE:19.0, 100.0%) | moves:64.0 (spuriousM:13.0,  20.3%) | ep_rewards:-0.89 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1562135 | GE:33613 | epochs:0.6  | ep_lens:60.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:54.0 (spuriousM:2.0 ,   3.7%) | ep_rewards:-0.45 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1562468 | GE:33619 | epochs:0.6  | ep_lens:40.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.28 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1562882 | GE:33628 | epochs:0.6  | ep_lens:51.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.51 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1563188 | GE:33634 | epochs:0.6  | ep_lens:47.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.39 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1563453 | GE:33639 | epochs:0.6  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:7.0 ,  20.0%) | ep_rewards:-0.33 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1563582 | GE:33642 | epochs:0.6  | ep_lens:21.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.11 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1563776 | GE:33648 | epochs:0.6  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.23 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1564110 | GE:33656 | epochs:0.6  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.34 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1564386 | GE:33663 | epochs:0.6  | ep_lens:47.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.44 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1565489 | GE:33684 | epochs:0.6  | ep_lens:91.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:80.0 (spuriousM:2.0 ,   2.5%) | ep_rewards:-0.73 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1565750 | GE:33688 | epochs:0.6  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.33 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1566006 | GE:33697 | epochs:0.6  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.23  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1566501 | GE:33708 | epochs:0.6  | ep_lens:52.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:47.0 (spuriousM:3.0 ,   6.4%) | ep_rewards:-0.39 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1566811 | GE:33715 | epochs:0.6  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.34 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1566958 | GE:33719 | epochs:0.6  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.22 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1567175 | GE:33725 | epochs:0.6  | ep_lens:34.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.22 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1567255 | GE:33727 | epochs:0.6  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.13  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1567794 | GE:33737 | epochs:0.6  | ep_lens:53.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:47.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.42 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1568177 | GE:33746 | epochs:0.6  | ep_lens:58.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:47.0 (spuriousM:3.0 ,   6.4%) | ep_rewards:-0.57 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1568255 | GE:33749 | epochs:0.6  | ep_lens:19.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.10 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1569060 | GE:33767 | epochs:0.6  | ep_lens:73.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:63.0 (spuriousM:6.0 ,   9.5%) | ep_rewards:-0.62 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1569897 | GE:33787 | epochs:0.6  | ep_lens:81.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:66.0 (spuriousM:3.0 ,   4.5%) | ep_rewards:-0.78 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1570220 | GE:33794 | epochs:0.6  | ep_lens:47.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:43.0 (spuriousM:5.0 ,  11.6%) | ep_rewards:-0.34 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1570511 | GE:33800 | epochs:0.6  | ep_lens:47.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:43.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.34 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1570658 | GE:33805 | epochs:0.6  | ep_lens:26.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.31 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1570831 | GE:33809 | epochs:0.6  | ep_lens:30.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:25.0 (spuriousM:4.0 ,  16.0%) | ep_rewards:-0.28 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1571328 | GE:33820 | epochs:0.6  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.40 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1571652 | GE:33828 | epochs:0.6  | ep_lens:45.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:42.0 (spuriousM:11.0,  26.2%) | ep_rewards:-0.30 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1571897 | GE:33831 | epochs:0.6  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.23 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1572076 | GE:33837 | epochs:0.6  | ep_lens:27.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.16 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1572228 | GE:33840 | epochs:0.6  | ep_lens:26.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.26 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1572601 | GE:33850 | epochs:0.6  | ep_lens:39.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.30 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1573199 | GE:33867 | epochs:0.6  | ep_lens:70.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:62.0 (spuriousM:3.0 ,   4.8%) | ep_rewards:-0.55 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1573583 | GE:33876 | epochs:0.6  | ep_lens:47.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:45.0 (spuriousM:5.0 ,  11.1%) | ep_rewards:-0.29 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1574357 | GE:33894 | epochs:0.6  | ep_lens:73.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:65.0 (spuriousM:3.0 ,   4.6%) | ep_rewards:-0.57 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1574897 | GE:33908 | epochs:0.6  | ep_lens:63.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:57.0 (spuriousM:9.0 ,  15.8%) | ep_rewards:-0.47 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1575088 | GE:33912 | epochs:0.6  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:4.0 ,  16.0%) | ep_rewards:-0.16 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1575573 | GE:33924 | epochs:0.6  | ep_lens:58.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:48.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.54 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1575885 | GE:33933 | epochs:0.6  | ep_lens:36.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:34.0 (spuriousM:4.0 ,  11.8%) | ep_rewards:-0.23 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1576064 | GE:33935 | epochs:0.6  | ep_lens:26.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.23 | mean_Q:0.01   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1576198 | GE:33941 | epochs:0.6  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.18 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1576551 | GE:33949 | epochs:0.6  | ep_lens:42.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.26 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1576844 | GE:33956 | epochs:0.6  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:6.0 ,  17.1%) | ep_rewards:-0.33 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1577074 | GE:33962 | epochs:0.6  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.33 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1577356 | GE:33965 | epochs:0.6  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.37 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1578541 | GE:33995 | epochs:0.6  | ep_lens:100.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:93.0 (spuriousM:5.0 ,   5.4%) | ep_rewards:-0.68 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1578742 | GE:33999 | epochs:0.6  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.31 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1579269 | GE:34014 | epochs:0.6  | ep_lens:52.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:47.0 (spuriousM:5.0 ,  10.6%) | ep_rewards:-0.39 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1579463 | GE:34020 | epochs:0.6  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:7.0 ,  26.9%) | ep_rewards:-0.25 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1580044 | GE:34034 | epochs:0.6  | ep_lens:57.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:48.0 (spuriousM:6.0 ,  12.5%) | ep_rewards:-0.51 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1580488 | GE:34042 | epochs:0.6  | ep_lens:53.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:46.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.44 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1580668 | GE:34048 | epochs:0.6  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.22 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1581202 | GE:34061 | epochs:0.6  | ep_lens:61.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:50.0 (spuriousM:6.0 ,  12.0%) | ep_rewards:-0.58 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1581407 | GE:34069 | epochs:0.6  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:4.0 ,  18.2%) | ep_rewards:-0.20 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1581917 | GE:34081 | epochs:0.6  | ep_lens:54.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:46.0 (spuriousM:3.0 ,   6.5%) | ep_rewards:-0.47 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1582057 | GE:34085 | epochs:0.6  | ep_lens:17.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:16.0 (spuriousM:2.0 ,  12.5%) | ep_rewards:-0.11 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1582402 | GE:34092 | epochs:0.6  | ep_lens:46.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.53 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1582864 | GE:34101 | epochs:0.6  | ep_lens:61.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:53.0 (spuriousM:3.0 ,   5.7%) | ep_rewards:-0.51 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1583592 | GE:34119 | epochs:0.6  | ep_lens:92.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:80.0 (spuriousM:18.0,  22.5%) | ep_rewards:-0.76 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1584000 | GE:34128 | epochs:0.6  | ep_lens:48.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:44.0 (spuriousM:6.0 ,  13.6%) | ep_rewards:-0.34 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1584322 | GE:34135 | epochs:0.6  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.33 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1584804 | GE:34150 | epochs:0.6  | ep_lens:61.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:52.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.53 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1585020 | GE:34154 | epochs:0.6  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.23 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1585312 | GE:34163 | epochs:0.6  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.37 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1585609 | GE:34170 | epochs:0.6  | ep_lens:40.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.35 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1586030 | GE:34182 | epochs:0.6  | ep_lens:59.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:51.0 (spuriousM:5.0 ,   9.8%) | ep_rewards:-0.50 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1586301 | GE:34189 | epochs:0.6  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.33 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1586483 | GE:34196 | epochs:0.6  | ep_lens:16.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.14  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1587227 | GE:34209 | epochs:0.6  | ep_lens:68.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:58.0 (spuriousM:1.0 ,   1.7%) | ep_rewards:-0.59 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1587354 | GE:34214 | epochs:0.6  | ep_lens:24.0 | edits:4.0  (spuriousE:3.0 ,  75.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:0.78  | mean_Q:-0.05  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1588247 | GE:34233 | epochs:0.6  | ep_lens:79.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:74.0 (spuriousM:3.0 ,   4.1%) | ep_rewards:-0.52 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1588490 | GE:34237 | epochs:0.6  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.37 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1588818 | GE:34244 | epochs:0.6  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.38 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1589108 | GE:34251 | epochs:0.6  | ep_lens:48.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.49 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1589289 | GE:34254 | epochs:0.6  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.24 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1589376 | GE:34255 | epochs:0.6  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1589584 | GE:34259 | epochs:0.6  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:7.0 ,  25.9%) | ep_rewards:-0.26 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1590776 | GE:34286 | epochs:0.6  | ep_lens:97.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:83.0 (spuriousM:2.0 ,   2.4%) | ep_rewards:-0.84 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1591227 | GE:34297 | epochs:0.6  | ep_lens:49.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:46.0 (spuriousM:3.0 ,   6.5%) | ep_rewards:-0.32 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1591729 | GE:34308 | epochs:0.6  | ep_lens:56.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:50.0 (spuriousM:3.0 ,   6.0%) | ep_rewards:-0.43 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1592273 | GE:34325 | epochs:0.6  | ep_lens:58.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:51.0 (spuriousM:2.0 ,   3.9%) | ep_rewards:-0.47 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1592412 | GE:34330 | epochs:0.6  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:4.0 ,  18.2%) | ep_rewards:-0.20 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1592574 | GE:34333 | epochs:0.6  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.20  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1592776 | GE:34336 | epochs:0.6  | ep_lens:26.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:25.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1592864 | GE:34340 | epochs:0.6  | ep_lens:20.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:16.0 (spuriousM:2.0 ,  12.5%) | ep_rewards:-0.20 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1593295 | GE:34350 | epochs:0.6  | ep_lens:44.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:40.0 (spuriousM:4.0 ,  10.0%) | ep_rewards:-0.32 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1593574 | GE:34354 | epochs:0.6  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.24 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1593771 | GE:34360 | epochs:0.6  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.23 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1593939 | GE:34364 | epochs:0.6  | ep_lens:32.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.29 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1594345 | GE:34376 | epochs:0.6  | ep_lens:50.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.30 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1595008 | GE:34391 | epochs:0.6  | ep_lens:59.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:52.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.47 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1595482 | GE:34401 | epochs:0.6  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.46 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1595722 | GE:34403 | epochs:0.6  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.26 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1596110 | GE:34413 | epochs:0.6  | ep_lens:55.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:51.0 (spuriousM:17.0,  33.3%) | ep_rewards:-0.38 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1596314 | GE:34418 | epochs:0.6  | ep_lens:39.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.35 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1596674 | GE:34427 | epochs:0.6  | ep_lens:52.0 | edits:4.0  (spuriousE:3.0 ,  75.0%) | moves:48.0 (spuriousM:6.0 ,  12.5%) | ep_rewards:-0.32 | mean_Q:-0.16  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:1596788 | GE:34430 | epochs:0.6  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.08  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1597434 | GE:34445 | epochs:0.6  | ep_lens:84.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:72.0 (spuriousM:11.0,  15.3%) | ep_rewards:-0.72 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1597877 | GE:34454 | epochs:0.6  | ep_lens:47.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:40.0 (spuriousM:7.0 ,  17.5%) | ep_rewards:-0.41 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1598372 | GE:34466 | epochs:0.6  | ep_lens:61.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:57.0 (spuriousM:2.0 ,   3.5%) | ep_rewards:-0.41 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1598555 | GE:34469 | epochs:0.6  | ep_lens:24.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.20 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1598753 | GE:34474 | epochs:0.6  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.26 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1598921 | GE:34478 | epochs:0.6  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.28 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1599026 | GE:34480 | epochs:0.6  | ep_lens:23.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.17 | mean_Q:0.01   | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1599743 | GE:34495 | epochs:0.6  | ep_lens:68.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:56.0 (spuriousM:2.0 ,   3.6%) | ep_rewards:-0.64 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1600223 | GE:34503 | epochs:0.6  | ep_lens:67.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:58.0 (spuriousM:5.0 ,   8.6%) | ep_rewards:-0.56 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1600706 | GE:34516 | epochs:0.6  | ep_lens:60.0 | edits:9.0  (spuriousE:8.0 ,  88.9%) | moves:51.0 (spuriousM:3.0 ,   5.9%) | ep_rewards:0.47  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1600996 | GE:34524 | epochs:0.6  | ep_lens:36.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.33 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1601429 | GE:34533 | epochs:0.6  | ep_lens:47.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:44.0 (spuriousM:5.0 ,  11.4%) | ep_rewards:-0.31 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1601773 | GE:34542 | epochs:0.6  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.26 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1602024 | GE:34546 | epochs:0.6  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.27 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1602154 | GE:34552 | epochs:0.6  | ep_lens:21.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.16 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1602863 | GE:34562 | epochs:0.6  | ep_lens:67.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:61.0 (spuriousM:1.0 ,   1.6%) | ep_rewards:-0.49 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1602957 | GE:34565 | epochs:0.6  | ep_lens:23.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:18.0 (spuriousM:1.0 ,   5.6%) | ep_rewards:-0.24 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1603433 | GE:34576 | epochs:0.6  | ep_lens:57.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:52.0 (spuriousM:4.0 ,   7.7%) | ep_rewards:-0.41 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1603747 | GE:34585 | epochs:0.6  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.38 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1604314 | GE:34597 | epochs:0.6  | ep_lens:50.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.38 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1604742 | GE:34604 | epochs:0.6  | ep_lens:63.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:51.0 (spuriousM:7.0 ,  13.7%) | ep_rewards:-0.62 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1604983 | GE:34608 | epochs:0.6  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.26 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1605264 | GE:34614 | epochs:0.6  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.34 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1605587 | GE:34622 | epochs:0.6  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.36 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1605972 | GE:34631 | epochs:0.6  | ep_lens:31.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:30.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.82  | mean_Q:-0.23  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1606078 | GE:34632 | epochs:0.6  | ep_lens:17.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:15.0 (spuriousM:1.0 ,   6.7%) | ep_rewards:-0.14 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1606572 | GE:34642 | epochs:0.6  | ep_lens:53.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.47 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1607019 | GE:34651 | epochs:0.6  | ep_lens:65.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:51.0 (spuriousM:8.0 ,  15.7%) | ep_rewards:-0.68 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1607170 | GE:34655 | epochs:0.6  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.19 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1607472 | GE:34661 | epochs:0.6  | ep_lens:36.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.23 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1607726 | GE:34666 | epochs:0.6  | ep_lens:44.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.40 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1608383 | GE:34677 | epochs:0.6  | ep_lens:60.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:52.0 (spuriousM:8.0 ,  15.4%) | ep_rewards:-0.50 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1608478 | GE:34681 | epochs:0.6  | ep_lens:22.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.16 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1609168 | GE:34694 | epochs:0.6  | ep_lens:73.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:61.0 (spuriousM:4.0 ,   6.6%) | ep_rewards:-0.67 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1609333 | GE:34700 | epochs:0.6  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.27 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1609608 | GE:34704 | epochs:0.6  | ep_lens:48.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:36.0 (spuriousM:6.0 ,  16.7%) | ep_rewards:-0.54 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1609860 | GE:34710 | epochs:0.6  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.23 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1610343 | GE:34723 | epochs:0.6  | ep_lens:65.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:61.0 (spuriousM:6.0 ,   9.8%) | ep_rewards:-0.43 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1611038 | GE:34739 | epochs:0.6  | ep_lens:75.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:62.0 (spuriousM:6.0 ,   9.7%) | ep_rewards:-0.70 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1611340 | GE:34747 | epochs:0.6  | ep_lens:46.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.31 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1612326 | GE:34766 | epochs:0.6  | ep_lens:79.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:63.0 (spuriousM:8.0 ,  12.7%) | ep_rewards:-0.80 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1612789 | GE:34774 | epochs:0.6  | ep_lens:53.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:47.0 (spuriousM:6.0 ,  12.8%) | ep_rewards:-0.42 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1613450 | GE:34792 | epochs:0.6  | ep_lens:57.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:47.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.54 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1613590 | GE:34796 | epochs:0.6  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.19  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1614118 | GE:34808 | epochs:0.6  | ep_lens:51.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.53 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1614450 | GE:34815 | epochs:0.6  | ep_lens:46.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.43 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1614702 | GE:34821 | epochs:0.6  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.24 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1614804 | GE:34825 | epochs:0.6  | ep_lens:19.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:3.0 ,  15.8%) | ep_rewards:-0.10 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1614997 | GE:34829 | epochs:0.6  | ep_lens:28.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.29 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1615692 | GE:34844 | epochs:0.6  | ep_lens:72.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:60.0 (spuriousM:4.0 ,   6.7%) | ep_rewards:-0.66 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1616139 | GE:34853 | epochs:0.6  | ep_lens:64.0 | edits:19.0 (spuriousE:19.0, 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.80 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1616261 | GE:34858 | epochs:0.6  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1616548 | GE:34865 | epochs:0.6  | ep_lens:39.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.40 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1616718 | GE:34869 | epochs:0.6  | ep_lens:26.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.28 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1616878 | GE:34874 | epochs:0.6  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:4.0 ,  16.0%) | ep_rewards:-0.22 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1617104 | GE:34879 | epochs:0.6  | ep_lens:29.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.27 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1617517 | GE:34889 | epochs:0.6  | ep_lens:66.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:49.0 (spuriousM:2.0 ,   4.1%) | ep_rewards:-0.76 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1617637 | GE:34895 | epochs:0.6  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1617988 | GE:34903 | epochs:0.6  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.39 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1618312 | GE:34911 | epochs:0.6  | ep_lens:34.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.22 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1618613 | GE:34915 | epochs:0.6  | ep_lens:49.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.40 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1619067 | GE:34928 | epochs:0.6  | ep_lens:56.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:50.0 (spuriousM:3.0 ,   6.0%) | ep_rewards:-0.43 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1619511 | GE:34940 | epochs:0.6  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:6.0 ,  12.0%) | ep_rewards:-0.46 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1619840 | GE:34947 | epochs:0.6  | ep_lens:59.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:46.0 (spuriousM:3.0 ,   6.5%) | ep_rewards:-0.62 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1620076 | GE:34953 | epochs:0.6  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.36 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1620669 | GE:34967 | epochs:0.6  | ep_lens:52.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:48.0 (spuriousM:6.0 ,  12.5%) | ep_rewards:-0.36 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1621058 | GE:34975 | epochs:0.6  | ep_lens:51.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:44.0 (spuriousM:7.0 ,  15.9%) | ep_rewards:-0.43 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1621247 | GE:34980 | epochs:0.6  | ep_lens:36.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.23 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1621499 | GE:34984 | epochs:0.6  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.36 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1621746 | GE:34989 | epochs:0.6  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.33 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1622251 | GE:35004 | epochs:0.6  | ep_lens:63.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:50.0 (spuriousM:10.0,  20.0%) | ep_rewards:-0.64 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1623015 | GE:35019 | epochs:0.6  | ep_lens:76.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:65.0 (spuriousM:9.0 ,  13.8%) | ep_rewards:-0.66 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1623144 | GE:35023 | epochs:0.6  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1623560 | GE:35033 | epochs:0.6  | ep_lens:59.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:54.0 (spuriousM:13.0,  24.1%) | ep_rewards:-0.42 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1623808 | GE:35039 | epochs:0.6  | ep_lens:50.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.60 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1624403 | GE:35048 | epochs:0.6  | ep_lens:75.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:61.0 (spuriousM:10.0,  16.4%) | ep_rewards:-0.73 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1624833 | GE:35058 | epochs:0.6  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.37 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1626026 | GE:35082 | epochs:0.6  | ep_lens:100.0 | edits:10.0 (spuriousE:9.0 ,  90.0%) | moves:90.0 (spuriousM:9.0 ,  10.0%) | ep_rewards:-0.71 | mean_Q:-0.28  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:1626608 | GE:35091 | epochs:0.6  | ep_lens:74.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:63.0 (spuriousM:6.0 ,   9.5%) | ep_rewards:-0.65 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1626852 | GE:35096 | epochs:0.6  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.30 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1627184 | GE:35107 | epochs:0.6  | ep_lens:48.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:43.0 (spuriousM:4.0 ,   9.3%) | ep_rewards:-0.37 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1627452 | GE:35114 | epochs:0.6  | ep_lens:32.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.31 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1628252 | GE:35136 | epochs:0.6  | ep_lens:80.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:65.0 (spuriousM:11.0,  16.9%) | ep_rewards:-0.78 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1628801 | GE:35149 | epochs:0.6  | ep_lens:62.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:55.0 (spuriousM:5.0 ,   9.1%) | ep_rewards:-0.49 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1628959 | GE:35153 | epochs:0.6  | ep_lens:27.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:22.0 (spuriousM:4.0 ,  18.2%) | ep_rewards:-0.26 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1629361 | GE:35163 | epochs:0.6  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.28 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1629568 | GE:35167 | epochs:0.6  | ep_lens:33.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.22 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1629775 | GE:35172 | epochs:0.6  | ep_lens:22.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.27  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1630146 | GE:35179 | epochs:0.6  | ep_lens:63.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:53.0 (spuriousM:13.0,  24.5%) | ep_rewards:-0.57 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1630501 | GE:35188 | epochs:0.6  | ep_lens:40.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.28 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1630911 | GE:35198 | epochs:0.6  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.35 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1631021 | GE:35201 | epochs:0.6  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1631347 | GE:35211 | epochs:0.6  | ep_lens:45.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:42.0 (spuriousM:5.0 ,  11.9%) | ep_rewards:-0.30 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1632009 | GE:35223 | epochs:0.6  | ep_lens:63.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:57.0 (spuriousM:2.0 ,   3.5%) | ep_rewards:-0.47 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1632292 | GE:35230 | epochs:0.6  | ep_lens:47.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:39.0 (spuriousM:5.0 ,  12.8%) | ep_rewards:-0.44 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1632520 | GE:35234 | epochs:0.6  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.24 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1632993 | GE:35245 | epochs:0.6  | ep_lens:61.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:54.0 (spuriousM:2.0 ,   3.7%) | ep_rewards:-0.48 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1633265 | GE:35252 | epochs:0.6  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.37 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1633580 | GE:35258 | epochs:0.6  | ep_lens:34.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.32 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1633713 | GE:35265 | epochs:0.6  | ep_lens:22.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.14 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1634025 | GE:35272 | epochs:0.6  | ep_lens:33.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.22 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1634432 | GE:35284 | epochs:0.6  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.40 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1635136 | GE:35300 | epochs:0.6  | ep_lens:68.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:63.0 (spuriousM:7.0 ,  11.1%) | ep_rewards:-0.47 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1635262 | GE:35304 | epochs:0.6  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.08  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1635659 | GE:35315 | epochs:0.6  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.35 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1636368 | GE:35334 | epochs:0.6  | ep_lens:70.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:64.0 (spuriousM:5.0 ,   7.8%) | ep_rewards:-0.50 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1636631 | GE:35340 | epochs:0.6  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.28 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1636835 | GE:35345 | epochs:0.6  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.24 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1636923 | GE:35349 | epochs:0.6  | ep_lens:17.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.08  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1637395 | GE:35360 | epochs:0.6  | ep_lens:62.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:54.0 (spuriousM:8.0 ,  14.8%) | ep_rewards:-0.51 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1637547 | GE:35364 | epochs:0.6  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.20 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1638162 | GE:35379 | epochs:0.6  | ep_lens:71.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:63.0 (spuriousM:2.0 ,   3.2%) | ep_rewards:-0.56 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1638385 | GE:35383 | epochs:0.6  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:5.0 ,  16.7%) | ep_rewards:-0.30 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1638483 | GE:35385 | epochs:0.6  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1638971 | GE:35400 | epochs:0.6  | ep_lens:40.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.23 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1639562 | GE:35411 | epochs:0.6  | ep_lens:62.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:54.0 (spuriousM:5.0 ,   9.3%) | ep_rewards:-0.51 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1639782 | GE:35417 | epochs:0.6  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:6.0 ,  19.4%) | ep_rewards:-0.31 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1639954 | GE:35423 | epochs:0.6  | ep_lens:26.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.18 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1640235 | GE:35428 | epochs:0.6  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.29 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1640429 | GE:35435 | epochs:0.6  | ep_lens:28.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:23.0 (spuriousM:6.0 ,  26.1%) | ep_rewards:-0.27 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1640708 | GE:35445 | epochs:0.6  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.38 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1640988 | GE:35451 | epochs:0.6  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.28 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1641361 | GE:35460 | epochs:0.6  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:4.0 ,   9.5%) | ep_rewards:-0.39 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1641607 | GE:35466 | epochs:0.6  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.28 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1642007 | GE:35476 | epochs:0.6  | ep_lens:56.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:46.0 (spuriousM:6.0 ,  13.0%) | ep_rewards:-0.53 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1642258 | GE:35481 | epochs:0.6  | ep_lens:34.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.32 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1642529 | GE:35489 | epochs:0.6  | ep_lens:42.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.26 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1642734 | GE:35491 | epochs:0.6  | ep_lens:26.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.13 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1642828 | GE:35492 | epochs:0.6  | ep_lens:21.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:20.0 (spuriousM:3.0 ,  15.0%) | ep_rewards:-0.13 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1643192 | GE:35506 | epochs:0.6  | ep_lens:56.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:51.0 (spuriousM:16.0,  31.4%) | ep_rewards:-0.41 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1643516 | GE:35515 | epochs:0.6  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.36 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1643654 | GE:35516 | epochs:0.6  | ep_lens:23.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.19 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1644383 | GE:35532 | epochs:0.6  | ep_lens:76.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:67.0 (spuriousM:4.0 ,   6.0%) | ep_rewards:-0.61 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1644690 | GE:35540 | epochs:0.6  | ep_lens:33.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.22 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1644852 | GE:35548 | epochs:0.6  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.19  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1645081 | GE:35552 | epochs:0.6  | ep_lens:39.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:33.0 (spuriousM:8.0 ,  24.2%) | ep_rewards:-0.35 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1645360 | GE:35558 | epochs:0.6  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.28 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1645464 | GE:35563 | epochs:0.6  | ep_lens:22.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.16 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1645575 | GE:35564 | epochs:0.6  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1645892 | GE:35573 | epochs:0.6  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.38 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1646201 | GE:35582 | epochs:0.6  | ep_lens:42.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.44 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1646402 | GE:35584 | epochs:0.6  | ep_lens:31.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:26.0 (spuriousM:5.0 ,  19.2%) | ep_rewards:-0.28 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1647136 | GE:35602 | epochs:0.6  | ep_lens:59.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:52.0 (spuriousM:4.0 ,   7.7%) | ep_rewards:-0.47 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1647206 | GE:35605 | epochs:0.6  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1648081 | GE:35623 | epochs:0.6  | ep_lens:73.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:70.0 (spuriousM:6.0 ,   8.6%) | ep_rewards:-0.44 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1648516 | GE:35637 | epochs:0.6  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.28 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1648903 | GE:35644 | epochs:0.6  | ep_lens:48.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.44 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1649068 | GE:35648 | epochs:0.6  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.23  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1649206 | GE:35651 | epochs:0.6  | ep_lens:29.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.27 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1649344 | GE:35654 | epochs:0.6  | ep_lens:23.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.16  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1649599 | GE:35664 | epochs:0.6  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.38 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1649731 | GE:35666 | epochs:0.6  | ep_lens:20.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:19.0 (spuriousM:3.0 ,  15.8%) | ep_rewards:-0.12 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1649800 | GE:35667 | epochs:0.6  | ep_lens:9.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:8.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1649921 | GE:35672 | epochs:0.6  | ep_lens:24.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.20 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1650748 | GE:35685 | epochs:0.6  | ep_lens:81.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:70.0 (spuriousM:7.0 ,  10.0%) | ep_rewards:-0.68 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1650870 | GE:35691 | epochs:0.6  | ep_lens:22.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.13  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1651042 | GE:35695 | epochs:0.6  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:4.0 ,  15.4%) | ep_rewards:-0.19 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1651415 | GE:35700 | epochs:0.6  | ep_lens:51.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:45.0 (spuriousM:9.0 ,  20.0%) | ep_rewards:-0.41 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1651915 | GE:35714 | epochs:0.6  | ep_lens:54.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:42.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.57 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1652070 | GE:35718 | epochs:0.6  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.20 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1652284 | GE:35722 | epochs:0.6  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.21 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1652479 | GE:35729 | epochs:0.6  | ep_lens:33.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:26.0 (spuriousM:4.0 ,  15.4%) | ep_rewards:-0.34 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1652733 | GE:35732 | epochs:0.6  | ep_lens:39.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.25 | mean_Q:-0.03  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1652949 | GE:35737 | epochs:0.6  | ep_lens:30.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.18 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1653618 | GE:35755 | epochs:0.6  | ep_lens:74.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:61.0 (spuriousM:2.0 ,   3.3%) | ep_rewards:-0.70 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1653898 | GE:35761 | epochs:0.6  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.34 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1654292 | GE:35770 | epochs:0.6  | ep_lens:33.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:31.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.82  | mean_Q:-0.14  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1654864 | GE:35785 | epochs:0.6  | ep_lens:56.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:43.0 (spuriousM:12.0,  27.9%) | ep_rewards:-0.61 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1655488 | GE:35797 | epochs:0.6  | ep_lens:48.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.34 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1656124 | GE:35811 | epochs:0.6  | ep_lens:75.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:63.0 (spuriousM:2.0 ,   3.2%) | ep_rewards:-0.68 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1656344 | GE:35816 | epochs:0.6  | ep_lens:31.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:26.0 (spuriousM:5.0 ,  19.2%) | ep_rewards:-0.28 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1656553 | GE:35819 | epochs:0.6  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:9.0 ,  29.0%) | ep_rewards:-0.37 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1656917 | GE:35827 | epochs:0.6  | ep_lens:56.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:49.0 (spuriousM:9.0 ,  18.4%) | ep_rewards:-0.46 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1657160 | GE:35833 | epochs:0.6  | ep_lens:32.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.31 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1657480 | GE:35838 | epochs:0.6  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.32 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1657529 | GE:35839 | epochs:0.6  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1658234 | GE:35855 | epochs:0.6  | ep_lens:77.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:69.0 (spuriousM:14.0,  20.3%) | ep_rewards:-0.59 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1659322 | GE:35876 | epochs:0.6  | ep_lens:100.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:86.0 (spuriousM:9.0 ,  10.5%) | ep_rewards:-0.85 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1659779 | GE:35886 | epochs:0.6  | ep_lens:49.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:47.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.30 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1660115 | GE:35895 | epochs:0.6  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:5.0 ,  16.7%) | ep_rewards:-0.27 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1660326 | GE:35901 | epochs:0.6  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.21 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1660396 | GE:35902 | epochs:0.6  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.07  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1660697 | GE:35909 | epochs:0.6  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.26 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1660757 | GE:35912 | epochs:0.6  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.10  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1660887 | GE:35917 | epochs:0.6  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1661407 | GE:35925 | epochs:0.6  | ep_lens:61.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:56.0 (spuriousM:15.0,  26.8%) | ep_rewards:-0.43 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1661632 | GE:35933 | epochs:0.6  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.23 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1662203 | GE:35947 | epochs:0.6  | ep_lens:63.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:52.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.59 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1662380 | GE:35948 | epochs:0.6  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.37 | mean_Q:-0.00  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1662755 | GE:35955 | epochs:0.6  | ep_lens:55.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:43.0 (spuriousM:8.0 ,  18.6%) | ep_rewards:-0.58 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1663356 | GE:35968 | epochs:0.6  | ep_lens:57.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:49.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.49 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1663660 | GE:35974 | epochs:0.6  | ep_lens:37.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.21 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1664723 | GE:35999 | epochs:0.6  | ep_lens:86.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:72.0 (spuriousM:5.0 ,   6.9%) | ep_rewards:-0.78 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1665463 | GE:36017 | epochs:0.6  | ep_lens:72.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:57.0 (spuriousM:5.0 ,   8.8%) | ep_rewards:-0.74 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1665578 | GE:36018 | epochs:0.6  | ep_lens:18.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:17.0 (spuriousM:6.0 ,  35.3%) | ep_rewards:-0.12 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1665757 | GE:36023 | epochs:0.6  | ep_lens:32.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.19 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1666845 | GE:36052 | epochs:0.6  | ep_lens:81.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:73.0 (spuriousM:7.0 ,   9.6%) | ep_rewards:-0.61 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1667175 | GE:36060 | epochs:0.6  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.31 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1667349 | GE:36064 | epochs:0.6  | ep_lens:26.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:22.0 (spuriousM:4.0 ,  18.2%) | ep_rewards:-0.23 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1667767 | GE:36073 | epochs:0.6  | ep_lens:54.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:44.0 (spuriousM:5.0 ,  11.4%) | ep_rewards:-0.52 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1667854 | GE:36075 | epochs:0.6  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.07  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1667952 | GE:36076 | epochs:0.6  | ep_lens:18.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:17.0 (spuriousM:2.0 ,  11.8%) | ep_rewards:-0.12 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1668155 | GE:36082 | epochs:0.6  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.19 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1668384 | GE:36087 | epochs:0.6  | ep_lens:32.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.26 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1668773 | GE:36096 | epochs:0.6  | ep_lens:57.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:49.0 (spuriousM:9.0 ,  18.4%) | ep_rewards:-0.49 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1669118 | GE:36104 | epochs:0.6  | ep_lens:47.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:45.0 (spuriousM:8.0 ,  17.8%) | ep_rewards:-0.29 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1669271 | GE:36107 | epochs:0.6  | ep_lens:23.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.19 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1669871 | GE:36122 | epochs:0.6  | ep_lens:66.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:55.0 (spuriousM:2.0 ,   3.6%) | ep_rewards:-0.61 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1670214 | GE:36127 | epochs:0.6  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.36 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1670525 | GE:36134 | epochs:0.6  | ep_lens:45.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.43 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1670693 | GE:36143 | epochs:0.6  | ep_lens:29.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.30 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1671051 | GE:36147 | epochs:0.6  | ep_lens:56.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:47.0 (spuriousM:7.0 ,  14.9%) | ep_rewards:-0.51 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1671390 | GE:36157 | epochs:0.6  | ep_lens:54.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:44.0 (spuriousM:9.0 ,  20.5%) | ep_rewards:-0.52 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1671769 | GE:36165 | epochs:0.6  | ep_lens:49.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:45.0 (spuriousM:4.0 ,   8.9%) | ep_rewards:-0.35 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1672465 | GE:36178 | epochs:0.6  | ep_lens:66.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:58.0 (spuriousM:7.0 ,  12.1%) | ep_rewards:-0.53 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1673061 | GE:36192 | epochs:0.6  | ep_lens:68.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:58.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.59 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1673267 | GE:36197 | epochs:0.6  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.28 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1673523 | GE:36204 | epochs:0.6  | ep_lens:37.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.36 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1673713 | GE:36208 | epochs:0.6  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.27 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1673929 | GE:36216 | epochs:0.6  | ep_lens:32.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.26 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1674007 | GE:36218 | epochs:0.6  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.07  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1675100 | GE:36243 | epochs:0.6  | ep_lens:81.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:68.0 (spuriousM:3.0 ,   4.4%) | ep_rewards:-0.73 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1675989 | GE:36266 | epochs:0.6  | ep_lens:73.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:65.0 (spuriousM:3.0 ,   4.6%) | ep_rewards:-0.57 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1676583 | GE:36281 | epochs:0.6  | ep_lens:56.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:47.0 (spuriousM:6.0 ,  12.8%) | ep_rewards:-0.51 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1676931 | GE:36291 | epochs:0.6  | ep_lens:49.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.47 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1677305 | GE:36298 | epochs:0.6  | ep_lens:47.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.49 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1677870 | GE:36310 | epochs:0.6  | ep_lens:73.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:60.0 (spuriousM:6.0 ,  10.0%) | ep_rewards:-0.69 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1678143 | GE:36314 | epochs:0.6  | ep_lens:34.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.35 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1678753 | GE:36330 | epochs:0.6  | ep_lens:68.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:57.0 (spuriousM:7.0 ,  12.3%) | ep_rewards:-0.62 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1679077 | GE:36336 | epochs:0.6  | ep_lens:41.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.23 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1679335 | GE:36343 | epochs:0.6  | ep_lens:42.0 | edits:3.0  (spuriousE:2.0 ,  66.7%) | moves:39.0 (spuriousM:5.0 ,  12.8%) | ep_rewards:-0.25 | mean_Q:-0.15  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:1679853 | GE:36353 | epochs:0.6  | ep_lens:59.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:50.0 (spuriousM:3.0 ,   6.0%) | ep_rewards:-0.52 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1680043 | GE:36359 | epochs:0.6  | ep_lens:24.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.21  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1680247 | GE:36362 | epochs:0.6  | ep_lens:34.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.35 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1680667 | GE:36375 | epochs:0.6  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.35 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1681117 | GE:36387 | epochs:0.6  | ep_lens:47.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.44 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1681263 | GE:36390 | epochs:0.6  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1681529 | GE:36396 | epochs:0.6  | ep_lens:40.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.35 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1681975 | GE:36404 | epochs:0.6  | ep_lens:71.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:55.0 (spuriousM:13.0,  23.6%) | ep_rewards:-0.76 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1682322 | GE:36411 | epochs:0.6  | ep_lens:48.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.42 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1682545 | GE:36418 | epochs:0.6  | ep_lens:37.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.36 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1682926 | GE:36426 | epochs:0.6  | ep_lens:53.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:51.0 (spuriousM:13.0,  25.5%) | ep_rewards:-0.32 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1683749 | GE:36443 | epochs:0.6  | ep_lens:86.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:71.0 (spuriousM:7.0 ,   9.9%) | ep_rewards:-0.81 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1684273 | GE:36454 | epochs:0.6  | ep_lens:50.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.45 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1684467 | GE:36458 | epochs:0.6  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.38 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1684627 | GE:36460 | epochs:0.6  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1684848 | GE:36465 | epochs:0.6  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.19 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1685285 | GE:36477 | epochs:0.6  | ep_lens:55.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:47.0 (spuriousM:6.0 ,  12.8%) | ep_rewards:-0.48 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1685531 | GE:36482 | epochs:0.6  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.27 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1685950 | GE:36492 | epochs:0.6  | ep_lens:56.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:48.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.48 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1686457 | GE:36500 | epochs:0.6  | ep_lens:51.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:47.0 (spuriousM:4.0 ,   8.5%) | ep_rewards:-0.36 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1686844 | GE:36511 | epochs:0.6  | ep_lens:58.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:51.0 (spuriousM:7.0 ,  13.7%) | ep_rewards:-0.47 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1687016 | GE:36516 | epochs:0.6  | ep_lens:32.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.36 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1687125 | GE:36518 | epochs:0.6  | ep_lens:22.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.14 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1687349 | GE:36523 | epochs:0.6  | ep_lens:47.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.51 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1687539 | GE:36524 | epochs:0.6  | ep_lens:36.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.23 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1687675 | GE:36530 | epochs:0.6  | ep_lens:34.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.35 | mean_Q:0.01   | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1687738 | GE:36531 | epochs:0.6  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.05  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1688001 | GE:36536 | epochs:0.6  | ep_lens:49.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:42.0 (spuriousM:7.0 ,  16.7%) | ep_rewards:-0.42 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1689089 | GE:36558 | epochs:0.6  | ep_lens:100.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:86.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:-0.85 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1689229 | GE:36563 | epochs:0.6  | ep_lens:29.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.17 | mean_Q:0.01   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1689960 | GE:36577 | epochs:0.6  | ep_lens:77.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:64.0 (spuriousM:1.0 ,   1.6%) | ep_rewards:-0.71 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1690184 | GE:36582 | epochs:0.6  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.24 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1690441 | GE:36589 | epochs:0.6  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.24 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1690572 | GE:36594 | epochs:0.6  | ep_lens:20.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:18.0 (spuriousM:2.0 ,  11.1%) | ep_rewards:-0.15 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1690751 | GE:36597 | epochs:0.6  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1691048 | GE:36602 | epochs:0.6  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.38 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1691580 | GE:36616 | epochs:0.6  | ep_lens:51.0 | edits:3.0  (spuriousE:2.0 ,  66.7%) | moves:48.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.67  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1691745 | GE:36619 | epochs:0.6  | ep_lens:31.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.28 | mean_Q:0.03   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1692351 | GE:36628 | epochs:0.6  | ep_lens:67.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:64.0 (spuriousM:2.0 ,   3.1%) | ep_rewards:-0.41 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1692527 | GE:36633 | epochs:0.6  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.22 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1692744 | GE:36638 | epochs:0.6  | ep_lens:37.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:36.0 (spuriousM:11.0,  30.6%) | ep_rewards:-0.21 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1693305 | GE:36650 | epochs:0.6  | ep_lens:55.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:50.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.40 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1693585 | GE:36656 | epochs:0.6  | ep_lens:44.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.32 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1693796 | GE:36662 | epochs:0.6  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:5.0 ,  11.9%) | ep_rewards:-0.33 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1694076 | GE:36667 | epochs:0.6  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.32 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1694317 | GE:36674 | epochs:0.6  | ep_lens:34.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.32 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1694887 | GE:36683 | epochs:0.6  | ep_lens:64.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:53.0 (spuriousM:3.0 ,   5.7%) | ep_rewards:-0.60 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1694977 | GE:36684 | epochs:0.6  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1695867 | GE:36704 | epochs:0.6  | ep_lens:90.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:74.0 (spuriousM:7.0 ,   9.5%) | ep_rewards:-0.85 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1696189 | GE:36712 | epochs:0.6  | ep_lens:54.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:51.0 (spuriousM:7.0 ,  13.7%) | ep_rewards:-0.35 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1696362 | GE:36716 | epochs:0.6  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.27 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1697279 | GE:36743 | epochs:0.6  | ep_lens:65.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:53.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.63 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1697640 | GE:36751 | epochs:0.6  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.38 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1697893 | GE:36760 | epochs:0.6  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:6.0 ,  15.0%) | ep_rewards:-0.38 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1698923 | GE:36777 | epochs:0.6  | ep_lens:88.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:81.0 (spuriousM:3.0 ,   3.7%) | ep_rewards:-0.62 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1699103 | GE:36783 | epochs:0.6  | ep_lens:38.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:36.0 (spuriousM:10.0,  27.8%) | ep_rewards:-0.24 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1699353 | GE:36787 | epochs:0.6  | ep_lens:33.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.22 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1699639 | GE:36792 | epochs:0.6  | ep_lens:35.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:34.0 (spuriousM:4.0 ,  11.8%) | ep_rewards:-0.20 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1699925 | GE:36801 | epochs:0.6  | ep_lens:48.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.47 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1700363 | GE:36812 | epochs:0.6  | ep_lens:58.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:49.0 (spuriousM:2.0 ,   4.1%) | ep_rewards:-0.52 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1700735 | GE:36817 | epochs:0.6  | ep_lens:49.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:42.0 (spuriousM:6.0 ,  14.3%) | ep_rewards:-0.42 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1700969 | GE:36823 | epochs:0.6  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.31 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1701166 | GE:36829 | epochs:0.6  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.37 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1701249 | GE:36832 | epochs:0.6  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1701521 | GE:36840 | epochs:0.6  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:6.0 ,  15.8%) | ep_rewards:-0.31 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1701674 | GE:36842 | epochs:0.6  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.11  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1702060 | GE:36852 | epochs:0.6  | ep_lens:48.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:44.0 (spuriousM:7.0 ,  15.9%) | ep_rewards:-0.34 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1702300 | GE:36859 | epochs:0.6  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.21 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1702403 | GE:36864 | epochs:0.6  | ep_lens:22.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:20.0 (spuriousM:3.0 ,  15.0%) | ep_rewards:-0.16 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1702661 | GE:36870 | epochs:0.6  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.28 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1702900 | GE:36874 | epochs:0.6  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.33 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1703312 | GE:36884 | epochs:0.6  | ep_lens:44.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:42.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.27 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1703916 | GE:36899 | epochs:0.6  | ep_lens:68.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:61.0 (spuriousM:7.0 ,  11.5%) | ep_rewards:-0.52 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1704052 | GE:36903 | epochs:0.6  | ep_lens:22.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.11 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1704431 | GE:36911 | epochs:0.6  | ep_lens:40.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.35 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1704673 | GE:36917 | epochs:0.6  | ep_lens:28.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:27.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.15  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1704762 | GE:36919 | epochs:0.6  | ep_lens:21.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.16 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1704877 | GE:36923 | epochs:0.6  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.10  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1705478 | GE:36942 | epochs:0.6  | ep_lens:54.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:50.0 (spuriousM:3.0 ,   6.0%) | ep_rewards:-0.37 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1705861 | GE:36950 | epochs:0.6  | ep_lens:45.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.28 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1706203 | GE:36959 | epochs:0.6  | ep_lens:37.0 | edits:9.0  (spuriousE:8.0 ,  88.9%) | moves:28.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.59  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1706538 | GE:36968 | epochs:0.6  | ep_lens:38.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.34 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1707287 | GE:36984 | epochs:0.6  | ep_lens:65.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:55.0 (spuriousM:3.0 ,   5.5%) | ep_rewards:-0.58 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1707364 | GE:36985 | epochs:0.6  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.10  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1707536 | GE:36990 | epochs:0.6  | ep_lens:24.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.22 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1707969 | GE:37000 | epochs:0.6  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.34 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1708854 | GE:37023 | epochs:0.6  | ep_lens:68.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:59.0 (spuriousM:5.0 ,   8.5%) | ep_rewards:-0.57 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1709292 | GE:37036 | epochs:0.6  | ep_lens:44.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.40 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1709561 | GE:37039 | epochs:0.6  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.34 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1709819 | GE:37047 | epochs:0.6  | ep_lens:37.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.24 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1709912 | GE:37054 | epochs:0.6  | ep_lens:22.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:20.0 (spuriousM:3.0 ,  15.0%) | ep_rewards:-0.16 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1710095 | GE:37056 | epochs:0.6  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1710205 | GE:37059 | epochs:0.6  | ep_lens:23.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:18.0 (spuriousM:3.0 ,  16.7%) | ep_rewards:-0.24 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1710549 | GE:37066 | epochs:0.6  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.43 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1710785 | GE:37071 | epochs:0.6  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.30 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1710980 | GE:37079 | epochs:0.6  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.25 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1711280 | GE:37087 | epochs:0.6  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:4.0 ,   9.3%) | ep_rewards:-0.43 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1711601 | GE:37095 | epochs:0.6  | ep_lens:27.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:26.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.24  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1711793 | GE:37098 | epochs:0.6  | ep_lens:32.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.34 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1711952 | GE:37104 | epochs:0.6  | ep_lens:30.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.30 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1712398 | GE:37115 | epochs:0.6  | ep_lens:53.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:46.0 (spuriousM:5.0 ,  10.9%) | ep_rewards:-0.44 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1712668 | GE:37122 | epochs:0.6  | ep_lens:45.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.45 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1712930 | GE:37128 | epochs:0.6  | ep_lens:32.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.31 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1713386 | GE:37137 | epochs:0.6  | ep_lens:55.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:43.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.58 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1713527 | GE:37141 | epochs:0.6  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.22 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1713761 | GE:37147 | epochs:0.6  | ep_lens:39.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.40 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1714018 | GE:37154 | epochs:0.6  | ep_lens:45.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.40 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1715110 | GE:37178 | epochs:0.6  | ep_lens:98.0 | edits:21.0 (spuriousE:21.0, 100.0%) | moves:77.0 (spuriousM:2.0 ,   2.6%) | ep_rewards:-1.02 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1715178 | GE:37182 | epochs:0.6  | ep_lens:20.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:18.0 (spuriousM:1.0 ,   5.6%) | ep_rewards:-0.15 | mean_Q:-0.03  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1715599 | GE:37190 | epochs:0.6  | ep_lens:47.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:43.0 (spuriousM:7.0 ,  16.3%) | ep_rewards:-0.34 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1715714 | GE:37195 | epochs:0.6  | ep_lens:22.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:4.0 ,  18.2%) | ep_rewards:-0.11 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1716102 | GE:37202 | epochs:0.6  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.39 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1716960 | GE:37219 | epochs:0.6  | ep_lens:96.0 | edits:19.0 (spuriousE:19.0, 100.0%) | moves:77.0 (spuriousM:7.0 ,   9.1%) | ep_rewards:-0.96 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1717199 | GE:37222 | epochs:0.6  | ep_lens:40.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.40 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1717415 | GE:37228 | epochs:0.6  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.34 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1717902 | GE:37239 | epochs:0.6  | ep_lens:64.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:58.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.47 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1718006 | GE:37242 | epochs:0.6  | ep_lens:18.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:17.0 (spuriousM:2.0 ,  11.8%) | ep_rewards:-0.12 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1718101 | GE:37246 | epochs:0.6  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.25  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1718427 | GE:37254 | epochs:0.6  | ep_lens:45.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:42.0 (spuriousM:5.0 ,  11.9%) | ep_rewards:-0.30 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1718695 | GE:37261 | epochs:0.6  | ep_lens:44.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.42 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1719035 | GE:37269 | epochs:0.6  | ep_lens:51.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:45.0 (spuriousM:7.0 ,  15.6%) | ep_rewards:-0.41 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1719262 | GE:37277 | epochs:0.6  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.19 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1719504 | GE:37284 | epochs:0.6  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.19 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1719672 | GE:37288 | epochs:0.6  | ep_lens:25.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.23 | mean_Q:-0.03  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1719839 | GE:37292 | epochs:0.6  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:4.0 ,  16.0%) | ep_rewards:-0.31 | mean_Q:0.02   | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1719995 | GE:37297 | epochs:0.6  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1720467 | GE:37309 | epochs:0.6  | ep_lens:53.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:50.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.34 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1720985 | GE:37320 | epochs:0.6  | ep_lens:47.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:44.0 (spuriousM:8.0 ,  18.2%) | ep_rewards:-0.31 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1721328 | GE:37329 | epochs:0.6  | ep_lens:53.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:42.0 (spuriousM:5.0 ,  11.9%) | ep_rewards:-0.54 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1722138 | GE:37347 | epochs:0.6  | ep_lens:55.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:46.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.50 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1722324 | GE:37353 | epochs:0.6  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.22 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1722683 | GE:37361 | epochs:0.6  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.29 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1723080 | GE:37372 | epochs:0.6  | ep_lens:51.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:46.0 (spuriousM:3.0 ,   6.5%) | ep_rewards:-0.38 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1723869 | GE:37390 | epochs:0.6  | ep_lens:69.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:61.0 (spuriousM:5.0 ,   8.2%) | ep_rewards:-0.55 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1724165 | GE:37399 | epochs:0.6  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.29 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1724498 | GE:37406 | epochs:0.6  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.36 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1724667 | GE:37411 | epochs:0.6  | ep_lens:22.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.19 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1724930 | GE:37416 | epochs:0.6  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.26 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1725163 | GE:37420 | epochs:0.6  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.21 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1725462 | GE:37430 | epochs:0.6  | ep_lens:30.0 | edits:2.0  (spuriousE:1.0 ,  50.0%) | moves:28.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.80  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1725755 | GE:37437 | epochs:0.6  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.27 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1725934 | GE:37440 | epochs:0.6  | ep_lens:35.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:27.0 (spuriousM:4.0 ,  14.8%) | ep_rewards:-0.38 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1726059 | GE:37445 | epochs:0.6  | ep_lens:26.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.18 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1726113 | GE:37446 | epochs:0.6  | ep_lens:5.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:4.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.95  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1726374 | GE:37453 | epochs:0.6  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.37 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1726605 | GE:37460 | epochs:0.6  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.25 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1726809 | GE:37465 | epochs:0.6  | ep_lens:31.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.18 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1727108 | GE:37471 | epochs:0.6  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.28 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1727353 | GE:37476 | epochs:0.6  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.38 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1727491 | GE:37478 | epochs:0.6  | ep_lens:23.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.14 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1727823 | GE:37490 | epochs:0.6  | ep_lens:39.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.25 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1728084 | GE:37497 | epochs:0.6  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.31 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1728503 | GE:37510 | epochs:0.6  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:6.0 ,  15.0%) | ep_rewards:-0.35 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1728810 | GE:37517 | epochs:0.6  | ep_lens:39.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.30 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1729097 | GE:37524 | epochs:0.6  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.36 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1729524 | GE:37535 | epochs:0.6  | ep_lens:54.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:43.0 (spuriousM:5.0 ,  11.6%) | ep_rewards:-0.55 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1729839 | GE:37543 | epochs:0.6  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:6.0 ,  17.6%) | ep_rewards:-0.38 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1730093 | GE:37551 | epochs:0.6  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.25 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1730367 | GE:37555 | epochs:0.6  | ep_lens:42.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:34.0 (spuriousM:7.0 ,  20.6%) | ep_rewards:-0.41 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1730525 | GE:37560 | epochs:0.6  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:3.0 ,  13.0%) | ep_rewards:-0.18 | mean_Q:0.00   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1731202 | GE:37575 | epochs:0.6  | ep_lens:59.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:47.0 (spuriousM:5.0 ,  10.6%) | ep_rewards:-0.60 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1732086 | GE:37600 | epochs:0.6  | ep_lens:73.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:63.0 (spuriousM:4.0 ,   6.3%) | ep_rewards:-0.62 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1732379 | GE:37605 | epochs:0.6  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.37 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1732735 | GE:37614 | epochs:0.6  | ep_lens:60.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:46.0 (spuriousM:3.0 ,   6.5%) | ep_rewards:-0.65 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1733083 | GE:37623 | epochs:0.6  | ep_lens:43.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.49 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1733638 | GE:37636 | epochs:0.6  | ep_lens:51.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:48.0 (spuriousM:2.0 ,   4.2%) | ep_rewards:-0.33 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1733886 | GE:37646 | epochs:0.6  | ep_lens:30.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.20 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1734269 | GE:37659 | epochs:0.6  | ep_lens:37.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.24 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1734539 | GE:37665 | epochs:0.6  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.25 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1734869 | GE:37676 | epochs:0.6  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.38 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1735060 | GE:37682 | epochs:0.6  | ep_lens:29.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.25 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1735570 | GE:37695 | epochs:0.6  | ep_lens:61.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:55.0 (spuriousM:5.0 ,   9.1%) | ep_rewards:-0.46 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1735826 | GE:37701 | epochs:0.6  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.25 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1735978 | GE:37706 | epochs:0.6  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.15  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1736397 | GE:37714 | epochs:0.6  | ep_lens:60.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:53.0 (spuriousM:3.0 ,   5.7%) | ep_rewards:-0.48 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1736857 | GE:37725 | epochs:0.6  | ep_lens:57.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:40.0 (spuriousM:4.0 ,  10.0%) | ep_rewards:-0.71 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1737693 | GE:37745 | epochs:0.6  | ep_lens:76.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:66.0 (spuriousM:11.0,  16.7%) | ep_rewards:-0.63 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1737960 | GE:37752 | epochs:0.6  | ep_lens:44.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.40 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1738362 | GE:37758 | epochs:0.6  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.26 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1739237 | GE:37779 | epochs:0.6  | ep_lens:82.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:72.0 (spuriousM:11.0,  15.3%) | ep_rewards:-0.66 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1739492 | GE:37786 | epochs:0.6  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.36 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1739902 | GE:37794 | epochs:0.6  | ep_lens:55.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.50 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1740502 | GE:37807 | epochs:0.6  | ep_lens:76.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:59.0 (spuriousM:5.0 ,   8.5%) | ep_rewards:-0.81 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1740717 | GE:37812 | epochs:0.6  | ep_lens:37.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:28.0 (spuriousM:4.0 ,  14.3%) | ep_rewards:-0.41 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1740799 | GE:37813 | epochs:0.6  | ep_lens:9.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:8.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.18  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1741323 | GE:37825 | epochs:0.6  | ep_lens:63.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:54.0 (spuriousM:5.0 ,   9.3%) | ep_rewards:-0.54 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1741591 | GE:37829 | epochs:0.6  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.29 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1741942 | GE:37838 | epochs:0.6  | ep_lens:45.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.40 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1742740 | GE:37858 | epochs:0.6  | ep_lens:68.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:60.0 (spuriousM:1.0 ,   1.7%) | ep_rewards:-0.54 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1742916 | GE:37864 | epochs:0.6  | ep_lens:25.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.23 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1743077 | GE:37868 | epochs:0.6  | ep_lens:26.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:23.0 (spuriousM:3.0 ,  13.0%) | ep_rewards:-0.21 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1743590 | GE:37880 | epochs:0.6  | ep_lens:71.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:60.0 (spuriousM:9.0 ,  15.0%) | ep_rewards:-0.63 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1743855 | GE:37884 | epochs:0.6  | ep_lens:47.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.41 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1744021 | GE:37891 | epochs:0.6  | ep_lens:29.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:27.0 (spuriousM:6.0 ,  22.2%) | ep_rewards:-0.20 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1744402 | GE:37897 | epochs:0.6  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.33 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1745112 | GE:37912 | epochs:0.6  | ep_lens:79.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:70.0 (spuriousM:5.0 ,   7.1%) | ep_rewards:-0.62 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1745445 | GE:37918 | epochs:0.6  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:5.0 ,  12.5%) | ep_rewards:-0.38 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1745852 | GE:37928 | epochs:0.6  | ep_lens:47.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:43.0 (spuriousM:4.0 ,   9.3%) | ep_rewards:-0.34 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1746107 | GE:37932 | epochs:0.6  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:5.0 ,  13.2%) | ep_rewards:-0.37 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1746226 | GE:37936 | epochs:0.6  | ep_lens:19.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.15 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1746548 | GE:37942 | epochs:0.6  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:4.0 ,   9.3%) | ep_rewards:-0.43 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1746917 | GE:37953 | epochs:0.6  | ep_lens:43.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.29 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1747441 | GE:37969 | epochs:0.6  | ep_lens:54.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:51.0 (spuriousM:4.0 ,   7.8%) | ep_rewards:-0.35 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1747791 | GE:37976 | epochs:0.6  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.36 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1747911 | GE:37979 | epochs:0.6  | ep_lens:17.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.09 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1748047 | GE:37983 | epochs:0.6  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1748311 | GE:37990 | epochs:0.6  | ep_lens:37.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.24 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1748578 | GE:37997 | epochs:0.6  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.29 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1748737 | GE:38000 | epochs:0.6  | ep_lens:27.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.24 | mean_Q:-0.00  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1748995 | GE:38007 | epochs:0.6  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.38 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1749542 | GE:38016 | epochs:0.6  | ep_lens:69.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:53.0 (spuriousM:16.0,  30.2%) | ep_rewards:-0.75 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1749652 | GE:38020 | epochs:0.6  | ep_lens:20.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:18.0 (spuriousM:3.0 ,  16.7%) | ep_rewards:-0.15 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1749926 | GE:38025 | epochs:0.6  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.28 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1750110 | GE:38027 | epochs:0.6  | ep_lens:17.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.09 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1750444 | GE:38034 | epochs:0.6  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.36 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1750768 | GE:38043 | epochs:0.6  | ep_lens:44.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:41.0 (spuriousM:5.0 ,  12.2%) | ep_rewards:-0.30 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1750863 | GE:38047 | epochs:0.6  | ep_lens:23.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:20.0 (spuriousM:3.0 ,  15.0%) | ep_rewards:-0.19 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1751218 | GE:38056 | epochs:0.6  | ep_lens:58.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:49.0 (spuriousM:12.0,  24.5%) | ep_rewards:-0.52 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1751277 | GE:38059 | epochs:0.6  | ep_lens:5.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:4.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.95  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1751524 | GE:38065 | epochs:0.6  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.27 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1752300 | GE:38080 | epochs:0.6  | ep_lens:73.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:62.0 (spuriousM:2.0 ,   3.2%) | ep_rewards:-0.64 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1752698 | GE:38088 | epochs:0.6  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:6.0 ,  13.6%) | ep_rewards:-0.40 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1753067 | GE:38098 | epochs:0.6  | ep_lens:51.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.48 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1753265 | GE:38104 | epochs:0.6  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.16 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1753630 | GE:38115 | epochs:0.6  | ep_lens:40.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:33.0 (spuriousM:7.0 ,  21.2%) | ep_rewards:-0.38 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1753971 | GE:38123 | epochs:0.6  | ep_lens:36.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.38 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1754050 | GE:38126 | epochs:0.6  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1754433 | GE:38137 | epochs:0.6  | ep_lens:54.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:49.0 (spuriousM:7.0 ,  14.3%) | ep_rewards:-0.40 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1754634 | GE:38142 | epochs:0.6  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.24 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1754973 | GE:38149 | epochs:0.6  | ep_lens:36.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.23 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1755566 | GE:38164 | epochs:0.6  | ep_lens:63.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:57.0 (spuriousM:1.0 ,   1.8%) | ep_rewards:-0.47 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1755806 | GE:38170 | epochs:0.6  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:5.0 ,  13.2%) | ep_rewards:-0.37 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1756002 | GE:38173 | epochs:0.6  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.36 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1756609 | GE:38189 | epochs:0.6  | ep_lens:52.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:46.0 (spuriousM:5.0 ,  10.9%) | ep_rewards:-0.41 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1756951 | GE:38195 | epochs:0.6  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:4.0 ,  10.0%) | ep_rewards:-0.35 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1757226 | GE:38203 | epochs:0.6  | ep_lens:39.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.30 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1757481 | GE:38209 | epochs:0.6  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.26 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1757529 | GE:38212 | epochs:0.6  | ep_lens:9.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:8.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.10  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1757626 | GE:38214 | epochs:0.6  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.13  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1758205 | GE:38228 | epochs:0.6  | ep_lens:51.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:46.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.38 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1758873 | GE:38242 | epochs:0.6  | ep_lens:65.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:56.0 (spuriousM:5.0 ,   8.9%) | ep_rewards:-0.55 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1759181 | GE:38251 | epochs:0.6  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.29 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1759253 | GE:38252 | epochs:0.6  | ep_lens:12.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.13  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1759575 | GE:38258 | epochs:0.6  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.38 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1759909 | GE:38266 | epochs:0.6  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.37 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1760404 | GE:38275 | epochs:0.6  | ep_lens:58.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:51.0 (spuriousM:9.0 ,  17.6%) | ep_rewards:-0.47 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1760678 | GE:38282 | epochs:0.6  | ep_lens:44.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.42 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1761412 | GE:38296 | epochs:0.6  | ep_lens:75.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:63.0 (spuriousM:6.0 ,   9.5%) | ep_rewards:-0.68 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1761532 | GE:38298 | epochs:0.6  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.28  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1761883 | GE:38305 | epochs:0.6  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.33 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1762235 | GE:38317 | epochs:0.6  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.31 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1762349 | GE:38319 | epochs:0.6  | ep_lens:21.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:6.0 ,  28.6%) | ep_rewards:-0.11 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1762667 | GE:38327 | epochs:0.6  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:5.0 ,  13.9%) | ep_rewards:-0.36 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1762902 | GE:38333 | epochs:0.6  | ep_lens:35.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.35 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1763595 | GE:38350 | epochs:0.6  | ep_lens:63.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:55.0 (spuriousM:7.0 ,  12.7%) | ep_rewards:-0.52 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1763944 | GE:38363 | epochs:0.6  | ep_lens:42.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.41 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1764333 | GE:38373 | epochs:0.6  | ep_lens:29.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:28.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1764947 | GE:38389 | epochs:0.6  | ep_lens:60.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:51.0 (spuriousM:3.0 ,   5.9%) | ep_rewards:-0.53 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1765662 | GE:38405 | epochs:0.6  | ep_lens:64.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:56.0 (spuriousM:3.0 ,   5.4%) | ep_rewards:-0.52 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1766026 | GE:38413 | epochs:0.6  | ep_lens:50.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.38 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1766242 | GE:38417 | epochs:0.6  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:9.0 ,  31.0%) | ep_rewards:-0.33 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1766394 | GE:38421 | epochs:0.6  | ep_lens:22.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1767409 | GE:38444 | epochs:0.6  | ep_lens:89.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:83.0 (spuriousM:10.0,  12.0%) | ep_rewards:-0.60 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1767846 | GE:38450 | epochs:0.6  | ep_lens:60.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:55.0 (spuriousM:5.0 ,   9.1%) | ep_rewards:-0.43 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1768078 | GE:38457 | epochs:0.6  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.33 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1768523 | GE:38467 | epochs:0.6  | ep_lens:48.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:43.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.37 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1768633 | GE:38471 | epochs:0.6  | ep_lens:24.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.22 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1768744 | GE:38474 | epochs:0.6  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.11  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1768892 | GE:38477 | epochs:0.6  | ep_lens:27.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:22.0 (spuriousM:5.0 ,  22.7%) | ep_rewards:-0.26 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1769371 | GE:38488 | epochs:0.6  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.46 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1769902 | GE:38499 | epochs:0.6  | ep_lens:56.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:47.0 (spuriousM:4.0 ,   8.5%) | ep_rewards:-0.51 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1770228 | GE:38508 | epochs:0.6  | ep_lens:44.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.40 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1770404 | GE:38511 | epochs:0.6  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.24 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1770628 | GE:38516 | epochs:0.6  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.25 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1770855 | GE:38521 | epochs:0.6  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.37 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1771081 | GE:38527 | epochs:0.6  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1771357 | GE:38534 | epochs:0.6  | ep_lens:48.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.42 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1771555 | GE:38539 | epochs:0.6  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.38 | mean_Q:-0.01  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1771882 | GE:38547 | epochs:0.6  | ep_lens:48.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.42 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1772374 | GE:38563 | epochs:0.6  | ep_lens:53.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:49.0 (spuriousM:3.0 ,   6.1%) | ep_rewards:-0.37 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1772765 | GE:38573 | epochs:0.6  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.39 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1773038 | GE:38578 | epochs:0.6  | ep_lens:48.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.49 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1773266 | GE:38582 | epochs:0.6  | ep_lens:44.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.30 | mean_Q:-0.01  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1773634 | GE:38592 | epochs:0.6  | ep_lens:57.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:47.0 (spuriousM:6.0 ,  12.8%) | ep_rewards:-0.54 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1774021 | GE:38600 | epochs:0.6  | ep_lens:51.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.48 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1774560 | GE:38611 | epochs:0.6  | ep_lens:61.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:52.0 (spuriousM:14.0,  26.9%) | ep_rewards:-0.53 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1774822 | GE:38618 | epochs:0.6  | ep_lens:46.0 | edits:7.0  (spuriousE:6.0 ,  85.7%) | moves:39.0 (spuriousM:6.0 ,  15.4%) | ep_rewards:-0.37 | mean_Q:-0.09  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:1775211 | GE:38628 | epochs:0.6  | ep_lens:49.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.37 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1775746 | GE:38640 | epochs:0.6  | ep_lens:70.0 | edits:19.0 (spuriousE:19.0, 100.0%) | moves:51.0 (spuriousM:4.0 ,   7.8%) | ep_rewards:-0.83 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1776330 | GE:38654 | epochs:0.6  | ep_lens:74.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:65.0 (spuriousM:4.0 ,   6.2%) | ep_rewards:-0.60 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1776867 | GE:38664 | epochs:0.6  | ep_lens:52.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.49 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1777709 | GE:38686 | epochs:0.6  | ep_lens:84.0 | edits:23.0 (spuriousE:23.0, 100.0%) | moves:61.0 (spuriousM:4.0 ,   6.6%) | ep_rewards:-1.00 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1777850 | GE:38690 | epochs:0.6  | ep_lens:24.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:23.0 (spuriousM:3.0 ,  13.0%) | ep_rewards:-0.15 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1778035 | GE:38698 | epochs:0.6  | ep_lens:28.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.27 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1778246 | GE:38701 | epochs:0.6  | ep_lens:38.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.44 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1778463 | GE:38704 | epochs:0.6  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.25  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1778658 | GE:38711 | epochs:0.6  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.26 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1779053 | GE:38719 | epochs:0.6  | ep_lens:46.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.28 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1779109 | GE:38723 | epochs:0.6  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1779659 | GE:38737 | epochs:0.6  | ep_lens:55.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:50.0 (spuriousM:3.0 ,   6.0%) | ep_rewards:-0.40 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1779779 | GE:38738 | epochs:0.6  | ep_lens:21.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.21 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1779927 | GE:38742 | epochs:0.6  | ep_lens:24.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.15 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1780104 | GE:38747 | epochs:0.6  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.31 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1780192 | GE:38751 | epochs:0.6  | ep_lens:23.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.22 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1780433 | GE:38755 | epochs:0.6  | ep_lens:35.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.20 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1780642 | GE:38759 | epochs:0.6  | ep_lens:30.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.20 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1780778 | GE:38762 | epochs:0.6  | ep_lens:21.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.11 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1780948 | GE:38767 | epochs:0.6  | ep_lens:23.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.21  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1781073 | GE:38773 | epochs:0.6  | ep_lens:25.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:21.0 (spuriousM:5.0 ,  23.8%) | ep_rewards:-0.23 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1781426 | GE:38778 | epochs:0.6  | ep_lens:58.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:47.0 (spuriousM:3.0 ,   6.4%) | ep_rewards:-0.57 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1781897 | GE:38792 | epochs:0.6  | ep_lens:62.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:52.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.56 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1782239 | GE:38798 | epochs:0.6  | ep_lens:58.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:48.0 (spuriousM:5.0 ,  10.4%) | ep_rewards:-0.54 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1782696 | GE:38808 | epochs:0.6  | ep_lens:54.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:45.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.50 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1783062 | GE:38817 | epochs:0.6  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.35 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1783230 | GE:38821 | epochs:0.6  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.24 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1783749 | GE:38833 | epochs:0.6  | ep_lens:57.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:47.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.54 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1783903 | GE:38836 | epochs:0.6  | ep_lens:21.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.16 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1784186 | GE:38845 | epochs:0.6  | ep_lens:27.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:26.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1784404 | GE:38853 | epochs:0.6  | ep_lens:36.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.38 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1784731 | GE:38861 | epochs:0.6  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.25 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1785204 | GE:38870 | epochs:0.6  | ep_lens:60.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:54.0 (spuriousM:7.0 ,  13.0%) | ep_rewards:-0.45 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1785583 | GE:38882 | epochs:0.6  | ep_lens:49.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:46.0 (spuriousM:5.0 ,  10.9%) | ep_rewards:-0.32 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1786138 | GE:38894 | epochs:0.6  | ep_lens:50.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.45 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1786467 | GE:38900 | epochs:0.6  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.19 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1787524 | GE:38927 | epochs:0.6  | ep_lens:100.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:91.0 (spuriousM:2.0 ,   2.2%) | ep_rewards:-0.73 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1787974 | GE:38936 | epochs:0.6  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.40 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1788403 | GE:38947 | epochs:0.6  | ep_lens:50.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.45 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1788691 | GE:38952 | epochs:0.6  | ep_lens:40.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.25 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1788922 | GE:38958 | epochs:0.6  | ep_lens:47.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:44.0 (spuriousM:7.0 ,  15.9%) | ep_rewards:-0.31 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1789500 | GE:38969 | epochs:0.6  | ep_lens:69.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:58.0 (spuriousM:5.0 ,   8.6%) | ep_rewards:-0.62 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1789920 | GE:38980 | epochs:0.6  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.29 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1790206 | GE:38986 | epochs:0.6  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.36 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1790479 | GE:38994 | epochs:0.6  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.30 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1791266 | GE:39012 | epochs:0.6  | ep_lens:85.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:70.0 (spuriousM:4.0 ,   5.7%) | ep_rewards:-0.80 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1792059 | GE:39031 | epochs:0.6  | ep_lens:67.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:65.0 (spuriousM:1.0 ,   1.5%) | ep_rewards:-0.39 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1792643 | GE:39044 | epochs:0.6  | ep_lens:68.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:57.0 (spuriousM:13.0,  22.8%) | ep_rewards:-0.62 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1792924 | GE:39050 | epochs:0.6  | ep_lens:48.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:40.0 (spuriousM:5.0 ,  12.5%) | ep_rewards:-0.44 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1793184 | GE:39055 | epochs:0.6  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.32 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1793631 | GE:39065 | epochs:0.6  | ep_lens:55.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:42.0 (spuriousM:5.0 ,  11.9%) | ep_rewards:-0.60 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1794744 | GE:39087 | epochs:0.6  | ep_lens:100.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:89.0 (spuriousM:7.0 ,   7.9%) | ep_rewards:-0.78 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1794990 | GE:39091 | epochs:0.6  | ep_lens:40.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.43 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1795524 | GE:39103 | epochs:0.6  | ep_lens:67.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:62.0 (spuriousM:1.0 ,   1.6%) | ep_rewards:-0.46 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1795829 | GE:39111 | epochs:0.6  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.33 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1796376 | GE:39125 | epochs:0.6  | ep_lens:59.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:48.0 (spuriousM:10.0,  20.8%) | ep_rewards:-0.57 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1796431 | GE:39129 | epochs:0.6  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.07  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1796742 | GE:39134 | epochs:0.6  | ep_lens:47.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:44.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.31 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1797160 | GE:39146 | epochs:0.6  | ep_lens:47.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:39.0 (spuriousM:9.0 ,  23.1%) | ep_rewards:-0.44 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1797318 | GE:39149 | epochs:0.6  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.22 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1797714 | GE:39158 | epochs:0.6  | ep_lens:37.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.24 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1797831 | GE:39163 | epochs:0.6  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.18 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1797952 | GE:39165 | epochs:0.6  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1798188 | GE:39172 | epochs:0.6  | ep_lens:27.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.16 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1798506 | GE:39178 | epochs:0.6  | ep_lens:42.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:41.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.24 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1798951 | GE:39189 | epochs:0.6  | ep_lens:47.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:45.0 (spuriousM:4.0 ,   8.9%) | ep_rewards:-0.29 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1799266 | GE:39197 | epochs:0.6  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.34 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1799657 | GE:39206 | epochs:0.6  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.39 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1799768 | GE:39210 | epochs:0.6  | ep_lens:24.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.03  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1799898 | GE:39213 | epochs:0.6  | ep_lens:23.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:21.0 (spuriousM:5.0 ,  23.8%) | ep_rewards:-0.17 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1800172 | GE:39220 | epochs:0.6  | ep_lens:52.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:43.0 (spuriousM:16.0,  37.2%) | ep_rewards:-0.49 | mean_Q:-0.00  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1800631 | GE:39230 | epochs:0.6  | ep_lens:53.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:47.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.42 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1801278 | GE:39245 | epochs:0.6  | ep_lens:71.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:61.0 (spuriousM:3.0 ,   4.9%) | ep_rewards:-0.61 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1801635 | GE:39256 | epochs:0.6  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:5.0 ,  13.9%) | ep_rewards:-0.39 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1801854 | GE:39261 | epochs:0.6  | ep_lens:29.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.27 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1802419 | GE:39275 | epochs:0.6  | ep_lens:72.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:62.0 (spuriousM:8.0 ,  12.9%) | ep_rewards:-0.61 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1802802 | GE:39283 | epochs:0.6  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.36 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1803021 | GE:39286 | epochs:0.6  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.29 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1803119 | GE:39289 | epochs:0.6  | ep_lens:23.0 | edits:4.0  (spuriousE:3.0 ,  75.0%) | moves:19.0 (spuriousM:4.0 ,  21.1%) | ep_rewards:0.78  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1804109 | GE:39312 | epochs:0.6  | ep_lens:77.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:66.0 (spuriousM:3.0 ,   4.5%) | ep_rewards:-0.66 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1804323 | GE:39318 | epochs:0.6  | ep_lens:30.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:29.0 (spuriousM:6.0 ,  20.7%) | ep_rewards:-0.18 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1804531 | GE:39324 | epochs:0.6  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:7.0 ,  23.3%) | ep_rewards:-0.21 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1804702 | GE:39328 | epochs:0.6  | ep_lens:24.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.18  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1805043 | GE:39340 | epochs:0.7  | ep_lens:42.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.39 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1805169 | GE:39346 | epochs:0.7  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.14  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1805498 | GE:39355 | epochs:0.7  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:5.0 ,  13.9%) | ep_rewards:-0.33 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1805969 | GE:39365 | epochs:0.7  | ep_lens:54.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:50.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.37 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1806272 | GE:39373 | epochs:0.7  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:6.0 ,  17.1%) | ep_rewards:-0.33 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1806542 | GE:39380 | epochs:0.7  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:6.0 ,  15.8%) | ep_rewards:-0.37 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1806746 | GE:39385 | epochs:0.7  | ep_lens:40.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:34.0 (spuriousM:5.0 ,  14.7%) | ep_rewards:-0.35 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1806842 | GE:39386 | epochs:0.7  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.13  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1807446 | GE:39399 | epochs:0.7  | ep_lens:68.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:62.0 (spuriousM:7.0 ,  11.3%) | ep_rewards:-0.49 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1807838 | GE:39410 | epochs:0.7  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.38 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1808504 | GE:39420 | epochs:0.7  | ep_lens:73.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:62.0 (spuriousM:2.0 ,   3.2%) | ep_rewards:-0.64 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1808605 | GE:39422 | epochs:0.7  | ep_lens:21.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:20.0 (spuriousM:4.0 ,  20.0%) | ep_rewards:-0.13 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1808712 | GE:39426 | epochs:0.7  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.20  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1809225 | GE:39433 | epochs:0.7  | ep_lens:53.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:43.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.52 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1809994 | GE:39455 | epochs:0.7  | ep_lens:65.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:57.0 (spuriousM:7.0 ,  12.3%) | ep_rewards:-0.53 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1810221 | GE:39461 | epochs:0.7  | ep_lens:30.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.20 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1810631 | GE:39472 | epochs:0.7  | ep_lens:53.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.49 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1811039 | GE:39481 | epochs:0.7  | ep_lens:54.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:48.0 (spuriousM:3.0 ,   6.2%) | ep_rewards:-0.42 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1811179 | GE:39484 | epochs:0.7  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1811474 | GE:39491 | epochs:0.7  | ep_lens:37.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.39 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1811612 | GE:39496 | epochs:0.7  | ep_lens:21.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.13  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1811706 | GE:39498 | epochs:0.7  | ep_lens:18.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:17.0 (spuriousM:3.0 ,  17.6%) | ep_rewards:-0.12 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1812163 | GE:39504 | epochs:0.7  | ep_lens:72.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:59.0 (spuriousM:7.0 ,  11.9%) | ep_rewards:-0.69 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1812454 | GE:39509 | epochs:0.7  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.36 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1812621 | GE:39515 | epochs:0.7  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.20 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1813008 | GE:39522 | epochs:0.7  | ep_lens:53.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:47.0 (spuriousM:5.0 ,  10.6%) | ep_rewards:-0.42 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1813256 | GE:39526 | epochs:0.7  | ep_lens:51.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:43.0 (spuriousM:8.0 ,  18.6%) | ep_rewards:-0.46 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1813563 | GE:39532 | epochs:0.7  | ep_lens:51.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:41.0 (spuriousM:6.0 ,  14.6%) | ep_rewards:-0.51 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1814002 | GE:39542 | epochs:0.7  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.36 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1814446 | GE:39553 | epochs:0.7  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.40 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1814732 | GE:39560 | epochs:0.7  | ep_lens:48.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.52 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1815526 | GE:39575 | epochs:0.7  | ep_lens:83.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:66.0 (spuriousM:6.0 ,   9.1%) | ep_rewards:-0.84 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1815630 | GE:39578 | epochs:0.7  | ep_lens:22.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.14 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1815827 | GE:39583 | epochs:0.7  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.29 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1816617 | GE:39599 | epochs:0.7  | ep_lens:81.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:70.0 (spuriousM:5.0 ,   7.1%) | ep_rewards:-0.68 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1816880 | GE:39605 | epochs:0.7  | ep_lens:36.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.38 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1817608 | GE:39617 | epochs:0.7  | ep_lens:82.0 | edits:22.0 (spuriousE:22.0, 100.0%) | moves:60.0 (spuriousM:4.0 ,   6.7%) | ep_rewards:-0.96 | mean_Q:-0.29  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1817891 | GE:39623 | epochs:0.7  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.27 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1818883 | GE:39645 | epochs:0.7  | ep_lens:100.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:82.0 (spuriousM:2.0 ,   2.4%) | ep_rewards:-0.95 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1819113 | GE:39651 | epochs:0.7  | ep_lens:36.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.21 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1819184 | GE:39653 | epochs:0.7  | ep_lens:10.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:9.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1819473 | GE:39663 | epochs:0.7  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.28 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1819897 | GE:39674 | epochs:0.7  | ep_lens:55.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:44.0 (spuriousM:5.0 ,  11.4%) | ep_rewards:-0.55 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1820000 | GE:39675 | epochs:0.7  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
Saved Model: 1820000
TRAIN || T:1820253 | GE:39683 | epochs:0.7  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.30 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1820456 | GE:39689 | epochs:0.7  | ep_lens:30.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.18 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1820705 | GE:39696 | epochs:0.7  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.34 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1820904 | GE:39700 | epochs:0.7  | ep_lens:38.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.39 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1821183 | GE:39705 | epochs:0.7  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.37 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1821412 | GE:39714 | epochs:0.7  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.37 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1821552 | GE:39721 | epochs:0.7  | ep_lens:26.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:23.0 (spuriousM:3.0 ,  13.0%) | ep_rewards:-0.21 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1821920 | GE:39729 | epochs:0.7  | ep_lens:43.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.42 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1822187 | GE:39734 | epochs:0.7  | ep_lens:42.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:35.0 (spuriousM:5.0 ,  14.3%) | ep_rewards:-0.39 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1822368 | GE:39739 | epochs:0.7  | ep_lens:40.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.50 | mean_Q:-0.00  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1822953 | GE:39749 | epochs:0.7  | ep_lens:68.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:61.0 (spuriousM:1.0 ,   1.6%) | ep_rewards:-0.52 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1823122 | GE:39753 | epochs:0.7  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.25 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1823288 | GE:39758 | epochs:0.7  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.16 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1823677 | GE:39765 | epochs:0.7  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.35 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1823942 | GE:39772 | epochs:0.7  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:6.0 ,  17.6%) | ep_rewards:-0.26 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1824245 | GE:39778 | epochs:0.7  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.27 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1824500 | GE:39784 | epochs:0.7  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.31 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1824694 | GE:39789 | epochs:0.7  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.25 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1824869 | GE:39791 | epochs:0.7  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.23 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1825038 | GE:39796 | epochs:0.7  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.23 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1825499 | GE:39807 | epochs:0.7  | ep_lens:49.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.40 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1825665 | GE:39811 | epochs:0.7  | ep_lens:24.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.25  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1825841 | GE:39815 | epochs:0.7  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.31  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1825944 | GE:39819 | epochs:0.7  | ep_lens:23.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:22.0 (spuriousM:3.0 ,  13.6%) | ep_rewards:-0.14 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1826165 | GE:39825 | epochs:0.7  | ep_lens:32.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:27.0 (spuriousM:4.0 ,  14.8%) | ep_rewards:-0.29 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1826226 | GE:39828 | epochs:0.7  | ep_lens:9.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:8.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1826931 | GE:39845 | epochs:0.7  | ep_lens:66.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:58.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.53 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1827305 | GE:39853 | epochs:0.7  | ep_lens:49.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:40.0 (spuriousM:7.0 ,  17.5%) | ep_rewards:-0.47 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1827505 | GE:39859 | epochs:0.7  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.23 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1827791 | GE:39867 | epochs:0.7  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.29 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1828134 | GE:39877 | epochs:0.7  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.29 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1828378 | GE:39885 | epochs:0.7  | ep_lens:29.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.20 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1828864 | GE:39897 | epochs:0.7  | ep_lens:51.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:46.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.38 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1829011 | GE:39902 | epochs:0.7  | ep_lens:23.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.14 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1829935 | GE:39923 | epochs:0.7  | ep_lens:82.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:73.0 (spuriousM:3.0 ,   4.1%) | ep_rewards:-0.64 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1830171 | GE:39930 | epochs:0.7  | ep_lens:38.0 | edits:6.0  (spuriousE:5.0 ,  83.3%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:0.66  | mean_Q:-0.06  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1830986 | GE:39949 | epochs:0.7  | ep_lens:82.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:70.0 (spuriousM:1.0 ,   1.4%) | ep_rewards:-0.71 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1831228 | GE:39958 | epochs:0.7  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.34 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1831382 | GE:39961 | epochs:0.7  | ep_lens:21.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:19.0 (spuriousM:3.0 ,  15.8%) | ep_rewards:-0.16 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1831765 | GE:39976 | epochs:0.7  | ep_lens:47.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:40.0 (spuriousM:8.0 ,  20.0%) | ep_rewards:-0.41 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1832276 | GE:39984 | epochs:0.7  | ep_lens:56.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:50.0 (spuriousM:5.0 ,  10.0%) | ep_rewards:-0.43 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1832586 | GE:39992 | epochs:0.7  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.29 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1832723 | GE:39996 | epochs:0.7  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1833134 | GE:40007 | epochs:0.7  | ep_lens:52.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:46.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.41 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1833298 | GE:40009 | epochs:0.7  | ep_lens:34.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:27.0 (spuriousM:5.0 ,  18.5%) | ep_rewards:-0.35 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1833550 | GE:40014 | epochs:0.7  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.29 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1833611 | GE:40018 | epochs:0.7  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1834195 | GE:40032 | epochs:0.7  | ep_lens:72.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:59.0 (spuriousM:5.0 ,   8.5%) | ep_rewards:-0.69 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1834575 | GE:40042 | epochs:0.7  | ep_lens:41.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:40.0 (spuriousM:4.0 ,  10.0%) | ep_rewards:-0.23 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1835301 | GE:40059 | epochs:0.7  | ep_lens:60.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:56.0 (spuriousM:6.0 ,  10.7%) | ep_rewards:-0.40 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1835606 | GE:40068 | epochs:0.7  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.21 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1836271 | GE:40081 | epochs:0.7  | ep_lens:64.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:59.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.45 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1836627 | GE:40091 | epochs:0.7  | ep_lens:57.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:46.0 (spuriousM:8.0 ,  17.4%) | ep_rewards:-0.56 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1837208 | GE:40106 | epochs:0.7  | ep_lens:69.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:61.0 (spuriousM:3.0 ,   4.9%) | ep_rewards:-0.55 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1837686 | GE:40112 | epochs:0.7  | ep_lens:59.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:53.0 (spuriousM:5.0 ,   9.4%) | ep_rewards:-0.45 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1838145 | GE:40124 | epochs:0.7  | ep_lens:68.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:60.0 (spuriousM:4.0 ,   6.7%) | ep_rewards:-0.54 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1838321 | GE:40132 | epochs:0.7  | ep_lens:26.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.23 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1839169 | GE:40150 | epochs:0.7  | ep_lens:82.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:70.0 (spuriousM:2.0 ,   2.9%) | ep_rewards:-0.71 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1839334 | GE:40155 | epochs:0.7  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.18 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1839641 | GE:40163 | epochs:0.7  | ep_lens:38.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.22 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1839963 | GE:40175 | epochs:0.7  | ep_lens:39.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.25 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1840149 | GE:40180 | epochs:0.7  | ep_lens:36.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.21 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1840328 | GE:40186 | epochs:0.7  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1840708 | GE:40193 | epochs:0.7  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.40 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1840948 | GE:40198 | epochs:0.7  | ep_lens:51.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:43.0 (spuriousM:8.0 ,  18.6%) | ep_rewards:-0.46 | mean_Q:0.08   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1841123 | GE:40203 | epochs:0.7  | ep_lens:25.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.23 | mean_Q:-0.03  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1841243 | GE:40206 | epochs:0.7  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1841355 | GE:40211 | epochs:0.7  | ep_lens:21.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.13 | mean_Q:0.00   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1842015 | GE:40228 | epochs:0.7  | ep_lens:71.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:63.0 (spuriousM:9.0 ,  14.3%) | ep_rewards:-0.56 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1842375 | GE:40238 | epochs:0.7  | ep_lens:47.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:39.0 (spuriousM:5.0 ,  12.8%) | ep_rewards:-0.44 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1842866 | GE:40247 | epochs:0.7  | ep_lens:71.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:60.0 (spuriousM:20.0,  33.3%) | ep_rewards:-0.63 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1843205 | GE:40257 | epochs:0.7  | ep_lens:43.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.27 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1843559 | GE:40261 | epochs:0.7  | ep_lens:51.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.41 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1843893 | GE:40269 | epochs:0.7  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.31 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1844322 | GE:40279 | epochs:0.7  | ep_lens:50.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.53 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1845044 | GE:40296 | epochs:0.7  | ep_lens:75.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:65.0 (spuriousM:3.0 ,   4.6%) | ep_rewards:-0.63 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1845596 | GE:40311 | epochs:0.7  | ep_lens:65.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:59.0 (spuriousM:5.0 ,   8.5%) | ep_rewards:-0.48 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1845878 | GE:40316 | epochs:0.7  | ep_lens:31.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.21 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1846454 | GE:40328 | epochs:0.7  | ep_lens:68.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:55.0 (spuriousM:12.0,  21.8%) | ep_rewards:-0.67 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1846536 | GE:40330 | epochs:0.7  | ep_lens:18.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.12 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1846672 | GE:40335 | epochs:0.7  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1846839 | GE:40337 | epochs:0.7  | ep_lens:32.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.26 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1846974 | GE:40340 | epochs:0.7  | ep_lens:25.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:19.0 (spuriousM:3.0 ,  15.8%) | ep_rewards:-0.28 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1847088 | GE:40344 | epochs:0.7  | ep_lens:23.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:20.0 (spuriousM:3.0 ,  15.0%) | ep_rewards:-0.19 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1847717 | GE:40359 | epochs:0.7  | ep_lens:60.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:54.0 (spuriousM:4.0 ,   7.4%) | ep_rewards:-0.45 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1847857 | GE:40364 | epochs:0.7  | ep_lens:22.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.16 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1848485 | GE:40378 | epochs:0.7  | ep_lens:61.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:52.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.53 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1849155 | GE:40398 | epochs:0.7  | ep_lens:55.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:47.0 (spuriousM:3.0 ,   6.4%) | ep_rewards:-0.48 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1849319 | GE:40403 | epochs:0.7  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1849448 | GE:40409 | epochs:0.7  | ep_lens:18.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:3.0 ,  16.7%) | ep_rewards:-0.09 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1849533 | GE:40410 | epochs:0.7  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:0.01   | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1849808 | GE:40418 | epochs:0.7  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.21 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1850007 | GE:40423 | epochs:0.7  | ep_lens:29.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.20 | mean_Q:0.06   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1850235 | GE:40426 | epochs:0.7  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.27 | mean_Q:0.02   | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1850557 | GE:40436 | epochs:0.7  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.33 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1851097 | GE:40447 | epochs:0.7  | ep_lens:62.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.51 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1851208 | GE:40451 | epochs:0.7  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1851412 | GE:40454 | epochs:0.7  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:14.0,  41.2%) | ep_rewards:-0.38 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1851617 | GE:40460 | epochs:0.7  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1852639 | GE:40481 | epochs:0.7  | ep_lens:90.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:78.0 (spuriousM:1.0 ,   1.3%) | ep_rewards:-0.75 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1853040 | GE:40490 | epochs:0.7  | ep_lens:47.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.46 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1853921 | GE:40509 | epochs:0.7  | ep_lens:73.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:64.0 (spuriousM:2.0 ,   3.1%) | ep_rewards:-0.59 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1854035 | GE:40512 | epochs:0.7  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.09  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1854578 | GE:40522 | epochs:0.7  | ep_lens:55.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.40 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1854676 | GE:40524 | epochs:0.7  | ep_lens:23.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.19 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1855190 | GE:40534 | epochs:0.7  | ep_lens:54.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:50.0 (spuriousM:8.0 ,  16.0%) | ep_rewards:-0.37 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1855456 | GE:40540 | epochs:0.7  | ep_lens:48.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.34 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1855993 | GE:40551 | epochs:0.7  | ep_lens:65.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:59.0 (spuriousM:10.0,  16.9%) | ep_rewards:-0.48 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1856379 | GE:40559 | epochs:0.7  | ep_lens:55.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:48.0 (spuriousM:7.0 ,  14.6%) | ep_rewards:-0.45 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1856724 | GE:40568 | epochs:0.7  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.28 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1857341 | GE:40580 | epochs:0.7  | ep_lens:69.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:59.0 (spuriousM:1.0 ,   1.7%) | ep_rewards:-0.60 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1857548 | GE:40586 | epochs:0.7  | ep_lens:28.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.27 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1858401 | GE:40606 | epochs:0.7  | ep_lens:71.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:66.0 (spuriousM:3.0 ,   4.5%) | ep_rewards:-0.48 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1858698 | GE:40611 | epochs:0.7  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.38 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1858866 | GE:40616 | epochs:0.7  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.28 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1859903 | GE:40639 | epochs:0.7  | ep_lens:80.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:73.0 (spuriousM:14.0,  19.2%) | ep_rewards:-0.58 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1860160 | GE:40646 | epochs:0.7  | ep_lens:30.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.20 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1860371 | GE:40650 | epochs:0.7  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.31 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1860489 | GE:40653 | epochs:0.7  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.14  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1860827 | GE:40663 | epochs:0.7  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.21 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1861367 | GE:40674 | epochs:0.7  | ep_lens:58.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:49.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.52 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1861605 | GE:40681 | epochs:0.7  | ep_lens:31.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.28 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1861810 | GE:40684 | epochs:0.7  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.21 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1862232 | GE:40699 | epochs:0.7  | ep_lens:61.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:48.0 (spuriousM:6.0 ,  12.5%) | ep_rewards:-0.63 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1862489 | GE:40703 | epochs:0.7  | ep_lens:43.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.42 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1862755 | GE:40708 | epochs:0.7  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:5.0 ,  11.9%) | ep_rewards:-0.39 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1863185 | GE:40719 | epochs:0.7  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:4.0 ,   8.0%) | ep_rewards:-0.46 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1863500 | GE:40728 | epochs:0.7  | ep_lens:48.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.47 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1863636 | GE:40729 | epochs:0.7  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1863822 | GE:40732 | epochs:0.7  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.21 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1864335 | GE:40741 | epochs:0.7  | ep_lens:70.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:61.0 (spuriousM:8.0 ,  13.1%) | ep_rewards:-0.58 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1864522 | GE:40745 | epochs:0.7  | ep_lens:34.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.37 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1864873 | GE:40750 | epochs:0.7  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.30 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1865378 | GE:40762 | epochs:0.7  | ep_lens:59.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:50.0 (spuriousM:3.0 ,   6.0%) | ep_rewards:-0.52 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1865443 | GE:40763 | epochs:0.7  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1865630 | GE:40769 | epochs:0.7  | ep_lens:34.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:32.0 (spuriousM:5.0 ,  15.6%) | ep_rewards:-0.22 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1865726 | GE:40771 | epochs:0.7  | ep_lens:9.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:8.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.21  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1867009 | GE:40793 | epochs:0.7  | ep_lens:100.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:93.0 (spuriousM:4.0 ,   4.3%) | ep_rewards:-0.68 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1867874 | GE:40812 | epochs:0.7  | ep_lens:83.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:76.0 (spuriousM:3.0 ,   3.9%) | ep_rewards:-0.59 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1868102 | GE:40818 | epochs:0.7  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.32 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1868558 | GE:40826 | epochs:0.7  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.33 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1868788 | GE:40832 | epochs:0.7  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.22 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1868969 | GE:40836 | epochs:0.7  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:5.0 ,  17.9%) | ep_rewards:-0.23 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1869575 | GE:40850 | epochs:0.7  | ep_lens:55.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:51.0 (spuriousM:4.0 ,   7.8%) | ep_rewards:-0.38 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1869753 | GE:40857 | epochs:0.7  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:4.0 ,  15.4%) | ep_rewards:-0.25 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1871036 | GE:40880 | epochs:0.7  | ep_lens:100.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:84.0 (spuriousM:2.0 ,   2.4%) | ep_rewards:-0.90 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1871237 | GE:40886 | epochs:0.7  | ep_lens:33.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.22 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1871918 | GE:40905 | epochs:0.7  | ep_lens:56.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:55.0 (spuriousM:3.0 ,   5.5%) | ep_rewards:-0.31 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1872322 | GE:40912 | epochs:0.7  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:9.0 ,  22.0%) | ep_rewards:-0.36 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1872472 | GE:40917 | epochs:0.7  | ep_lens:29.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.32 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1872756 | GE:40922 | epochs:0.7  | ep_lens:53.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.49 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1872917 | GE:40926 | epochs:0.7  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.15  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1873348 | GE:40934 | epochs:0.7  | ep_lens:60.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:55.0 (spuriousM:7.0 ,  12.7%) | ep_rewards:-0.43 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1873711 | GE:40945 | epochs:0.7  | ep_lens:42.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.26 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1873811 | GE:40950 | epochs:0.7  | ep_lens:22.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.08  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1874137 | GE:40958 | epochs:0.7  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:5.0 ,  12.5%) | ep_rewards:-0.38 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1874338 | GE:40961 | epochs:0.7  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.32 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1874504 | GE:40964 | epochs:0.7  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:12.0,  35.3%) | ep_rewards:-0.26 | mean_Q:0.05   | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1874790 | GE:40969 | epochs:0.7  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.30 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1875082 | GE:40977 | epochs:0.7  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:5.0 ,  13.9%) | ep_rewards:-0.30 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1875831 | GE:40992 | epochs:0.7  | ep_lens:66.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:60.0 (spuriousM:5.0 ,   8.3%) | ep_rewards:-0.48 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1876175 | GE:41000 | epochs:0.7  | ep_lens:50.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:47.0 (spuriousM:11.0,  23.4%) | ep_rewards:-0.33 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1876529 | GE:41007 | epochs:0.7  | ep_lens:59.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:52.0 (spuriousM:7.0 ,  13.5%) | ep_rewards:-0.47 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1877138 | GE:41021 | epochs:0.7  | ep_lens:76.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:69.0 (spuriousM:7.0 ,  10.1%) | ep_rewards:-0.56 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1877262 | GE:41024 | epochs:0.7  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.14  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1877831 | GE:41037 | epochs:0.7  | ep_lens:62.0 | edits:4.0  (spuriousE:3.0 ,  75.0%) | moves:58.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.37 | mean_Q:-0.17  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:1878051 | GE:41042 | epochs:0.7  | ep_lens:40.0 | edits:6.0  (spuriousE:5.0 ,  83.3%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.31 | mean_Q:-0.10  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:1878502 | GE:41050 | epochs:0.7  | ep_lens:66.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:57.0 (spuriousM:7.0 ,  12.3%) | ep_rewards:-0.56 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1878802 | GE:41057 | epochs:0.7  | ep_lens:27.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:26.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.26  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1879289 | GE:41068 | epochs:0.7  | ep_lens:55.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.45 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1879709 | GE:41077 | epochs:0.7  | ep_lens:45.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.43 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1879954 | GE:41081 | epochs:0.7  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.33 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1880144 | GE:41087 | epochs:0.7  | ep_lens:34.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.32 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1880377 | GE:41092 | epochs:0.7  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.19 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1880547 | GE:41095 | epochs:0.7  | ep_lens:24.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1880802 | GE:41102 | epochs:0.7  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:8.0 ,  21.6%) | ep_rewards:-0.37 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1881066 | GE:41106 | epochs:0.7  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.30 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1881375 | GE:41111 | epochs:0.7  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.28 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1881501 | GE:41116 | epochs:0.7  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.24  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1882229 | GE:41130 | epochs:0.7  | ep_lens:89.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:75.0 (spuriousM:13.0,  17.3%) | ep_rewards:-0.80 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1882949 | GE:41145 | epochs:0.7  | ep_lens:77.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:63.0 (spuriousM:2.0 ,   3.2%) | ep_rewards:-0.74 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1883064 | GE:41149 | epochs:0.7  | ep_lens:19.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:18.0 (spuriousM:1.0 ,   5.6%) | ep_rewards:-0.12 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1883450 | GE:41160 | epochs:0.7  | ep_lens:47.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.31 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1883755 | GE:41167 | epochs:0.7  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.31 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1883914 | GE:41169 | epochs:0.7  | ep_lens:29.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.20 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1884359 | GE:41183 | epochs:0.7  | ep_lens:52.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:50.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.31 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1884918 | GE:41192 | epochs:0.7  | ep_lens:66.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:58.0 (spuriousM:6.0 ,  10.3%) | ep_rewards:-0.53 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1885174 | GE:41199 | epochs:0.7  | ep_lens:49.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:39.0 (spuriousM:5.0 ,  12.8%) | ep_rewards:-0.50 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1885299 | GE:41202 | epochs:0.7  | ep_lens:21.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:18.0 (spuriousM:1.0 ,   5.6%) | ep_rewards:-0.18 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1885519 | GE:41207 | epochs:0.7  | ep_lens:34.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:27.0 (spuriousM:5.0 ,  18.5%) | ep_rewards:-0.35 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1885841 | GE:41214 | epochs:0.7  | ep_lens:48.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.49 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1886001 | GE:41216 | epochs:0.7  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.22 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1886272 | GE:41223 | epochs:0.7  | ep_lens:47.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.64 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1886420 | GE:41229 | epochs:0.7  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.19 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1887031 | GE:41243 | epochs:0.7  | ep_lens:64.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:55.0 (spuriousM:5.0 ,   9.1%) | ep_rewards:-0.55 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1887551 | GE:41254 | epochs:0.7  | ep_lens:59.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:48.0 (spuriousM:2.0 ,   4.2%) | ep_rewards:-0.57 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1888067 | GE:41262 | epochs:0.7  | ep_lens:62.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:52.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.56 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1888324 | GE:41268 | epochs:0.7  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.26 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1888695 | GE:41277 | epochs:0.7  | ep_lens:65.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:51.0 (spuriousM:6.0 ,  11.8%) | ep_rewards:-0.68 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1889110 | GE:41288 | epochs:0.7  | ep_lens:55.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.50 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1889333 | GE:41291 | epochs:0.7  | ep_lens:37.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.31 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1889567 | GE:41299 | epochs:0.7  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.33 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1889717 | GE:41302 | epochs:0.7  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.16 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1890360 | GE:41315 | epochs:0.7  | ep_lens:74.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:60.0 (spuriousM:8.0 ,  13.3%) | ep_rewards:-0.72 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1890655 | GE:41322 | epochs:0.7  | ep_lens:29.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:27.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.25  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1890918 | GE:41326 | epochs:0.7  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.27 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1891290 | GE:41337 | epochs:0.7  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:5.0 ,  13.9%) | ep_rewards:-0.33 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1891726 | GE:41344 | epochs:0.7  | ep_lens:59.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.57 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1892043 | GE:41353 | epochs:0.7  | ep_lens:46.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.43 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1892291 | GE:41358 | epochs:0.7  | ep_lens:29.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.25 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1892635 | GE:41368 | epochs:0.7  | ep_lens:46.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.43 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1892885 | GE:41373 | epochs:0.7  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:7.0 ,  19.4%) | ep_rewards:-0.30 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1893255 | GE:41386 | epochs:0.7  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:6.0 ,  15.8%) | ep_rewards:-0.34 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1893655 | GE:41395 | epochs:0.7  | ep_lens:48.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:44.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.34 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1894403 | GE:41413 | epochs:0.7  | ep_lens:69.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:59.0 (spuriousM:6.0 ,  10.2%) | ep_rewards:-0.60 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1894913 | GE:41424 | epochs:0.7  | ep_lens:71.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:59.0 (spuriousM:11.0,  18.6%) | ep_rewards:-0.66 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1895528 | GE:41443 | epochs:0.7  | ep_lens:56.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.58 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1896075 | GE:41458 | epochs:0.7  | ep_lens:58.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:49.0 (spuriousM:5.0 ,  10.2%) | ep_rewards:-0.52 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1896490 | GE:41465 | epochs:0.7  | ep_lens:43.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:40.0 (spuriousM:5.0 ,  12.5%) | ep_rewards:-0.29 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1896743 | GE:41473 | epochs:0.7  | ep_lens:46.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:35.0 (spuriousM:9.0 ,  25.7%) | ep_rewards:-0.51 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1896850 | GE:41476 | epochs:0.7  | ep_lens:24.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:19.0 (spuriousM:3.0 ,  15.8%) | ep_rewards:-0.25 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1897257 | GE:41489 | epochs:0.7  | ep_lens:29.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:28.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.23  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1897505 | GE:41494 | epochs:0.7  | ep_lens:47.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.46 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1898103 | GE:41503 | epochs:0.7  | ep_lens:68.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:56.0 (spuriousM:3.0 ,   5.4%) | ep_rewards:-0.64 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1898321 | GE:41509 | epochs:0.7  | ep_lens:34.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.32 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1898856 | GE:41525 | epochs:0.7  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:7.0 ,  16.3%) | ep_rewards:-0.43 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1898987 | GE:41528 | epochs:0.7  | ep_lens:23.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.22 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1899246 | GE:41537 | epochs:0.7  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.25 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1899563 | GE:41545 | epochs:0.7  | ep_lens:46.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.41 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1899708 | GE:41551 | epochs:0.7  | ep_lens:23.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.17 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1899915 | GE:41556 | epochs:0.7  | ep_lens:26.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.18 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1900372 | GE:41568 | epochs:0.7  | ep_lens:41.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.23 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1900587 | GE:41575 | epochs:0.7  | ep_lens:29.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.17 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1900808 | GE:41581 | epochs:0.7  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.31 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1901022 | GE:41588 | epochs:0.7  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.23 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1901280 | GE:41594 | epochs:0.7  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.33 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1902157 | GE:41618 | epochs:0.7  | ep_lens:81.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:73.0 (spuriousM:1.0 ,   1.4%) | ep_rewards:-0.61 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1902281 | GE:41622 | epochs:0.7  | ep_lens:24.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.17 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1902665 | GE:41631 | epochs:0.7  | ep_lens:37.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.19 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1902791 | GE:41636 | epochs:0.7  | ep_lens:21.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.16 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1903392 | GE:41649 | epochs:0.7  | ep_lens:55.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:49.0 (spuriousM:2.0 ,   4.1%) | ep_rewards:-0.43 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1904026 | GE:41664 | epochs:0.7  | ep_lens:58.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:53.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.42 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1904153 | GE:41669 | epochs:0.7  | ep_lens:24.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:0.85  | mean_Q:-0.08  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1904202 | GE:41673 | epochs:0.7  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.10  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1904499 | GE:41677 | epochs:0.7  | ep_lens:26.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:25.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1904849 | GE:41690 | epochs:0.7  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.36 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1905190 | GE:41698 | epochs:0.7  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.33 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1905341 | GE:41701 | epochs:0.7  | ep_lens:22.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:0.02   | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1905558 | GE:41705 | epochs:0.7  | ep_lens:32.0 | edits:6.0  (spuriousE:5.0 ,  83.3%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.27 | mean_Q:0.03   | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:1905699 | GE:41708 | epochs:0.7  | ep_lens:17.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.01  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1906033 | GE:41713 | epochs:0.7  | ep_lens:64.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:55.0 (spuriousM:8.0 ,  14.5%) | ep_rewards:-0.55 | mean_Q:0.02   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1906137 | GE:41715 | epochs:0.7  | ep_lens:21.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.11 | mean_Q:0.00   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1906235 | GE:41718 | epochs:0.7  | ep_lens:20.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.13 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1906469 | GE:41721 | epochs:0.7  | ep_lens:32.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.31 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1907539 | GE:41751 | epochs:0.7  | ep_lens:100.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:89.0 (spuriousM:3.0 ,   3.4%) | ep_rewards:-0.78 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1908055 | GE:41767 | epochs:0.7  | ep_lens:53.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.47 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1908127 | GE:41769 | epochs:0.7  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:0.03   | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1908599 | GE:41784 | epochs:0.7  | ep_lens:58.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:55.0 (spuriousM:10.0,  18.2%) | ep_rewards:-0.37 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1909260 | GE:41797 | epochs:0.7  | ep_lens:63.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:58.0 (spuriousM:3.0 ,   5.2%) | ep_rewards:-0.44 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1909738 | GE:41812 | epochs:0.7  | ep_lens:65.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:54.0 (spuriousM:7.0 ,  13.0%) | ep_rewards:-0.60 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1910342 | GE:41826 | epochs:0.7  | ep_lens:69.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:62.0 (spuriousM:13.0,  21.0%) | ep_rewards:-0.52 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1910566 | GE:41829 | epochs:0.7  | ep_lens:40.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.35 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1911019 | GE:41838 | epochs:0.7  | ep_lens:67.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:54.0 (spuriousM:12.0,  22.2%) | ep_rewards:-0.66 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1911188 | GE:41845 | epochs:0.7  | ep_lens:25.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.15 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1911692 | GE:41853 | epochs:0.7  | ep_lens:63.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:51.0 (spuriousM:6.0 ,  11.8%) | ep_rewards:-0.62 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1912353 | GE:41870 | epochs:0.7  | ep_lens:67.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:62.0 (spuriousM:5.0 ,   8.1%) | ep_rewards:-0.46 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1912788 | GE:41880 | epochs:0.7  | ep_lens:52.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:48.0 (spuriousM:2.0 ,   4.2%) | ep_rewards:-0.36 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1912959 | GE:41883 | epochs:0.7  | ep_lens:36.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.36 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1913234 | GE:41887 | epochs:0.7  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.37 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1913481 | GE:41892 | epochs:0.7  | ep_lens:44.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.40 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1913683 | GE:41896 | epochs:0.7  | ep_lens:30.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.28 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1914344 | GE:41910 | epochs:0.7  | ep_lens:74.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:61.0 (spuriousM:6.0 ,   9.8%) | ep_rewards:-0.70 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1914499 | GE:41914 | epochs:0.7  | ep_lens:24.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.20 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1914749 | GE:41920 | epochs:0.7  | ep_lens:28.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:27.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.25  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1914835 | GE:41922 | epochs:0.7  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1915053 | GE:41928 | epochs:0.7  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.23 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1915312 | GE:41934 | epochs:0.7  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.36 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1916175 | GE:41953 | epochs:0.7  | ep_lens:89.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:72.0 (spuriousM:7.0 ,   9.7%) | ep_rewards:-0.87 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1916407 | GE:41958 | epochs:0.7  | ep_lens:39.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.42 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1916868 | GE:41968 | epochs:0.7  | ep_lens:67.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:56.0 (spuriousM:5.0 ,   8.9%) | ep_rewards:-0.61 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1917138 | GE:41972 | epochs:0.7  | ep_lens:43.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.32 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1917365 | GE:41975 | epochs:0.7  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.31 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1917651 | GE:41983 | epochs:0.7  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.27 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1918224 | GE:41997 | epochs:0.7  | ep_lens:52.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:46.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.41 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1918251 | GE:41999 | epochs:0.7  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1918656 | GE:42012 | epochs:0.7  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:8.0 ,  22.2%) | ep_rewards:-0.30 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1918990 | GE:42020 | epochs:0.7  | ep_lens:38.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.24 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1919360 | GE:42034 | epochs:0.7  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.43 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1919502 | GE:42039 | epochs:0.7  | ep_lens:22.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.14 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1919945 | GE:42051 | epochs:0.7  | ep_lens:47.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.41 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1920076 | GE:42052 | epochs:0.7  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.06  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1920310 | GE:42059 | epochs:0.7  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.27 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1920779 | GE:42070 | epochs:0.7  | ep_lens:59.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:55.0 (spuriousM:2.0 ,   3.6%) | ep_rewards:-0.40 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1920948 | GE:42075 | epochs:0.7  | ep_lens:27.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:23.0 (spuriousM:3.0 ,  13.0%) | ep_rewards:-0.24 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1921473 | GE:42083 | epochs:0.7  | ep_lens:58.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:49.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.52 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1921718 | GE:42090 | epochs:0.7  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.27 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1921940 | GE:42093 | epochs:0.7  | ep_lens:29.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.17 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1922268 | GE:42100 | epochs:0.7  | ep_lens:55.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:46.0 (spuriousM:5.0 ,  10.9%) | ep_rewards:-0.50 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1922549 | GE:42109 | epochs:0.7  | ep_lens:36.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.23 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1922669 | GE:42112 | epochs:0.7  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1922932 | GE:42121 | epochs:0.7  | ep_lens:32.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.26 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1923105 | GE:42126 | epochs:0.7  | ep_lens:28.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.27 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1923431 | GE:42135 | epochs:0.7  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.37 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1923774 | GE:42141 | epochs:0.7  | ep_lens:47.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.31 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1924245 | GE:42154 | epochs:0.7  | ep_lens:54.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:47.0 (spuriousM:8.0 ,  17.0%) | ep_rewards:-0.45 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1924345 | GE:42155 | epochs:0.7  | ep_lens:16.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:15.0 (spuriousM:2.0 ,  13.3%) | ep_rewards:-0.10 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1924597 | GE:42160 | epochs:0.7  | ep_lens:49.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:37.0 (spuriousM:7.0 ,  18.9%) | ep_rewards:-0.55 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1924869 | GE:42167 | epochs:0.7  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:6.0 ,  18.2%) | ep_rewards:-0.23 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1924984 | GE:42171 | epochs:0.7  | ep_lens:20.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:18.0 (spuriousM:1.0 ,   5.6%) | ep_rewards:-0.15 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1925167 | GE:42176 | epochs:0.7  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1925577 | GE:42186 | epochs:0.7  | ep_lens:47.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.39 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1925831 | GE:42193 | epochs:0.7  | ep_lens:39.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.35 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1926220 | GE:42204 | epochs:0.7  | ep_lens:49.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.47 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1926630 | GE:42212 | epochs:0.7  | ep_lens:53.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.49 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1927195 | GE:42223 | epochs:0.7  | ep_lens:74.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:61.0 (spuriousM:11.0,  18.0%) | ep_rewards:-0.70 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1927419 | GE:42228 | epochs:0.7  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.29 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1927832 | GE:42241 | epochs:0.7  | ep_lens:43.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.42 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1928247 | GE:42247 | epochs:0.7  | ep_lens:48.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.34 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1928516 | GE:42251 | epochs:0.7  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.25 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1928608 | GE:42253 | epochs:0.7  | ep_lens:20.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:17.0 (spuriousM:2.0 ,  11.8%) | ep_rewards:-0.18 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1928819 | GE:42258 | epochs:0.7  | ep_lens:37.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:32.0 (spuriousM:5.0 ,  15.6%) | ep_rewards:-0.31 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1929124 | GE:42264 | epochs:0.7  | ep_lens:34.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.20 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1929324 | GE:42270 | epochs:0.7  | ep_lens:25.0 | edits:4.0  (spuriousE:3.0 ,  75.0%) | moves:21.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.77  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1929426 | GE:42272 | epochs:0.7  | ep_lens:21.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:18.0 (spuriousM:2.0 ,  11.1%) | ep_rewards:-0.18 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1929504 | GE:42274 | epochs:0.7  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.27  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1929662 | GE:42277 | epochs:0.7  | ep_lens:33.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.32 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1929849 | GE:42281 | epochs:0.7  | ep_lens:32.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.29 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1929973 | GE:42286 | epochs:0.7  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1930148 | GE:42289 | epochs:0.7  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.27  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1930441 | GE:42297 | epochs:0.7  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.36 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1930559 | GE:42300 | epochs:0.7  | ep_lens:23.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.19 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1930896 | GE:42308 | epochs:0.7  | ep_lens:49.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.45 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1931254 | GE:42314 | epochs:0.7  | ep_lens:52.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.46 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1931747 | GE:42325 | epochs:0.7  | ep_lens:52.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.51 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1932091 | GE:42332 | epochs:0.7  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.26 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1932464 | GE:42341 | epochs:0.7  | ep_lens:45.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.28 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1933279 | GE:42357 | epochs:0.7  | ep_lens:68.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:62.0 (spuriousM:3.0 ,   4.8%) | ep_rewards:-0.49 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1933416 | GE:42363 | epochs:0.7  | ep_lens:24.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.15 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1933621 | GE:42366 | epochs:0.7  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.20 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1933713 | GE:42371 | epochs:0.7  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.20  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1933914 | GE:42376 | epochs:0.7  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.26 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1934164 | GE:42383 | epochs:0.7  | ep_lens:28.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:27.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1934482 | GE:42391 | epochs:0.7  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:5.0 ,  12.2%) | ep_rewards:-0.33 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1934859 | GE:42399 | epochs:0.7  | ep_lens:38.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:37.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.78  | mean_Q:-0.10  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1935228 | GE:42403 | epochs:0.7  | ep_lens:61.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:56.0 (spuriousM:4.0 ,   7.1%) | ep_rewards:-0.43 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1935692 | GE:42411 | epochs:0.7  | ep_lens:66.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:59.0 (spuriousM:4.0 ,   6.8%) | ep_rewards:-0.51 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1936558 | GE:42430 | epochs:0.7  | ep_lens:85.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:76.0 (spuriousM:1.0 ,   1.3%) | ep_rewards:-0.65 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1936908 | GE:42434 | epochs:0.7  | ep_lens:59.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:51.0 (spuriousM:18.0,  35.3%) | ep_rewards:-0.50 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1937241 | GE:42443 | epochs:0.7  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:5.0 ,  14.3%) | ep_rewards:-0.33 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1937485 | GE:42448 | epochs:0.7  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.36 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1938050 | GE:42461 | epochs:0.7  | ep_lens:66.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:55.0 (spuriousM:4.0 ,   7.3%) | ep_rewards:-0.61 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1938246 | GE:42466 | epochs:0.7  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.31  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1938785 | GE:42477 | epochs:0.7  | ep_lens:63.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:55.0 (spuriousM:2.0 ,   3.6%) | ep_rewards:-0.52 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1939047 | GE:42487 | epochs:0.7  | ep_lens:39.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.30 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1939325 | GE:42495 | epochs:0.7  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.22 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1939615 | GE:42501 | epochs:0.7  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.30 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1939747 | GE:42507 | epochs:0.7  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1940311 | GE:42525 | epochs:0.7  | ep_lens:57.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:52.0 (spuriousM:4.0 ,   7.7%) | ep_rewards:-0.41 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1940456 | GE:42530 | epochs:0.7  | ep_lens:21.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.12  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1941004 | GE:42543 | epochs:0.7  | ep_lens:58.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:51.0 (spuriousM:6.0 ,  11.8%) | ep_rewards:-0.47 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1941400 | GE:42555 | epochs:0.7  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.37 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1942085 | GE:42568 | epochs:0.7  | ep_lens:62.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:54.0 (spuriousM:2.0 ,   3.7%) | ep_rewards:-0.51 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1942267 | GE:42574 | epochs:0.7  | ep_lens:38.0 | edits:5.0  (spuriousE:4.0 ,  80.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:0.68  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:1943234 | GE:42599 | epochs:0.7  | ep_lens:91.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:77.0 (spuriousM:7.0 ,   9.1%) | ep_rewards:-0.81 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1943329 | GE:42602 | epochs:0.7  | ep_lens:22.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.14 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1943748 | GE:42611 | epochs:0.7  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.43 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1943915 | GE:42615 | epochs:0.7  | ep_lens:24.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1944288 | GE:42625 | epochs:0.7  | ep_lens:40.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.25 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1944518 | GE:42634 | epochs:0.7  | ep_lens:34.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.35 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1944896 | GE:42645 | epochs:0.7  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:5.0 ,  13.2%) | ep_rewards:-0.37 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1945028 | GE:42648 | epochs:0.7  | ep_lens:22.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1945374 | GE:42656 | epochs:0.7  | ep_lens:55.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.53 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1945977 | GE:42669 | epochs:0.7  | ep_lens:68.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:62.0 (spuriousM:5.0 ,   8.1%) | ep_rewards:-0.49 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1946705 | GE:42684 | epochs:0.7  | ep_lens:69.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:62.0 (spuriousM:2.0 ,   3.2%) | ep_rewards:-0.52 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1946911 | GE:42689 | epochs:0.7  | ep_lens:45.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.45 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1947243 | GE:42694 | epochs:0.7  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.33 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1947416 | GE:42699 | epochs:0.7  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.23 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1947731 | GE:42707 | epochs:0.7  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.29 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1948108 | GE:42715 | epochs:0.7  | ep_lens:49.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:46.0 (spuriousM:5.0 ,  10.9%) | ep_rewards:-0.32 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1948217 | GE:42719 | epochs:0.7  | ep_lens:24.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:21.0 (spuriousM:4.0 ,  19.0%) | ep_rewards:-0.20 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1948514 | GE:42723 | epochs:0.7  | ep_lens:43.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.42 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1948788 | GE:42731 | epochs:0.7  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.35 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1949124 | GE:42740 | epochs:0.7  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.28 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1949328 | GE:42746 | epochs:0.7  | ep_lens:28.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.27 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1950072 | GE:42763 | epochs:0.7  | ep_lens:64.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:52.0 (spuriousM:4.0 ,   7.7%) | ep_rewards:-0.62 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1950385 | GE:42773 | epochs:0.7  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.31 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1950527 | GE:42776 | epochs:0.7  | ep_lens:24.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.17 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1950688 | GE:42778 | epochs:0.7  | ep_lens:25.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:21.0 (spuriousM:4.0 ,  19.0%) | ep_rewards:-0.23 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1950897 | GE:42785 | epochs:0.7  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:7.0 ,  21.9%) | ep_rewards:-0.25 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1951115 | GE:42794 | epochs:0.7  | ep_lens:28.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.17 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1951309 | GE:42797 | epochs:0.7  | ep_lens:35.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.35 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1951623 | GE:42806 | epochs:0.7  | ep_lens:46.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.43 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1951711 | GE:42808 | epochs:0.7  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1952209 | GE:42823 | epochs:0.7  | ep_lens:49.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.37 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1952442 | GE:42830 | epochs:0.7  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.31 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1952697 | GE:42835 | epochs:0.7  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.28 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1952810 | GE:42840 | epochs:0.7  | ep_lens:23.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.17 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1953131 | GE:42849 | epochs:0.7  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.38 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1953383 | GE:42857 | epochs:0.7  | ep_lens:38.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.24 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1953504 | GE:42859 | epochs:0.7  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.19 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1953602 | GE:42862 | epochs:0.7  | ep_lens:20.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:16.0 (spuriousM:3.0 ,  18.8%) | ep_rewards:-0.20 | mean_Q:0.01   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1953799 | GE:42866 | epochs:0.7  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:6.0 ,  19.4%) | ep_rewards:-0.37 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1954019 | GE:42870 | epochs:0.7  | ep_lens:35.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.35 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1954191 | GE:42875 | epochs:0.7  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.30 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1954373 | GE:42878 | epochs:0.7  | ep_lens:38.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.39 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1954698 | GE:42886 | epochs:0.7  | ep_lens:59.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:51.0 (spuriousM:6.0 ,  11.8%) | ep_rewards:-0.50 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1955015 | GE:42894 | epochs:0.7  | ep_lens:48.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.37 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1955668 | GE:42911 | epochs:0.7  | ep_lens:52.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:48.0 (spuriousM:3.0 ,   6.2%) | ep_rewards:-0.36 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1955764 | GE:42913 | epochs:0.7  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.21  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1956092 | GE:42922 | epochs:0.7  | ep_lens:50.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:46.0 (spuriousM:6.0 ,  13.0%) | ep_rewards:-0.35 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1956653 | GE:42930 | epochs:0.7  | ep_lens:79.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:65.0 (spuriousM:4.0 ,   6.2%) | ep_rewards:-0.75 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1957124 | GE:42941 | epochs:0.7  | ep_lens:68.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:55.0 (spuriousM:3.0 ,   5.5%) | ep_rewards:-0.67 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1957369 | GE:42946 | epochs:0.7  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.24 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1957785 | GE:42956 | epochs:0.7  | ep_lens:54.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.50 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1958259 | GE:42966 | epochs:0.7  | ep_lens:64.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:51.0 (spuriousM:6.0 ,  11.8%) | ep_rewards:-0.65 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1958399 | GE:42971 | epochs:0.7  | ep_lens:24.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:22.0 (spuriousM:3.0 ,  13.6%) | ep_rewards:-0.17 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1959185 | GE:42986 | epochs:0.7  | ep_lens:63.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:52.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.59 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1959535 | GE:42994 | epochs:0.7  | ep_lens:46.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:43.0 (spuriousM:6.0 ,  14.0%) | ep_rewards:-0.31 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1959745 | GE:43001 | epochs:0.7  | ep_lens:39.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.30 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1959898 | GE:43005 | epochs:0.7  | ep_lens:26.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:21.0 (spuriousM:3.0 ,  14.3%) | ep_rewards:-0.26 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1960014 | GE:43007 | epochs:0.7  | ep_lens:23.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.12 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1960289 | GE:43014 | epochs:0.7  | ep_lens:51.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:44.0 (spuriousM:9.0 ,  20.5%) | ep_rewards:-0.43 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1960659 | GE:43023 | epochs:0.7  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.43 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1960951 | GE:43030 | epochs:0.7  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.31 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1961145 | GE:43035 | epochs:0.7  | ep_lens:34.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:27.0 (spuriousM:4.0 ,  14.8%) | ep_rewards:-0.35 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1961572 | GE:43046 | epochs:0.7  | ep_lens:52.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.46 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1962101 | GE:43056 | epochs:0.7  | ep_lens:61.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:51.0 (spuriousM:4.0 ,   7.8%) | ep_rewards:-0.56 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1962552 | GE:43065 | epochs:0.7  | ep_lens:63.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:52.0 (spuriousM:9.0 ,  17.3%) | ep_rewards:-0.59 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1962762 | GE:43067 | epochs:0.7  | ep_lens:37.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.36 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1963132 | GE:43079 | epochs:0.7  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.39 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1963743 | GE:43091 | epochs:0.7  | ep_lens:61.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:55.0 (spuriousM:2.0 ,   3.6%) | ep_rewards:-0.46 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1964026 | GE:43097 | epochs:0.7  | ep_lens:40.0 | edits:5.0  (spuriousE:4.0 ,  80.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.29 | mean_Q:-0.14  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:1964506 | GE:43110 | epochs:0.7  | ep_lens:49.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.50 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1964609 | GE:43116 | epochs:0.7  | ep_lens:22.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:18.0 (spuriousM:3.0 ,  16.7%) | ep_rewards:-0.21 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1965024 | GE:43122 | epochs:0.7  | ep_lens:58.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.59 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1965253 | GE:43129 | epochs:0.7  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.16 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1965434 | GE:43135 | epochs:0.7  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.28  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1965653 | GE:43141 | epochs:0.7  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:5.0 ,  13.5%) | ep_rewards:-0.34 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1965872 | GE:43149 | epochs:0.7  | ep_lens:40.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:34.0 (spuriousM:6.0 ,  17.6%) | ep_rewards:-0.35 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1966099 | GE:43156 | epochs:0.7  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.23 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1966192 | GE:43157 | epochs:0.7  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.10  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1966665 | GE:43170 | epochs:0.7  | ep_lens:53.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:49.0 (spuriousM:3.0 ,   6.1%) | ep_rewards:-0.37 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1966853 | GE:43174 | epochs:0.7  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.18 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1967241 | GE:43184 | epochs:0.7  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.31 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1967710 | GE:43195 | epochs:0.7  | ep_lens:62.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.61 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1967779 | GE:43199 | epochs:0.7  | ep_lens:9.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:8.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1968052 | GE:43205 | epochs:0.7  | ep_lens:39.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.22 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1968368 | GE:43209 | epochs:0.7  | ep_lens:61.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.58 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1968457 | GE:43211 | epochs:0.7  | ep_lens:5.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:4.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.95  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1968704 | GE:43217 | epochs:0.7  | ep_lens:42.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.26 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1968887 | GE:43223 | epochs:0.7  | ep_lens:31.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.21 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1969381 | GE:43233 | epochs:0.7  | ep_lens:55.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:49.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.43 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1970381 | GE:43253 | epochs:0.7  | ep_lens:89.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:76.0 (spuriousM:10.0,  13.2%) | ep_rewards:-0.77 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1970639 | GE:43261 | epochs:0.7  | ep_lens:35.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.35 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1970793 | GE:43264 | epochs:0.7  | ep_lens:24.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.17 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1970918 | GE:43267 | epochs:0.7  | ep_lens:24.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.25 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1971556 | GE:43279 | epochs:0.7  | ep_lens:69.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:60.0 (spuriousM:3.0 ,   5.0%) | ep_rewards:-0.57 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1971842 | GE:43290 | epochs:0.7  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.29 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1972501 | GE:43304 | epochs:0.7  | ep_lens:60.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:53.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.48 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1972653 | GE:43309 | epochs:0.7  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.22  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1973169 | GE:43323 | epochs:0.7  | ep_lens:58.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.54 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1973278 | GE:43327 | epochs:0.7  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.13  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1973455 | GE:43330 | epochs:0.7  | ep_lens:30.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.30 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1973687 | GE:43335 | epochs:0.7  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.29 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1973959 | GE:43342 | epochs:0.7  | ep_lens:41.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.43 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1974188 | GE:43347 | epochs:0.7  | ep_lens:27.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:23.0 (spuriousM:3.0 ,  13.0%) | ep_rewards:-0.24 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1974749 | GE:43361 | epochs:0.7  | ep_lens:59.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:51.0 (spuriousM:2.0 ,   3.9%) | ep_rewards:-0.50 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1974879 | GE:43366 | epochs:0.7  | ep_lens:24.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.20 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1975376 | GE:43374 | epochs:0.7  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.46 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1975748 | GE:43383 | epochs:0.7  | ep_lens:47.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.44 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1976022 | GE:43389 | epochs:0.7  | ep_lens:40.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.23 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1976273 | GE:43397 | epochs:0.7  | ep_lens:39.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.35 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1976490 | GE:43401 | epochs:0.7  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.16 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1976744 | GE:43407 | epochs:0.7  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.26 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1977129 | GE:43416 | epochs:0.7  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.33 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1977463 | GE:43424 | epochs:0.7  | ep_lens:46.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.41 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1977966 | GE:43434 | epochs:0.7  | ep_lens:57.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:49.0 (spuriousM:2.0 ,   4.1%) | ep_rewards:-0.49 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1978936 | GE:43456 | epochs:0.7  | ep_lens:96.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:82.0 (spuriousM:5.0 ,   6.1%) | ep_rewards:-0.83 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1979106 | GE:43462 | epochs:0.7  | ep_lens:29.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:25.0 (spuriousM:5.0 ,  20.0%) | ep_rewards:-0.25 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1979629 | GE:43476 | epochs:0.7  | ep_lens:62.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:54.0 (spuriousM:2.0 ,   3.7%) | ep_rewards:-0.51 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1979868 | GE:43481 | epochs:0.7  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.19 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1980410 | GE:43497 | epochs:0.7  | ep_lens:54.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:48.0 (spuriousM:2.0 ,   4.2%) | ep_rewards:-0.42 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1980756 | GE:43505 | epochs:0.7  | ep_lens:37.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.31 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1981165 | GE:43515 | epochs:0.7  | ep_lens:57.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:46.0 (spuriousM:13.0,  28.3%) | ep_rewards:-0.56 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1981423 | GE:43522 | epochs:0.7  | ep_lens:32.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.31 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1981774 | GE:43531 | epochs:0.7  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.36 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1981891 | GE:43534 | epochs:0.7  | ep_lens:23.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.17 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1982173 | GE:43543 | epochs:0.7  | ep_lens:37.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.31 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1982338 | GE:43550 | epochs:0.7  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.22 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1982675 | GE:43559 | epochs:0.7  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.32 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1982754 | GE:43563 | epochs:0.7  | ep_lens:17.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:14.0 (spuriousM:1.0 ,   7.1%) | ep_rewards:-0.16 | mean_Q:0.05   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1982950 | GE:43568 | epochs:0.7  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.12  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1983395 | GE:43581 | epochs:0.7  | ep_lens:51.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:47.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.36 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1983650 | GE:43591 | epochs:0.7  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.30 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1984299 | GE:43607 | epochs:0.7  | ep_lens:52.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:44.0 (spuriousM:5.0 ,  11.4%) | ep_rewards:-0.46 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1984913 | GE:43622 | epochs:0.7  | ep_lens:65.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:55.0 (spuriousM:10.0,  18.2%) | ep_rewards:-0.58 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1985633 | GE:43636 | epochs:0.7  | ep_lens:63.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:53.0 (spuriousM:4.0 ,   7.5%) | ep_rewards:-0.57 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1986487 | GE:43657 | epochs:0.7  | ep_lens:83.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:67.0 (spuriousM:3.0 ,   4.5%) | ep_rewards:-0.82 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1986779 | GE:43665 | epochs:0.7  | ep_lens:39.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.30 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1987025 | GE:43672 | epochs:0.7  | ep_lens:50.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.53 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1987389 | GE:43682 | epochs:0.7  | ep_lens:44.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:41.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.30 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1987584 | GE:43688 | epochs:0.7  | ep_lens:27.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.24 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1987887 | GE:43696 | epochs:0.7  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.28 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1988417 | GE:43704 | epochs:0.7  | ep_lens:72.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:63.0 (spuriousM:2.0 ,   3.2%) | ep_rewards:-0.59 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1988698 | GE:43711 | epochs:0.7  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.33 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1988847 | GE:43715 | epochs:0.7  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.27  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1989186 | GE:43721 | epochs:0.7  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.26 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1989263 | GE:43723 | epochs:0.7  | ep_lens:17.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:16.0 (spuriousM:2.0 ,  12.5%) | ep_rewards:-0.11 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1989504 | GE:43732 | epochs:0.7  | ep_lens:28.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.17 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1989669 | GE:43736 | epochs:0.7  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.17  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1990182 | GE:43752 | epochs:0.7  | ep_lens:53.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.54 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1990568 | GE:43761 | epochs:0.7  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.39 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1990872 | GE:43767 | epochs:0.7  | ep_lens:28.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:27.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.21  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1990934 | GE:43770 | epochs:0.7  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.13  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1991124 | GE:43772 | epochs:0.7  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.30 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1991489 | GE:43782 | epochs:0.7  | ep_lens:51.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.51 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1991992 | GE:43792 | epochs:0.7  | ep_lens:52.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.41 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1992656 | GE:43808 | epochs:0.7  | ep_lens:76.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:60.0 (spuriousM:9.0 ,  15.0%) | ep_rewards:-0.78 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1992783 | GE:43810 | epochs:0.7  | ep_lens:21.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:19.0 (spuriousM:3.0 ,  15.8%) | ep_rewards:-0.16 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1992929 | GE:43815 | epochs:0.7  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.19  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:1993150 | GE:43820 | epochs:0.7  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.19 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1993495 | GE:43831 | epochs:0.7  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.33 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1993736 | GE:43836 | epochs:0.7  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.26 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1994232 | GE:43845 | epochs:0.7  | ep_lens:62.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:50.0 (spuriousM:6.0 ,  12.0%) | ep_rewards:-0.61 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1994806 | GE:43860 | epochs:0.7  | ep_lens:53.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:48.0 (spuriousM:3.0 ,   6.2%) | ep_rewards:-0.39 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1995146 | GE:43868 | epochs:0.7  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.37 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1995245 | GE:43872 | epochs:0.7  | ep_lens:9.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:8.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.26  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:1995594 | GE:43877 | epochs:0.7  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.33 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1995991 | GE:43889 | epochs:0.7  | ep_lens:41.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.26 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1996614 | GE:43901 | epochs:0.7  | ep_lens:68.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:59.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.57 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1996772 | GE:43907 | epochs:0.7  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.16 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1997289 | GE:43919 | epochs:0.7  | ep_lens:56.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.56 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1997561 | GE:43927 | epochs:0.7  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.27 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1997679 | GE:43930 | epochs:0.7  | ep_lens:24.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.17 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1997870 | GE:43936 | epochs:0.7  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:4.0 ,  13.8%) | ep_rewards:-0.27 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1998641 | GE:43956 | epochs:0.7  | ep_lens:63.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:58.0 (spuriousM:3.0 ,   5.2%) | ep_rewards:-0.44 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1999082 | GE:43968 | epochs:0.7  | ep_lens:51.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.48 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1999242 | GE:43974 | epochs:0.7  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.21 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1999615 | GE:43981 | epochs:0.7  | ep_lens:53.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:40.0 (spuriousM:11.0,  27.5%) | ep_rewards:-0.59 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:1999843 | GE:43989 | epochs:0.7  | ep_lens:34.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:27.0 (spuriousM:4.0 ,  14.8%) | ep_rewards:-0.35 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2000069 | GE:43995 | epochs:0.7  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:5.0 ,  13.5%) | ep_rewards:-0.34 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2000651 | GE:44008 | epochs:0.7  | ep_lens:58.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:50.0 (spuriousM:3.0 ,   6.0%) | ep_rewards:-0.49 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2000843 | GE:44016 | epochs:0.7  | ep_lens:30.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.28 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2001016 | GE:44018 | epochs:0.7  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.29 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2001383 | GE:44026 | epochs:0.7  | ep_lens:54.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:40.0 (spuriousM:6.0 ,  15.0%) | ep_rewards:-0.62 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2001962 | GE:44041 | epochs:0.7  | ep_lens:60.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:52.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.50 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2002156 | GE:44047 | epochs:0.7  | ep_lens:25.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.25 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2002406 | GE:44052 | epochs:0.7  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:4.0 ,  14.3%) | ep_rewards:-0.23 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2002642 | GE:44059 | epochs:0.7  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.29 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2002722 | GE:44062 | epochs:0.7  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2003025 | GE:44069 | epochs:0.7  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.36 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2003145 | GE:44072 | epochs:0.7  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.22  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2003633 | GE:44084 | epochs:0.7  | ep_lens:36.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:29.0 (spuriousM:4.0 ,  13.8%) | ep_rewards:-0.36 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2004060 | GE:44096 | epochs:0.7  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.43 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2004234 | GE:44099 | epochs:0.7  | ep_lens:26.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.21 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2004528 | GE:44108 | epochs:0.7  | ep_lens:44.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:43.0 (spuriousM:10.0,  23.3%) | ep_rewards:-0.25 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2004753 | GE:44113 | epochs:0.7  | ep_lens:40.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:34.0 (spuriousM:6.0 ,  17.6%) | ep_rewards:-0.35 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2005148 | GE:44122 | epochs:0.7  | ep_lens:53.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:41.0 (spuriousM:5.0 ,  12.2%) | ep_rewards:-0.57 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2005943 | GE:44135 | epochs:0.7  | ep_lens:82.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:71.0 (spuriousM:3.0 ,   4.2%) | ep_rewards:-0.69 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2006325 | GE:44148 | epochs:0.7  | ep_lens:48.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.47 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2006600 | GE:44156 | epochs:0.7  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:4.0 ,  15.4%) | ep_rewards:-0.25 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2006904 | GE:44161 | epochs:0.7  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:5.0 ,  13.2%) | ep_rewards:-0.34 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2007161 | GE:44169 | epochs:0.7  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.32 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2007491 | GE:44175 | epochs:0.7  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.33 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2007627 | GE:44180 | epochs:0.7  | ep_lens:24.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.15 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2008111 | GE:44192 | epochs:0.7  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.43 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2008249 | GE:44198 | epochs:0.7  | ep_lens:25.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:24.0 (spuriousM:4.0 ,  16.7%) | ep_rewards:-0.15 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2008459 | GE:44204 | epochs:0.7  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.31 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2008682 | GE:44206 | epochs:0.7  | ep_lens:27.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.24 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2008830 | GE:44213 | epochs:0.7  | ep_lens:23.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.17 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2009463 | GE:44230 | epochs:0.7  | ep_lens:65.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:58.0 (spuriousM:1.0 ,   1.7%) | ep_rewards:-0.50 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2009619 | GE:44235 | epochs:0.7  | ep_lens:22.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:19.0 (spuriousM:4.0 ,  21.1%) | ep_rewards:-0.19 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2010142 | GE:44248 | epochs:0.7  | ep_lens:58.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:54.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.39 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2010680 | GE:44263 | epochs:0.7  | ep_lens:70.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:61.0 (spuriousM:4.0 ,   6.6%) | ep_rewards:-0.58 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2011230 | GE:44274 | epochs:0.7  | ep_lens:51.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.41 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2011327 | GE:44278 | epochs:0.7  | ep_lens:20.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.13 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2011494 | GE:44284 | epochs:0.7  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2012251 | GE:44299 | epochs:0.7  | ep_lens:63.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:58.0 (spuriousM:4.0 ,   6.9%) | ep_rewards:-0.44 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2012572 | GE:44306 | epochs:0.7  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:5.0 ,  11.9%) | ep_rewards:-0.33 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2012674 | GE:44309 | epochs:0.7  | ep_lens:23.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.22 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2013051 | GE:44319 | epochs:0.7  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:4.0 ,   9.3%) | ep_rewards:-0.43 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2013554 | GE:44330 | epochs:0.7  | ep_lens:67.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:62.0 (spuriousM:8.0 ,  12.9%) | ep_rewards:-0.46 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2013832 | GE:44334 | epochs:0.7  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.36 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2014378 | GE:44343 | epochs:0.7  | ep_lens:77.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:66.0 (spuriousM:4.0 ,   6.1%) | ep_rewards:-0.66 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2014610 | GE:44349 | epochs:0.7  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.28 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2014981 | GE:44359 | epochs:0.7  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.31 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2015471 | GE:44369 | epochs:0.7  | ep_lens:56.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:49.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.46 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2015770 | GE:44378 | epochs:0.7  | ep_lens:47.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.44 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2015982 | GE:44384 | epochs:0.7  | ep_lens:26.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:24.0 (spuriousM:4.0 ,  16.7%) | ep_rewards:-0.18 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2016234 | GE:44388 | epochs:0.7  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.34 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2016814 | GE:44404 | epochs:0.7  | ep_lens:57.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:51.0 (spuriousM:2.0 ,   3.9%) | ep_rewards:-0.44 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2016940 | GE:44406 | epochs:0.7  | ep_lens:24.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.22 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2017621 | GE:44420 | epochs:0.7  | ep_lens:66.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:59.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.51 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2017877 | GE:44424 | epochs:0.7  | ep_lens:32.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:31.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.81  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2018100 | GE:44429 | epochs:0.7  | ep_lens:27.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.16 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2018324 | GE:44435 | epochs:0.7  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:7.0 ,  17.9%) | ep_rewards:-0.35 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2018379 | GE:44436 | epochs:0.7  | ep_lens:5.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:4.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.95  | mean_Q:-0.10  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2018729 | GE:44443 | epochs:0.7  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.39 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2019340 | GE:44455 | epochs:0.7  | ep_lens:70.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:66.0 (spuriousM:7.0 ,  10.6%) | ep_rewards:-0.45 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2019664 | GE:44461 | epochs:0.7  | ep_lens:54.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:46.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.47 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2020217 | GE:44473 | epochs:0.7  | ep_lens:65.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:56.0 (spuriousM:3.0 ,   5.4%) | ep_rewards:-0.55 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2020562 | GE:44479 | epochs:0.7  | ep_lens:61.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:55.0 (spuriousM:2.0 ,   3.6%) | ep_rewards:-0.46 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2021145 | GE:44491 | epochs:0.7  | ep_lens:55.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.53 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2021725 | GE:44504 | epochs:0.7  | ep_lens:51.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.46 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2022319 | GE:44515 | epochs:0.7  | ep_lens:77.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:70.0 (spuriousM:8.0 ,  11.4%) | ep_rewards:-0.56 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2022869 | GE:44527 | epochs:0.7  | ep_lens:63.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:52.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.59 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2023273 | GE:44537 | epochs:0.7  | ep_lens:61.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:48.0 (spuriousM:2.0 ,   4.2%) | ep_rewards:-0.63 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2023949 | GE:44550 | epochs:0.7  | ep_lens:73.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:64.0 (spuriousM:2.0 ,   3.1%) | ep_rewards:-0.59 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2024259 | GE:44556 | epochs:0.7  | ep_lens:36.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:30.0 (spuriousM:6.0 ,  20.0%) | ep_rewards:-0.33 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2024422 | GE:44561 | epochs:0.7  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.23  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2024754 | GE:44567 | epochs:0.7  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.38 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2025011 | GE:44571 | epochs:0.7  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.35 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2025476 | GE:44584 | epochs:0.7  | ep_lens:59.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:49.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.55 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2025617 | GE:44586 | epochs:0.7  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.25  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2025759 | GE:44591 | epochs:0.7  | ep_lens:19.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.18  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2026291 | GE:44605 | epochs:0.7  | ep_lens:65.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:48.0 (spuriousM:6.0 ,  12.5%) | ep_rewards:-0.75 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2026655 | GE:44619 | epochs:0.7  | ep_lens:45.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:35.0 (spuriousM:5.0 ,  14.3%) | ep_rewards:-0.48 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2026796 | GE:44623 | epochs:0.7  | ep_lens:22.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.24 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2027002 | GE:44628 | epochs:0.7  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.30 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2027190 | GE:44632 | epochs:0.7  | ep_lens:29.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.27 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2027512 | GE:44641 | epochs:0.7  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.25 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2027836 | GE:44652 | epochs:0.7  | ep_lens:35.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.20 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2028288 | GE:44665 | epochs:0.7  | ep_lens:50.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:49.0 (spuriousM:3.0 ,   6.1%) | ep_rewards:-0.28 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2028391 | GE:44667 | epochs:0.7  | ep_lens:22.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:19.0 (spuriousM:3.0 ,  15.8%) | ep_rewards:-0.19 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2028619 | GE:44674 | epochs:0.7  | ep_lens:37.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.36 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2029168 | GE:44688 | epochs:0.7  | ep_lens:61.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:51.0 (spuriousM:6.0 ,  11.8%) | ep_rewards:-0.56 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2029658 | GE:44700 | epochs:0.7  | ep_lens:58.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:52.0 (spuriousM:8.0 ,  15.4%) | ep_rewards:-0.44 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2030162 | GE:44710 | epochs:0.7  | ep_lens:50.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:47.0 (spuriousM:5.0 ,  10.6%) | ep_rewards:-0.33 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2030247 | GE:44713 | epochs:0.7  | ep_lens:20.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.10  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2031555 | GE:44741 | epochs:0.7  | ep_lens:100.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:85.0 (spuriousM:1.0 ,   1.2%) | ep_rewards:-0.88 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2031821 | GE:44747 | epochs:0.7  | ep_lens:43.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.47 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2032194 | GE:44756 | epochs:0.7  | ep_lens:54.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:49.0 (spuriousM:3.0 ,   6.1%) | ep_rewards:-0.40 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2032459 | GE:44763 | epochs:0.7  | ep_lens:39.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.35 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2032641 | GE:44768 | epochs:0.7  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.18 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2033196 | GE:44784 | epochs:0.7  | ep_lens:62.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:57.0 (spuriousM:2.0 ,   3.5%) | ep_rewards:-0.44 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2033623 | GE:44793 | epochs:0.7  | ep_lens:54.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:50.0 (spuriousM:3.0 ,   6.0%) | ep_rewards:-0.37 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2033709 | GE:44795 | epochs:0.7  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.03  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2033909 | GE:44798 | epochs:0.7  | ep_lens:38.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.42 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2034491 | GE:44809 | epochs:0.7  | ep_lens:76.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:64.0 (spuriousM:4.0 ,   6.2%) | ep_rewards:-0.68 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2034713 | GE:44814 | epochs:0.7  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.27 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2035063 | GE:44820 | epochs:0.7  | ep_lens:77.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:63.0 (spuriousM:5.0 ,   7.9%) | ep_rewards:-0.74 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2035267 | GE:44826 | epochs:0.7  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.31 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2035448 | GE:44830 | epochs:0.7  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.28 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2035641 | GE:44832 | epochs:0.7  | ep_lens:34.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:23.0 (spuriousM:4.0 ,  17.4%) | ep_rewards:-0.45 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2035840 | GE:44837 | epochs:0.7  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.32 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2036839 | GE:44868 | epochs:0.7  | ep_lens:86.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:71.0 (spuriousM:2.0 ,   2.8%) | ep_rewards:-0.81 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2037018 | GE:44872 | epochs:0.7  | ep_lens:24.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.17 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2037585 | GE:44882 | epochs:0.7  | ep_lens:61.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:52.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.53 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2037677 | GE:44886 | epochs:0.7  | ep_lens:19.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:17.0 (spuriousM:2.0 ,  11.8%) | ep_rewards:-0.15 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2037980 | GE:44891 | epochs:0.7  | ep_lens:41.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:39.0 (spuriousM:5.0 ,  12.8%) | ep_rewards:-0.26 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2038254 | GE:44896 | epochs:0.7  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.31 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2038681 | GE:44907 | epochs:0.7  | ep_lens:60.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.55 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2039299 | GE:44924 | epochs:0.7  | ep_lens:65.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:47.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.78 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2039363 | GE:44926 | epochs:0.7  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2039541 | GE:44929 | epochs:0.7  | ep_lens:31.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:24.0 (spuriousM:4.0 ,  16.7%) | ep_rewards:-0.33 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2040152 | GE:44945 | epochs:0.7  | ep_lens:57.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:47.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.54 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2040736 | GE:44957 | epochs:0.7  | ep_lens:62.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:53.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.54 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2041357 | GE:44970 | epochs:0.7  | ep_lens:59.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:54.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.42 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2041833 | GE:44983 | epochs:0.7  | ep_lens:59.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:55.0 (spuriousM:7.0 ,  12.7%) | ep_rewards:-0.40 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2041921 | GE:44985 | epochs:0.7  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2042216 | GE:44991 | epochs:0.7  | ep_lens:30.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.30 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2042549 | GE:44998 | epochs:0.7  | ep_lens:52.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:42.0 (spuriousM:13.0,  31.0%) | ep_rewards:-0.51 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2043176 | GE:45012 | epochs:0.7  | ep_lens:80.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:72.0 (spuriousM:4.0 ,   5.6%) | ep_rewards:-0.60 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2043365 | GE:45018 | epochs:0.7  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.26 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2044200 | GE:45037 | epochs:0.7  | ep_lens:81.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:67.0 (spuriousM:3.0 ,   4.5%) | ep_rewards:-0.76 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2044439 | GE:45040 | epochs:0.7  | ep_lens:40.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.38 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2044717 | GE:45049 | epochs:0.7  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.34 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2045077 | GE:45055 | epochs:0.7  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.36 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2045290 | GE:45063 | epochs:0.7  | ep_lens:31.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.18 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2045653 | GE:45073 | epochs:0.7  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.34 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2045796 | GE:45076 | epochs:0.7  | ep_lens:25.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:20.0 (spuriousM:3.0 ,  15.0%) | ep_rewards:-0.25 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2045831 | GE:45078 | epochs:0.7  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2046125 | GE:45086 | epochs:0.7  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:5.0 ,  16.7%) | ep_rewards:-0.24 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2046195 | GE:45089 | epochs:0.7  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.10  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2046388 | GE:45094 | epochs:0.7  | ep_lens:33.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.22 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2046471 | GE:45096 | epochs:0.7  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2046767 | GE:45103 | epochs:0.7  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.30 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2046987 | GE:45109 | epochs:0.7  | ep_lens:26.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:22.0 (spuriousM:3.0 ,  13.6%) | ep_rewards:-0.23 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2047238 | GE:45114 | epochs:0.7  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.23 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2047908 | GE:45132 | epochs:0.7  | ep_lens:64.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:52.0 (spuriousM:3.0 ,   5.8%) | ep_rewards:-0.62 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2048413 | GE:45146 | epochs:0.7  | ep_lens:53.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:47.0 (spuriousM:3.0 ,   6.4%) | ep_rewards:-0.42 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2048588 | GE:45151 | epochs:0.7  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.31 | mean_Q:-0.03  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2048720 | GE:45153 | epochs:0.7  | ep_lens:23.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:22.0 (spuriousM:3.0 ,  13.6%) | ep_rewards:-0.14 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2048982 | GE:45158 | epochs:0.7  | ep_lens:39.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.35 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2049268 | GE:45165 | epochs:0.7  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.37 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2049391 | GE:45167 | epochs:0.7  | ep_lens:24.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:17.0 (spuriousM:3.0 ,  17.6%) | ep_rewards:-0.30 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2049537 | GE:45172 | epochs:0.7  | ep_lens:25.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.25 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2049700 | GE:45176 | epochs:0.7  | ep_lens:26.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:22.0 (spuriousM:4.0 ,  18.2%) | ep_rewards:-0.23 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2050245 | GE:45192 | epochs:0.7  | ep_lens:51.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:43.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.46 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2050521 | GE:45199 | epochs:0.7  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:4.0 ,  11.8%) | ep_rewards:-0.26 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2050721 | GE:45204 | epochs:0.7  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.23 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2051382 | GE:45219 | epochs:0.7  | ep_lens:74.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:59.0 (spuriousM:3.0 ,   5.1%) | ep_rewards:-0.75 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2051619 | GE:45223 | epochs:0.7  | ep_lens:32.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:28.0 (spuriousM:5.0 ,  17.9%) | ep_rewards:-0.26 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2051934 | GE:45233 | epochs:0.7  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.24 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2052162 | GE:45238 | epochs:0.7  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:6.0 ,  19.4%) | ep_rewards:-0.25 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2052757 | GE:45253 | epochs:0.7  | ep_lens:56.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:52.0 (spuriousM:4.0 ,   7.7%) | ep_rewards:-0.38 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2053169 | GE:45263 | epochs:0.7  | ep_lens:49.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:43.0 (spuriousM:4.0 ,   9.3%) | ep_rewards:-0.40 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2053356 | GE:45268 | epochs:0.7  | ep_lens:24.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.20 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2053463 | GE:45272 | epochs:0.7  | ep_lens:23.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:21.0 (spuriousM:4.0 ,  19.0%) | ep_rewards:-0.17 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2054121 | GE:45286 | epochs:0.7  | ep_lens:60.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:57.0 (spuriousM:2.0 ,   3.5%) | ep_rewards:-0.38 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2054266 | GE:45291 | epochs:0.7  | ep_lens:26.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.28 | mean_Q:-0.02  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2054391 | GE:45294 | epochs:0.7  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2055337 | GE:45315 | epochs:0.7  | ep_lens:76.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:66.0 (spuriousM:1.0 ,   1.5%) | ep_rewards:-0.63 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2055855 | GE:45328 | epochs:0.7  | ep_lens:55.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:47.0 (spuriousM:4.0 ,   8.5%) | ep_rewards:-0.48 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2056063 | GE:45331 | epochs:0.7  | ep_lens:29.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.17 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2056247 | GE:45336 | epochs:0.7  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.23 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2056358 | GE:45340 | epochs:0.7  | ep_lens:15.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.21  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2056667 | GE:45350 | epochs:0.7  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:5.0 ,  12.8%) | ep_rewards:-0.38 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2056847 | GE:45354 | epochs:0.7  | ep_lens:33.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.22 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2057093 | GE:45359 | epochs:0.7  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.19 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2057181 | GE:45363 | epochs:0.7  | ep_lens:18.0 | edits:2.0  (spuriousE:1.0 ,  50.0%) | moves:16.0 (spuriousM:2.0 ,  12.5%) | ep_rewards:0.86  | mean_Q:-0.06  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:2057451 | GE:45369 | epochs:0.7  | ep_lens:39.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.25 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2057809 | GE:45378 | epochs:0.7  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.31 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2058422 | GE:45392 | epochs:0.8  | ep_lens:70.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:62.0 (spuriousM:1.0 ,   1.6%) | ep_rewards:-0.55 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2058803 | GE:45399 | epochs:0.8  | ep_lens:49.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.45 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2058988 | GE:45402 | epochs:0.8  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.24 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2059298 | GE:45410 | epochs:0.8  | ep_lens:45.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.45 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2059370 | GE:45411 | epochs:0.8  | ep_lens:17.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:16.0 (spuriousM:1.0 ,   6.2%) | ep_rewards:-0.11 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2059667 | GE:45419 | epochs:0.8  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:5.0 ,  14.3%) | ep_rewards:-0.33 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2059832 | GE:45425 | epochs:0.8  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:5.0 ,  20.0%) | ep_rewards:-0.22 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2060484 | GE:45437 | epochs:0.8  | ep_lens:64.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:56.0 (spuriousM:6.0 ,  10.7%) | ep_rewards:-0.52 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2060650 | GE:45441 | epochs:0.8  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.22 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2060822 | GE:45447 | epochs:0.8  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.21 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2061256 | GE:45458 | epochs:0.8  | ep_lens:48.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.37 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2061402 | GE:45461 | epochs:0.8  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2061765 | GE:45472 | epochs:0.8  | ep_lens:46.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:37.0 (spuriousM:8.0 ,  21.6%) | ep_rewards:-0.46 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2061882 | GE:45474 | epochs:0.8  | ep_lens:23.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.22 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2062077 | GE:45480 | epochs:0.8  | ep_lens:24.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2062240 | GE:45483 | epochs:0.8  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.20 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2062486 | GE:45490 | epochs:0.8  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.31 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2062787 | GE:45494 | epochs:0.8  | ep_lens:34.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.20 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2063021 | GE:45502 | epochs:0.8  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.26 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2063157 | GE:45507 | epochs:0.8  | ep_lens:24.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:22.0 (spuriousM:5.0 ,  22.7%) | ep_rewards:-0.17 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2063367 | GE:45511 | epochs:0.8  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.25 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2063528 | GE:45517 | epochs:0.8  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.22 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2063695 | GE:45522 | epochs:0.8  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.16 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2063872 | GE:45525 | epochs:0.8  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.23  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2064133 | GE:45532 | epochs:0.8  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.34 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2064197 | GE:45535 | epochs:0.8  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.06  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2064803 | GE:45548 | epochs:0.8  | ep_lens:56.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:52.0 (spuriousM:3.0 ,   5.8%) | ep_rewards:-0.38 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2064896 | GE:45552 | epochs:0.8  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.03  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2065070 | GE:45555 | epochs:0.8  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.29 | mean_Q:0.04   | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2065511 | GE:45563 | epochs:0.8  | ep_lens:54.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:47.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.45 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2065865 | GE:45572 | epochs:0.8  | ep_lens:54.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.50 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2066804 | GE:45593 | epochs:0.8  | ep_lens:80.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:72.0 (spuriousM:4.0 ,   5.6%) | ep_rewards:-0.60 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2066880 | GE:45595 | epochs:0.8  | ep_lens:16.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:1.0 ,   6.2%) | ep_rewards:-0.08 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2067070 | GE:45601 | epochs:0.8  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.26 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2067232 | GE:45607 | epochs:0.8  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.11  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2067819 | GE:45618 | epochs:0.8  | ep_lens:55.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:49.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.43 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2068315 | GE:45631 | epochs:0.8  | ep_lens:43.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.29 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2068824 | GE:45640 | epochs:0.8  | ep_lens:56.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:49.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.46 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2069041 | GE:45648 | epochs:0.8  | ep_lens:38.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.24 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2069326 | GE:45657 | epochs:0.8  | ep_lens:31.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.28 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2070005 | GE:45676 | epochs:0.8  | ep_lens:57.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:51.0 (spuriousM:2.0 ,   3.9%) | ep_rewards:-0.44 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2070744 | GE:45691 | epochs:0.8  | ep_lens:77.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:66.0 (spuriousM:5.0 ,   7.6%) | ep_rewards:-0.66 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2071218 | GE:45702 | epochs:0.8  | ep_lens:55.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:47.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.48 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2071684 | GE:45712 | epochs:0.8  | ep_lens:33.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:32.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.81  | mean_Q:-0.19  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2072156 | GE:45722 | epochs:0.8  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:11.0,  26.2%) | ep_rewards:-0.39 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2072327 | GE:45725 | epochs:0.8  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.24 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2072392 | GE:45726 | epochs:0.8  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.11  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2072892 | GE:45735 | epochs:0.8  | ep_lens:64.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:53.0 (spuriousM:3.0 ,   5.7%) | ep_rewards:-0.60 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2074127 | GE:45758 | epochs:0.8  | ep_lens:97.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:85.0 (spuriousM:3.0 ,   3.5%) | ep_rewards:-0.79 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2074652 | GE:45766 | epochs:0.8  | ep_lens:76.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:68.0 (spuriousM:3.0 ,   4.4%) | ep_rewards:-0.58 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2074745 | GE:45769 | epochs:0.8  | ep_lens:13.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.22  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2074841 | GE:45772 | epochs:0.8  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2074909 | GE:45774 | epochs:0.8  | ep_lens:10.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:9.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2075351 | GE:45784 | epochs:0.8  | ep_lens:61.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:52.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.53 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2075687 | GE:45791 | epochs:0.8  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.37 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2076661 | GE:45814 | epochs:0.8  | ep_lens:100.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:87.0 (spuriousM:15.0,  17.2%) | ep_rewards:-0.83 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2076771 | GE:45816 | epochs:0.8  | ep_lens:23.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.17 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2077115 | GE:45825 | epochs:0.8  | ep_lens:61.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:48.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.63 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2077337 | GE:45831 | epochs:0.8  | ep_lens:31.0 | edits:3.0  (spuriousE:2.0 ,  66.7%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.19 | mean_Q:-0.12  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:2077646 | GE:45837 | epochs:0.8  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.25 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2077878 | GE:45845 | epochs:0.8  | ep_lens:31.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.28 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2078744 | GE:45862 | epochs:0.8  | ep_lens:68.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:65.0 (spuriousM:8.0 ,  12.3%) | ep_rewards:-0.42 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2079013 | GE:45870 | epochs:0.8  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.34 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2079175 | GE:45874 | epochs:0.8  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.31 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2079509 | GE:45878 | epochs:0.8  | ep_lens:52.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:39.0 (spuriousM:7.0 ,  17.9%) | ep_rewards:-0.59 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2079952 | GE:45889 | epochs:0.8  | ep_lens:68.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:55.0 (spuriousM:2.0 ,   3.6%) | ep_rewards:-0.67 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2080080 | GE:45891 | epochs:0.8  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2080686 | GE:45906 | epochs:0.8  | ep_lens:66.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:50.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.73 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2080824 | GE:45908 | epochs:0.8  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2081408 | GE:45921 | epochs:0.8  | ep_lens:65.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:59.0 (spuriousM:6.0 ,  10.2%) | ep_rewards:-0.48 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2081715 | GE:45931 | epochs:0.8  | ep_lens:57.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:44.0 (spuriousM:7.0 ,  15.9%) | ep_rewards:-0.61 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2081969 | GE:45937 | epochs:0.8  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.26 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2082066 | GE:45939 | epochs:0.8  | ep_lens:18.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:15.0 (spuriousM:2.0 ,  13.3%) | ep_rewards:-0.17 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2082339 | GE:45946 | epochs:0.8  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.27 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2082632 | GE:45955 | epochs:0.8  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.28 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2083470 | GE:45977 | epochs:0.8  | ep_lens:100.0 | edits:25.0 (spuriousE:25.0, 100.0%) | moves:75.0 (spuriousM:18.0,  24.0%) | ep_rewards:-1.12 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2083750 | GE:45985 | epochs:0.8  | ep_lens:40.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.35 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2083951 | GE:45990 | epochs:0.8  | ep_lens:27.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.14 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2084504 | GE:46005 | epochs:0.8  | ep_lens:51.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:42.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.48 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2084614 | GE:46011 | epochs:0.8  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2084761 | GE:46015 | epochs:0.8  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:4.0 ,  18.2%) | ep_rewards:-0.20 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2084910 | GE:46019 | epochs:0.8  | ep_lens:24.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:22.0 (spuriousM:3.0 ,  13.6%) | ep_rewards:-0.17 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2084993 | GE:46023 | epochs:0.8  | ep_lens:23.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.19 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2085143 | GE:46026 | epochs:0.8  | ep_lens:27.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.24 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2085436 | GE:46034 | epochs:0.8  | ep_lens:31.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.21 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2085668 | GE:46040 | epochs:0.8  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.30 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2085872 | GE:46044 | epochs:0.8  | ep_lens:24.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.15 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2086549 | GE:46063 | epochs:0.8  | ep_lens:54.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.37 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2086760 | GE:46071 | epochs:0.8  | ep_lens:37.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.41 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2087369 | GE:46089 | epochs:0.8  | ep_lens:58.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:51.0 (spuriousM:7.0 ,  13.7%) | ep_rewards:-0.47 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2088097 | GE:46109 | epochs:0.8  | ep_lens:56.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:51.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.41 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2088387 | GE:46117 | epochs:0.8  | ep_lens:41.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.41 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2088643 | GE:46124 | epochs:0.8  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.27 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2088837 | GE:46128 | epochs:0.8  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.27 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2089333 | GE:46141 | epochs:0.8  | ep_lens:51.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:47.0 (spuriousM:4.0 ,   8.5%) | ep_rewards:-0.36 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2089466 | GE:46146 | epochs:0.8  | ep_lens:23.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:22.0 (spuriousM:3.0 ,  13.6%) | ep_rewards:-0.14 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2089663 | GE:46152 | epochs:0.8  | ep_lens:32.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.26 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2089759 | GE:46156 | epochs:0.8  | ep_lens:10.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:9.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.19  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2090260 | GE:46168 | epochs:0.8  | ep_lens:55.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:48.0 (spuriousM:2.0 ,   4.2%) | ep_rewards:-0.45 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2090843 | GE:46183 | epochs:0.8  | ep_lens:55.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:50.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.40 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2091093 | GE:46191 | epochs:0.8  | ep_lens:32.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.26 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2091401 | GE:46196 | epochs:0.8  | ep_lens:39.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.30 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2091775 | GE:46206 | epochs:0.8  | ep_lens:44.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:36.0 (spuriousM:8.0 ,  22.2%) | ep_rewards:-0.42 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2092291 | GE:46216 | epochs:0.8  | ep_lens:55.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.55 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2092567 | GE:46223 | epochs:0.8  | ep_lens:32.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.26 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2093042 | GE:46231 | epochs:0.8  | ep_lens:54.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:47.0 (spuriousM:3.0 ,   6.4%) | ep_rewards:-0.45 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2093197 | GE:46238 | epochs:0.8  | ep_lens:27.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:23.0 (spuriousM:4.0 ,  17.4%) | ep_rewards:-0.24 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2093799 | GE:46253 | epochs:0.8  | ep_lens:50.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:47.0 (spuriousM:6.0 ,  12.8%) | ep_rewards:-0.33 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2093991 | GE:46257 | epochs:0.8  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:4.0 ,  16.0%) | ep_rewards:-0.22 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2094229 | GE:46265 | epochs:0.8  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.37 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2094342 | GE:46268 | epochs:0.8  | ep_lens:22.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.14 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2094442 | GE:46273 | epochs:0.8  | ep_lens:23.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.17 | mean_Q:-0.01  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2094868 | GE:46285 | epochs:0.8  | ep_lens:44.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.32 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2095025 | GE:46292 | epochs:0.8  | ep_lens:26.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:22.0 (spuriousM:4.0 ,  18.2%) | ep_rewards:-0.23 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2095440 | GE:46302 | epochs:0.8  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.33 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2095505 | GE:46306 | epochs:0.8  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.05  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2095987 | GE:46319 | epochs:0.8  | ep_lens:72.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:60.0 (spuriousM:4.0 ,   6.7%) | ep_rewards:-0.66 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2096276 | GE:46325 | epochs:0.8  | ep_lens:38.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.24 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2096538 | GE:46333 | epochs:0.8  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.21 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2096805 | GE:46342 | epochs:0.8  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.23 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2097101 | GE:46349 | epochs:0.8  | ep_lens:34.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.22 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2098099 | GE:46373 | epochs:0.8  | ep_lens:77.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:68.0 (spuriousM:4.0 ,   5.9%) | ep_rewards:-0.61 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2098561 | GE:46385 | epochs:0.8  | ep_lens:44.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.25 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2098899 | GE:46391 | epochs:0.8  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.32 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2099156 | GE:46401 | epochs:0.8  | ep_lens:30.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.20 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2099436 | GE:46409 | epochs:0.8  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.29 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2099579 | GE:46413 | epochs:0.8  | ep_lens:26.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:24.0 (spuriousM:4.0 ,  16.7%) | ep_rewards:-0.18 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2099695 | GE:46416 | epochs:0.8  | ep_lens:24.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.12 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2099915 | GE:46422 | epochs:0.8  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.28 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2100188 | GE:46429 | epochs:0.8  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.25 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2100816 | GE:46448 | epochs:0.8  | ep_lens:52.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.56 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2101236 | GE:46456 | epochs:0.8  | ep_lens:33.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.34 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2101317 | GE:46460 | epochs:0.8  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2101696 | GE:46472 | epochs:0.8  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.29 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2101911 | GE:46478 | epochs:0.8  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.24 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2102145 | GE:46482 | epochs:0.8  | ep_lens:34.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:32.0 (spuriousM:7.0 ,  21.9%) | ep_rewards:-0.22 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2102378 | GE:46489 | epochs:0.8  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.27 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2102681 | GE:46494 | epochs:0.8  | ep_lens:48.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.37 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2102810 | GE:46500 | epochs:0.8  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.13  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2103042 | GE:46506 | epochs:0.8  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:8.0 ,  25.8%) | ep_rewards:-0.37 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2103329 | GE:46511 | epochs:0.8  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.38 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2103504 | GE:46516 | epochs:0.8  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.34 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2103707 | GE:46520 | epochs:0.8  | ep_lens:28.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:27.0 (spuriousM:5.0 ,  18.5%) | ep_rewards:-0.17 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2104177 | GE:46530 | epochs:0.8  | ep_lens:53.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:48.0 (spuriousM:3.0 ,   6.2%) | ep_rewards:-0.39 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2104452 | GE:46538 | epochs:0.8  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.31 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2104791 | GE:46545 | epochs:0.8  | ep_lens:47.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.41 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2105032 | GE:46550 | epochs:0.8  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.28 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2105250 | GE:46557 | epochs:0.8  | ep_lens:26.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:25.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2105416 | GE:46561 | epochs:0.8  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.18 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2106287 | GE:46589 | epochs:0.8  | ep_lens:68.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:66.0 (spuriousM:2.0 ,   3.0%) | ep_rewards:-0.39 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2106822 | GE:46600 | epochs:0.8  | ep_lens:63.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:56.0 (spuriousM:5.0 ,   8.9%) | ep_rewards:-0.49 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2107420 | GE:46615 | epochs:0.8  | ep_lens:61.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:49.0 (spuriousM:3.0 ,   6.1%) | ep_rewards:-0.61 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2107676 | GE:46619 | epochs:0.8  | ep_lens:49.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:37.0 (spuriousM:5.0 ,  13.5%) | ep_rewards:-0.55 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2107842 | GE:46624 | epochs:0.8  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:7.0 ,  21.9%) | ep_rewards:-0.28 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2108172 | GE:46631 | epochs:0.8  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.24 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2108350 | GE:46635 | epochs:0.8  | ep_lens:41.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.46 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2108580 | GE:46641 | epochs:0.8  | ep_lens:36.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.38 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2109104 | GE:46652 | epochs:0.8  | ep_lens:54.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:45.0 (spuriousM:4.0 ,   8.9%) | ep_rewards:-0.50 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2109210 | GE:46656 | epochs:0.8  | ep_lens:19.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.15 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2109460 | GE:46658 | epochs:0.8  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.38 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2109578 | GE:46662 | epochs:0.8  | ep_lens:29.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.27 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2110398 | GE:46683 | epochs:0.8  | ep_lens:78.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:69.0 (spuriousM:5.0 ,   7.2%) | ep_rewards:-0.62 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2110818 | GE:46689 | epochs:0.8  | ep_lens:68.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:52.0 (spuriousM:4.0 ,   7.7%) | ep_rewards:-0.74 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2111110 | GE:46697 | epochs:0.8  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.38 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2111569 | GE:46707 | epochs:0.8  | ep_lens:52.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:43.0 (spuriousM:5.0 ,  11.6%) | ep_rewards:-0.49 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2111974 | GE:46722 | epochs:0.8  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.35 | mean_Q:-0.27  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2112233 | GE:46727 | epochs:0.8  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.26 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2112614 | GE:46734 | epochs:0.8  | ep_lens:46.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.41 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2113102 | GE:46746 | epochs:0.8  | ep_lens:51.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:43.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.46 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2113391 | GE:46754 | epochs:0.8  | ep_lens:45.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.53 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2113910 | GE:46768 | epochs:0.8  | ep_lens:51.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:48.0 (spuriousM:3.0 ,   6.2%) | ep_rewards:-0.33 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2114343 | GE:46779 | epochs:0.8  | ep_lens:58.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:56.0 (spuriousM:8.0 ,  14.3%) | ep_rewards:-0.34 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2114606 | GE:46785 | epochs:0.8  | ep_lens:40.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.40 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2115010 | GE:46794 | epochs:0.8  | ep_lens:56.0 | edits:8.0  (spuriousE:7.0 ,  87.5%) | moves:48.0 (spuriousM:6.0 ,  12.5%) | ep_rewards:-0.44 | mean_Q:-0.09  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:2115170 | GE:46797 | epochs:0.8  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:4.0 ,  18.2%) | ep_rewards:-0.20 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2116034 | GE:46820 | epochs:0.8  | ep_lens:76.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:60.0 (spuriousM:1.0 ,   1.7%) | ep_rewards:-0.78 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2116453 | GE:46827 | epochs:0.8  | ep_lens:54.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:47.0 (spuriousM:3.0 ,   6.4%) | ep_rewards:-0.45 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2116617 | GE:46834 | epochs:0.8  | ep_lens:32.0 | edits:4.0  (spuriousE:3.0 ,  75.0%) | moves:28.0 (spuriousM:4.0 ,  14.3%) | ep_rewards:-0.22 | mean_Q:-0.11  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:2116878 | GE:46841 | epochs:0.8  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.32 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2117130 | GE:46848 | epochs:0.8  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.36 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2117491 | GE:46855 | epochs:0.8  | ep_lens:44.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:41.0 (spuriousM:6.0 ,  14.6%) | ep_rewards:-0.30 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2117598 | GE:46860 | epochs:0.8  | ep_lens:21.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:3.0 ,  14.3%) | ep_rewards:-0.11 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2117677 | GE:46861 | epochs:0.8  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.12  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2117856 | GE:46863 | epochs:0.8  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.22 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2118063 | GE:46870 | epochs:0.8  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.19 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2118703 | GE:46885 | epochs:0.8  | ep_lens:68.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:57.0 (spuriousM:3.0 ,   5.3%) | ep_rewards:-0.62 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2119020 | GE:46893 | epochs:0.8  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.33 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2119386 | GE:46904 | epochs:0.8  | ep_lens:56.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.61 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2119995 | GE:46916 | epochs:0.8  | ep_lens:54.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.50 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2120223 | GE:46922 | epochs:0.8  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.19 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2120483 | GE:46928 | epochs:0.8  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.27 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2120775 | GE:46936 | epochs:0.8  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.28 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2121177 | GE:46946 | epochs:0.8  | ep_lens:48.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:44.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.34 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2121487 | GE:46956 | epochs:0.8  | ep_lens:41.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.26 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2121703 | GE:46960 | epochs:0.8  | ep_lens:37.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:29.0 (spuriousM:4.0 ,  13.8%) | ep_rewards:-0.39 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2122073 | GE:46970 | epochs:0.8  | ep_lens:48.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.47 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2122710 | GE:46983 | epochs:0.8  | ep_lens:72.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:60.0 (spuriousM:5.0 ,   8.3%) | ep_rewards:-0.66 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2122814 | GE:46985 | epochs:0.8  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.02  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2123031 | GE:46990 | epochs:0.8  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:9.0 ,  30.0%) | ep_rewards:-0.27 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2123659 | GE:47002 | epochs:0.8  | ep_lens:75.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:62.0 (spuriousM:3.0 ,   4.8%) | ep_rewards:-0.70 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2124025 | GE:47007 | epochs:0.8  | ep_lens:60.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:56.0 (spuriousM:13.0,  23.2%) | ep_rewards:-0.40 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2124589 | GE:47021 | epochs:0.8  | ep_lens:74.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:62.0 (spuriousM:6.0 ,   9.7%) | ep_rewards:-0.67 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2125080 | GE:47031 | epochs:0.8  | ep_lens:57.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:44.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.61 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2125196 | GE:47034 | epochs:0.8  | ep_lens:23.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.17 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2125819 | GE:47047 | epochs:0.8  | ep_lens:70.0 | edits:19.0 (spuriousE:19.0, 100.0%) | moves:51.0 (spuriousM:2.0 ,   3.9%) | ep_rewards:-0.83 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2126724 | GE:47066 | epochs:0.8  | ep_lens:84.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:71.0 (spuriousM:6.0 ,   8.5%) | ep_rewards:-0.75 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2127459 | GE:47085 | epochs:0.8  | ep_lens:76.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:64.0 (spuriousM:4.0 ,   6.2%) | ep_rewards:-0.68 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2127892 | GE:47095 | epochs:0.8  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.37 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2128590 | GE:47110 | epochs:0.8  | ep_lens:75.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:65.0 (spuriousM:10.0,  15.4%) | ep_rewards:-0.63 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2128793 | GE:47116 | epochs:0.8  | ep_lens:40.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.40 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2129368 | GE:47128 | epochs:0.8  | ep_lens:77.0 | edits:19.0 (spuriousE:19.0, 100.0%) | moves:58.0 (spuriousM:1.0 ,   1.7%) | ep_rewards:-0.86 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2129545 | GE:47135 | epochs:0.8  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.22  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2129659 | GE:47136 | epochs:0.8  | ep_lens:22.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2130061 | GE:47147 | epochs:0.8  | ep_lens:60.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:51.0 (spuriousM:2.0 ,   3.9%) | ep_rewards:-0.53 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2130640 | GE:47155 | epochs:0.8  | ep_lens:85.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:70.0 (spuriousM:7.0 ,  10.0%) | ep_rewards:-0.80 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2130733 | GE:47158 | epochs:0.8  | ep_lens:21.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:19.0 (spuriousM:3.0 ,  15.8%) | ep_rewards:-0.16 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2131029 | GE:47166 | epochs:0.8  | ep_lens:36.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.21 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2131125 | GE:47171 | epochs:0.8  | ep_lens:10.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:9.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.13  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2131486 | GE:47177 | epochs:0.8  | ep_lens:55.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.55 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2131873 | GE:47183 | epochs:0.8  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.36 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2132445 | GE:47197 | epochs:0.8  | ep_lens:53.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.52 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2132893 | GE:47207 | epochs:0.8  | ep_lens:49.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:44.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.37 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2133030 | GE:47210 | epochs:0.8  | ep_lens:25.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.25 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2133462 | GE:47218 | epochs:0.8  | ep_lens:72.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:58.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.71 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2134040 | GE:47231 | epochs:0.8  | ep_lens:63.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.54 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2134164 | GE:47233 | epochs:0.8  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.26  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2134591 | GE:47244 | epochs:0.8  | ep_lens:53.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:46.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.44 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2134825 | GE:47249 | epochs:0.8  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.31 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2135079 | GE:47255 | epochs:0.8  | ep_lens:29.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.17 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2135530 | GE:47267 | epochs:0.8  | ep_lens:42.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:41.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.76  | mean_Q:-0.27  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2135649 | GE:47269 | epochs:0.8  | ep_lens:20.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.12 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2136026 | GE:47278 | epochs:0.8  | ep_lens:43.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.29 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2136373 | GE:47289 | epochs:0.8  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.36 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2136722 | GE:47297 | epochs:0.8  | ep_lens:54.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:43.0 (spuriousM:18.0,  41.9%) | ep_rewards:-0.55 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2136869 | GE:47302 | epochs:0.8  | ep_lens:22.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.16 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2137138 | GE:47309 | epochs:0.8  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.27 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2137585 | GE:47320 | epochs:0.8  | ep_lens:42.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.41 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2138267 | GE:47334 | epochs:0.8  | ep_lens:64.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:50.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.67 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2138437 | GE:47342 | epochs:0.8  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.19 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2138659 | GE:47345 | epochs:0.8  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.24 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2138947 | GE:47354 | epochs:0.8  | ep_lens:44.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.47 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2139185 | GE:47359 | epochs:0.8  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.22 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2139780 | GE:47375 | epochs:0.8  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.46 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2139941 | GE:47378 | epochs:0.8  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.21 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2140039 | GE:47380 | epochs:0.8  | ep_lens:18.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.12 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2140385 | GE:47387 | epochs:0.8  | ep_lens:38.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.39 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2140698 | GE:47395 | epochs:0.8  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.39 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2141074 | GE:47407 | epochs:0.8  | ep_lens:37.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.21 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2141263 | GE:47409 | epochs:0.8  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.16 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2141625 | GE:47422 | epochs:0.8  | ep_lens:41.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:32.0 (spuriousM:7.0 ,  21.9%) | ep_rewards:-0.43 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2141826 | GE:47425 | epochs:0.8  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.31 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2142555 | GE:47444 | epochs:0.8  | ep_lens:73.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:61.0 (spuriousM:6.0 ,   9.8%) | ep_rewards:-0.67 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2143093 | GE:47454 | epochs:0.8  | ep_lens:56.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:46.0 (spuriousM:3.0 ,   6.5%) | ep_rewards:-0.53 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2143302 | GE:47458 | epochs:0.8  | ep_lens:26.0 | edits:3.0  (spuriousE:2.0 ,  66.7%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.17 | mean_Q:-0.22  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:2143529 | GE:47464 | epochs:0.8  | ep_lens:34.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.32 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2144143 | GE:47478 | epochs:0.8  | ep_lens:56.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.58 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2144384 | GE:47482 | epochs:0.8  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.29 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2144483 | GE:47488 | epochs:0.8  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.25  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2145035 | GE:47502 | epochs:0.8  | ep_lens:54.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:50.0 (spuriousM:3.0 ,   6.0%) | ep_rewards:-0.37 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2145334 | GE:47509 | epochs:0.8  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.36 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2145515 | GE:47513 | epochs:0.8  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.33 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2145611 | GE:47516 | epochs:0.8  | ep_lens:17.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:16.0 (spuriousM:1.0 ,   6.2%) | ep_rewards:-0.11 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2145873 | GE:47523 | epochs:0.8  | ep_lens:33.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.34 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2146612 | GE:47543 | epochs:0.8  | ep_lens:65.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:56.0 (spuriousM:2.0 ,   3.6%) | ep_rewards:-0.55 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2146669 | GE:47546 | epochs:0.8  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.10  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2146836 | GE:47553 | epochs:0.8  | ep_lens:26.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.21 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2147352 | GE:47562 | epochs:0.8  | ep_lens:65.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:55.0 (spuriousM:3.0 ,   5.5%) | ep_rewards:-0.58 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2147558 | GE:47568 | epochs:0.8  | ep_lens:31.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.28 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2148163 | GE:47581 | epochs:0.8  | ep_lens:53.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:46.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.44 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2148618 | GE:47591 | epochs:0.8  | ep_lens:70.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:59.0 (spuriousM:4.0 ,   6.8%) | ep_rewards:-0.63 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2148794 | GE:47598 | epochs:0.8  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.22 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2149278 | GE:47608 | epochs:0.8  | ep_lens:54.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:51.0 (spuriousM:5.0 ,   9.8%) | ep_rewards:-0.35 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2149400 | GE:47611 | epochs:0.8  | ep_lens:22.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:18.0 (spuriousM:1.0 ,   5.6%) | ep_rewards:-0.21 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2149574 | GE:47616 | epochs:0.8  | ep_lens:35.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.40 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2149704 | GE:47619 | epochs:0.8  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2150160 | GE:47629 | epochs:0.8  | ep_lens:53.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:48.0 (spuriousM:5.0 ,  10.4%) | ep_rewards:-0.39 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2150232 | GE:47631 | epochs:0.8  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.05  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2150309 | GE:47632 | epochs:0.8  | ep_lens:15.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:13.0 (spuriousM:1.0 ,   7.7%) | ep_rewards:-0.13 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2150429 | GE:47637 | epochs:0.8  | ep_lens:35.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:27.0 (spuriousM:7.0 ,  25.9%) | ep_rewards:-0.38 | mean_Q:0.01   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2150897 | GE:47645 | epochs:0.8  | ep_lens:72.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:66.0 (spuriousM:9.0 ,  13.6%) | ep_rewards:-0.51 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2151746 | GE:47667 | epochs:0.8  | ep_lens:79.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:69.0 (spuriousM:3.0 ,   4.3%) | ep_rewards:-0.65 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2152447 | GE:47684 | epochs:0.8  | ep_lens:61.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:57.0 (spuriousM:2.0 ,   3.5%) | ep_rewards:-0.41 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2152962 | GE:47695 | epochs:0.8  | ep_lens:62.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:55.0 (spuriousM:2.0 ,   3.6%) | ep_rewards:-0.49 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2153588 | GE:47709 | epochs:0.8  | ep_lens:62.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:56.0 (spuriousM:1.0 ,   1.8%) | ep_rewards:-0.46 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2153732 | GE:47713 | epochs:0.8  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.17  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2153876 | GE:47719 | epochs:0.8  | ep_lens:23.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.14 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2154134 | GE:47724 | epochs:0.8  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.26 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2154447 | GE:47733 | epochs:0.8  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:8.0 ,  23.5%) | ep_rewards:-0.32 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2155113 | GE:47751 | epochs:0.8  | ep_lens:53.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:48.0 (spuriousM:2.0 ,   4.2%) | ep_rewards:-0.39 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2155227 | GE:47757 | epochs:0.8  | ep_lens:23.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.17 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2155701 | GE:47768 | epochs:0.8  | ep_lens:43.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:41.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.27 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2156067 | GE:47777 | epochs:0.8  | ep_lens:64.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:57.0 (spuriousM:9.0 ,  15.8%) | ep_rewards:-0.50 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2156361 | GE:47783 | epochs:0.8  | ep_lens:47.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:40.0 (spuriousM:10.0,  25.0%) | ep_rewards:-0.41 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2156584 | GE:47789 | epochs:0.8  | ep_lens:29.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.17 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2156971 | GE:47800 | epochs:0.8  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.39 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2157874 | GE:47823 | epochs:0.8  | ep_lens:90.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:75.0 (spuriousM:2.0 ,   2.7%) | ep_rewards:-0.83 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2157965 | GE:47825 | epochs:0.8  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.07  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2158176 | GE:47833 | epochs:0.8  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.19 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2158443 | GE:47842 | epochs:0.8  | ep_lens:34.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.32 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2158661 | GE:47846 | epochs:0.8  | ep_lens:23.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.19 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2158828 | GE:47850 | epochs:0.8  | ep_lens:25.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.15 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2159099 | GE:47860 | epochs:0.8  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.30 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2159417 | GE:47870 | epochs:0.8  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.31 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2159664 | GE:47879 | epochs:0.8  | ep_lens:33.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.37 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2160333 | GE:47896 | epochs:0.8  | ep_lens:72.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:63.0 (spuriousM:12.0,  19.0%) | ep_rewards:-0.59 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2160650 | GE:47903 | epochs:0.8  | ep_lens:40.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.40 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2160998 | GE:47910 | epochs:0.8  | ep_lens:44.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.32 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2161254 | GE:47918 | epochs:0.8  | ep_lens:30.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.15 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2161323 | GE:47921 | epochs:0.8  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2161953 | GE:47937 | epochs:0.8  | ep_lens:55.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.58 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2162536 | GE:47948 | epochs:0.8  | ep_lens:54.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:52.0 (spuriousM:14.0,  26.9%) | ep_rewards:-0.32 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2162673 | GE:47950 | epochs:0.8  | ep_lens:14.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.20  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2163175 | GE:47963 | epochs:0.8  | ep_lens:65.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:53.0 (spuriousM:7.0 ,  13.2%) | ep_rewards:-0.63 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2163739 | GE:47973 | epochs:0.8  | ep_lens:56.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:46.0 (spuriousM:3.0 ,   6.5%) | ep_rewards:-0.53 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2163813 | GE:47974 | epochs:0.8  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.19  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2163954 | GE:47980 | epochs:0.8  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.23 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2164448 | GE:47990 | epochs:0.8  | ep_lens:53.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:46.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.44 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2164818 | GE:47999 | epochs:0.8  | ep_lens:53.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:48.0 (spuriousM:3.0 ,   6.2%) | ep_rewards:-0.39 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2165142 | GE:48007 | epochs:0.8  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:6.0 ,  18.2%) | ep_rewards:-0.23 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2165232 | GE:48010 | epochs:0.8  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.16  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2166089 | GE:48028 | epochs:0.8  | ep_lens:74.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:60.0 (spuriousM:2.0 ,   3.3%) | ep_rewards:-0.72 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2166441 | GE:48039 | epochs:0.8  | ep_lens:37.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.36 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2166951 | GE:48051 | epochs:0.8  | ep_lens:49.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.35 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2167136 | GE:48058 | epochs:0.8  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.19 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2167388 | GE:48063 | epochs:0.8  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.27 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2167686 | GE:48070 | epochs:0.8  | ep_lens:45.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.48 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2167851 | GE:48074 | epochs:0.8  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.20 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2168023 | GE:48078 | epochs:0.8  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.31 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2168217 | GE:48083 | epochs:0.8  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.30 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2168522 | GE:48091 | epochs:0.8  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.33 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2168818 | GE:48098 | epochs:0.8  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.29 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2169051 | GE:48104 | epochs:0.8  | ep_lens:28.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.14 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2169177 | GE:48106 | epochs:0.8  | ep_lens:20.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:18.0 (spuriousM:1.0 ,   5.6%) | ep_rewards:-0.15 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2169455 | GE:48116 | epochs:0.8  | ep_lens:36.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.38 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2169529 | GE:48117 | epochs:0.8  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2169655 | GE:48120 | epochs:0.8  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.23  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2170267 | GE:48134 | epochs:0.8  | ep_lens:69.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:61.0 (spuriousM:13.0,  21.3%) | ep_rewards:-0.55 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2170534 | GE:48141 | epochs:0.8  | ep_lens:39.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:33.0 (spuriousM:5.0 ,  15.2%) | ep_rewards:-0.35 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2170613 | GE:48144 | epochs:0.8  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.10  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:2171349 | GE:48159 | epochs:0.8  | ep_lens:70.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:62.0 (spuriousM:10.0,  16.1%) | ep_rewards:-0.55 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2171690 | GE:48167 | epochs:0.8  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.27 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2171884 | GE:48174 | epochs:0.8  | ep_lens:26.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.26 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2172169 | GE:48184 | epochs:0.8  | ep_lens:40.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.43 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2172504 | GE:48193 | epochs:0.8  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:5.0 ,  12.8%) | ep_rewards:-0.38 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2172637 | GE:48196 | epochs:0.8  | ep_lens:22.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:21.0 (spuriousM:3.0 ,  14.3%) | ep_rewards:-0.14 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2172745 | GE:48202 | epochs:0.8  | ep_lens:23.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:20.0 (spuriousM:3.0 ,  15.0%) | ep_rewards:-0.19 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2173155 | GE:48214 | epochs:0.8  | ep_lens:45.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.40 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2173966 | GE:48234 | epochs:0.8  | ep_lens:71.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:68.0 (spuriousM:3.0 ,   4.4%) | ep_rewards:-0.43 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2174204 | GE:48239 | epochs:0.8  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:6.0 ,  19.4%) | ep_rewards:-0.28 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2174597 | GE:48247 | epochs:0.8  | ep_lens:72.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:62.0 (spuriousM:8.0 ,  12.9%) | ep_rewards:-0.61 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2174866 | GE:48254 | epochs:0.8  | ep_lens:30.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.15 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2175515 | GE:48271 | epochs:0.8  | ep_lens:66.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:57.0 (spuriousM:1.0 ,   1.8%) | ep_rewards:-0.56 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2175956 | GE:48282 | epochs:0.8  | ep_lens:45.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:43.0 (spuriousM:7.0 ,  16.3%) | ep_rewards:-0.28 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2176350 | GE:48291 | epochs:0.8  | ep_lens:39.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.30 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2176577 | GE:48299 | epochs:0.8  | ep_lens:39.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.30 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2176854 | GE:48306 | epochs:0.8  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.24 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2177168 | GE:48314 | epochs:0.8  | ep_lens:37.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.21 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2177752 | GE:48328 | epochs:0.8  | ep_lens:68.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:60.0 (spuriousM:9.0 ,  15.0%) | ep_rewards:-0.54 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2177914 | GE:48332 | epochs:0.8  | ep_lens:26.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.21 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2178075 | GE:48335 | epochs:0.8  | ep_lens:35.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:28.0 (spuriousM:5.0 ,  17.9%) | ep_rewards:-0.35 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2178616 | GE:48347 | epochs:0.8  | ep_lens:54.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:52.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.32 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2178844 | GE:48353 | epochs:0.8  | ep_lens:33.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:27.0 (spuriousM:4.0 ,  14.8%) | ep_rewards:-0.32 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2179176 | GE:48362 | epochs:0.8  | ep_lens:43.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:41.0 (spuriousM:5.0 ,  12.2%) | ep_rewards:-0.27 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2179515 | GE:48370 | epochs:0.8  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.36 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2179737 | GE:48377 | epochs:0.8  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.30 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2179945 | GE:48384 | epochs:0.8  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.16 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2180041 | GE:48387 | epochs:0.8  | ep_lens:19.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.15 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2180096 | GE:48391 | epochs:0.8  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2180769 | GE:48407 | epochs:0.8  | ep_lens:60.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:53.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.48 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2181052 | GE:48415 | epochs:0.8  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.27 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2181406 | GE:48427 | epochs:0.8  | ep_lens:44.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.42 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2181895 | GE:48434 | epochs:0.8  | ep_lens:71.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:61.0 (spuriousM:2.0 ,   3.3%) | ep_rewards:-0.61 | mean_Q:-0.00  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2182582 | GE:48450 | epochs:0.8  | ep_lens:66.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:54.0 (spuriousM:2.0 ,   3.7%) | ep_rewards:-0.63 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2183242 | GE:48467 | epochs:0.8  | ep_lens:51.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:47.0 (spuriousM:4.0 ,   8.5%) | ep_rewards:-0.36 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2183709 | GE:48477 | epochs:0.8  | ep_lens:54.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:46.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.47 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2184054 | GE:48487 | epochs:0.8  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.26 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2184324 | GE:48493 | epochs:0.8  | ep_lens:45.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.40 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2184561 | GE:48495 | epochs:0.8  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.22 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2184799 | GE:48501 | epochs:0.8  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.29 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2185136 | GE:48511 | epochs:0.8  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.29 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2185779 | GE:48526 | epochs:0.8  | ep_lens:53.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:52.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.29 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2185907 | GE:48532 | epochs:0.8  | ep_lens:23.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.14 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2186075 | GE:48536 | epochs:0.8  | ep_lens:22.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.16 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2186457 | GE:48550 | epochs:0.8  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.32 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2186862 | GE:48561 | epochs:0.8  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.34 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2186956 | GE:48563 | epochs:0.8  | ep_lens:21.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.13 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2187097 | GE:48567 | epochs:0.8  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2187198 | GE:48569 | epochs:0.8  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.12  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2187436 | GE:48577 | epochs:0.8  | ep_lens:38.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:32.0 (spuriousM:5.0 ,  15.6%) | ep_rewards:-0.34 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2187848 | GE:48582 | epochs:0.8  | ep_lens:62.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:52.0 (spuriousM:7.0 ,  13.5%) | ep_rewards:-0.56 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2188239 | GE:48593 | epochs:0.8  | ep_lens:57.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:47.0 (spuriousM:9.0 ,  19.1%) | ep_rewards:-0.54 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2188568 | GE:48601 | epochs:0.8  | ep_lens:43.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:39.0 (spuriousM:7.0 ,  17.9%) | ep_rewards:-0.32 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2188849 | GE:48607 | epochs:0.8  | ep_lens:31.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:30.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.82  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2189245 | GE:48613 | epochs:0.8  | ep_lens:55.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:49.0 (spuriousM:13.0,  26.5%) | ep_rewards:-0.43 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2189601 | GE:48618 | epochs:0.8  | ep_lens:50.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.45 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2189998 | GE:48629 | epochs:0.8  | ep_lens:68.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:54.0 (spuriousM:14.0,  25.9%) | ep_rewards:-0.69 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2190162 | GE:48630 | epochs:0.8  | ep_lens:30.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.28 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2190364 | GE:48635 | epochs:0.8  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.16 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2190988 | GE:48649 | epochs:0.8  | ep_lens:68.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:57.0 (spuriousM:7.0 ,  12.3%) | ep_rewards:-0.62 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2191218 | GE:48652 | epochs:0.8  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.32 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2191585 | GE:48660 | epochs:0.8  | ep_lens:49.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.40 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2191720 | GE:48667 | epochs:0.8  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2191899 | GE:48671 | epochs:0.8  | ep_lens:26.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:23.0 (spuriousM:5.0 ,  21.7%) | ep_rewards:-0.21 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2192545 | GE:48684 | epochs:0.8  | ep_lens:74.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:62.0 (spuriousM:3.0 ,   4.8%) | ep_rewards:-0.67 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2192629 | GE:48687 | epochs:0.8  | ep_lens:15.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:14.0 (spuriousM:1.0 ,   7.1%) | ep_rewards:-0.10 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2193033 | GE:48697 | epochs:0.8  | ep_lens:39.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.20 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2193156 | GE:48698 | epochs:0.8  | ep_lens:21.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.11 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2193252 | GE:48701 | epochs:0.8  | ep_lens:18.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.12 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2193577 | GE:48708 | epochs:0.8  | ep_lens:46.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.41 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2194254 | GE:48725 | epochs:0.8  | ep_lens:75.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:64.0 (spuriousM:9.0 ,  14.1%) | ep_rewards:-0.65 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2194456 | GE:48732 | epochs:0.8  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.22 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2194941 | GE:48742 | epochs:0.8  | ep_lens:66.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:54.0 (spuriousM:4.0 ,   7.4%) | ep_rewards:-0.63 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2195126 | GE:48747 | epochs:0.8  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.31 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2195962 | GE:48768 | epochs:0.8  | ep_lens:74.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:66.0 (spuriousM:12.0,  18.2%) | ep_rewards:-0.57 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2196157 | GE:48774 | epochs:0.8  | ep_lens:29.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.20 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2196315 | GE:48779 | epochs:0.8  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.07  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2196428 | GE:48782 | epochs:0.8  | ep_lens:18.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.12 | mean_Q:-0.01  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2196650 | GE:48789 | epochs:0.8  | ep_lens:27.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.29 | mean_Q:0.01   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2196945 | GE:48798 | epochs:0.8  | ep_lens:46.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.36 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2197435 | GE:48807 | epochs:0.8  | ep_lens:54.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:44.0 (spuriousM:7.0 ,  15.9%) | ep_rewards:-0.52 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2197616 | GE:48811 | epochs:0.8  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.20 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2198080 | GE:48821 | epochs:0.8  | ep_lens:53.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:49.0 (spuriousM:2.0 ,   4.1%) | ep_rewards:-0.37 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2198368 | GE:48827 | epochs:0.8  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.23 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2199394 | GE:48853 | epochs:0.8  | ep_lens:82.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:72.0 (spuriousM:3.0 ,   4.2%) | ep_rewards:-0.66 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2199891 | GE:48869 | epochs:0.8  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.33 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2200167 | GE:48877 | epochs:0.8  | ep_lens:38.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.34 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2200447 | GE:48883 | epochs:0.8  | ep_lens:39.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.25 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2200635 | GE:48887 | epochs:0.8  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.16 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2200715 | GE:48889 | epochs:0.8  | ep_lens:21.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.16 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2200874 | GE:48893 | epochs:0.8  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.18 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2201108 | GE:48902 | epochs:0.8  | ep_lens:40.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.38 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2201398 | GE:48908 | epochs:0.8  | ep_lens:48.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.47 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2201627 | GE:48912 | epochs:0.8  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.30 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2201734 | GE:48916 | epochs:0.8  | ep_lens:21.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:19.0 (spuriousM:3.0 ,  15.8%) | ep_rewards:-0.16 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2201836 | GE:48919 | epochs:0.8  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2202139 | GE:48929 | epochs:0.8  | ep_lens:45.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.30 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2202522 | GE:48938 | epochs:0.8  | ep_lens:46.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.43 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2202642 | GE:48940 | epochs:0.8  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2203020 | GE:48954 | epochs:0.8  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.28 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2203172 | GE:48955 | epochs:0.8  | ep_lens:23.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.19 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2203750 | GE:48967 | epochs:0.8  | ep_lens:51.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:46.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.38 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2204207 | GE:48979 | epochs:0.8  | ep_lens:54.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:48.0 (spuriousM:2.0 ,   4.2%) | ep_rewards:-0.42 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2204280 | GE:48981 | epochs:0.8  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.13  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2204442 | GE:48985 | epochs:0.8  | ep_lens:33.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.32 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2204694 | GE:48990 | epochs:0.8  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.26 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2205324 | GE:49001 | epochs:0.8  | ep_lens:58.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:52.0 (spuriousM:5.0 ,   9.6%) | ep_rewards:-0.44 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2205537 | GE:49006 | epochs:0.8  | ep_lens:39.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.40 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2205800 | GE:49012 | epochs:0.8  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.27 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2206059 | GE:49018 | epochs:0.8  | ep_lens:37.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.36 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2206788 | GE:49035 | epochs:0.8  | ep_lens:66.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:58.0 (spuriousM:1.0 ,   1.7%) | ep_rewards:-0.53 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2207299 | GE:49045 | epochs:0.8  | ep_lens:58.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:49.0 (spuriousM:4.0 ,   8.2%) | ep_rewards:-0.52 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2207888 | GE:49056 | epochs:0.8  | ep_lens:72.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:64.0 (spuriousM:10.0,  15.6%) | ep_rewards:-0.56 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2208078 | GE:49062 | epochs:0.8  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.19 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2208332 | GE:49069 | epochs:0.8  | ep_lens:46.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.43 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2208493 | GE:49071 | epochs:0.8  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.25  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2208616 | GE:49073 | epochs:0.8  | ep_lens:23.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.19 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2209181 | GE:49087 | epochs:0.8  | ep_lens:75.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:63.0 (spuriousM:4.0 ,   6.3%) | ep_rewards:-0.68 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2209745 | GE:49100 | epochs:0.8  | ep_lens:68.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:61.0 (spuriousM:4.0 ,   6.6%) | ep_rewards:-0.52 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2209852 | GE:49104 | epochs:0.8  | ep_lens:10.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:9.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.14  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2210077 | GE:49108 | epochs:0.8  | ep_lens:44.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.42 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2210240 | GE:49111 | epochs:0.8  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.22 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2210297 | GE:49113 | epochs:0.8  | ep_lens:9.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:8.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.06  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2211007 | GE:49127 | epochs:0.8  | ep_lens:81.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:73.0 (spuriousM:4.0 ,   5.5%) | ep_rewards:-0.61 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2211141 | GE:49131 | epochs:0.8  | ep_lens:22.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.16 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2211307 | GE:49134 | epochs:0.8  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.23 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2211563 | GE:49140 | epochs:0.8  | ep_lens:49.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.40 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2211895 | GE:49144 | epochs:0.8  | ep_lens:47.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.44 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2212147 | GE:49152 | epochs:0.8  | ep_lens:39.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.30 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2212674 | GE:49166 | epochs:0.8  | ep_lens:72.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:60.0 (spuriousM:4.0 ,   6.7%) | ep_rewards:-0.66 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2213094 | GE:49176 | epochs:0.8  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.40 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2213479 | GE:49186 | epochs:0.8  | ep_lens:48.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.34 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2213812 | GE:49193 | epochs:0.8  | ep_lens:46.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.41 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2214228 | GE:49201 | epochs:0.8  | ep_lens:61.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.48 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2214513 | GE:49208 | epochs:0.8  | ep_lens:60.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:48.0 (spuriousM:18.0,  37.5%) | ep_rewards:-0.60 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2215452 | GE:49226 | epochs:0.8  | ep_lens:92.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:80.0 (spuriousM:1.0 ,   1.2%) | ep_rewards:-0.76 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2216217 | GE:49240 | epochs:0.8  | ep_lens:81.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:71.0 (spuriousM:5.0 ,   7.0%) | ep_rewards:-0.66 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2217000 | GE:49256 | epochs:0.8  | ep_lens:78.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:69.0 (spuriousM:2.0 ,   2.9%) | ep_rewards:-0.62 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2217805 | GE:49277 | epochs:0.8  | ep_lens:75.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:70.0 (spuriousM:5.0 ,   7.1%) | ep_rewards:-0.50 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2217912 | GE:49281 | epochs:0.8  | ep_lens:17.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:2.0 ,  11.8%) | ep_rewards:-0.09 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2218104 | GE:49285 | epochs:0.8  | ep_lens:27.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.29 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2218350 | GE:49291 | epochs:0.8  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.25 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2218556 | GE:49296 | epochs:0.8  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.26 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2218730 | GE:49301 | epochs:0.8  | ep_lens:33.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.32 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2218853 | GE:49304 | epochs:0.8  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.17  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2219167 | GE:49312 | epochs:0.8  | ep_lens:33.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.22 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2219479 | GE:49320 | epochs:0.8  | ep_lens:48.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.44 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2219582 | GE:49324 | epochs:0.8  | ep_lens:23.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.14 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2219825 | GE:49329 | epochs:0.8  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.34 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2219954 | GE:49333 | epochs:0.8  | ep_lens:24.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:21.0 (spuriousM:3.0 ,  14.3%) | ep_rewards:-0.20 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2220068 | GE:49334 | epochs:0.8  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2220188 | GE:49340 | epochs:0.8  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2220432 | GE:49345 | epochs:0.8  | ep_lens:37.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.24 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2220903 | GE:49355 | epochs:0.8  | ep_lens:62.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:55.0 (spuriousM:12.0,  21.8%) | ep_rewards:-0.49 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2221202 | GE:49363 | epochs:0.8  | ep_lens:36.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.33 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2221300 | GE:49367 | epochs:0.8  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.05  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2221398 | GE:49370 | epochs:0.8  | ep_lens:17.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:16.0 (spuriousM:1.0 ,   6.2%) | ep_rewards:-0.11 | mean_Q:-0.01  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2221608 | GE:49374 | epochs:0.8  | ep_lens:32.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.19 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2221702 | GE:49376 | epochs:0.8  | ep_lens:20.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.13 | mean_Q:0.02   | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2222020 | GE:49384 | epochs:0.8  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.21 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2222803 | GE:49402 | epochs:0.8  | ep_lens:75.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:66.0 (spuriousM:6.0 ,   9.1%) | ep_rewards:-0.60 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2222975 | GE:49407 | epochs:0.8  | ep_lens:24.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.12 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2223220 | GE:49412 | epochs:0.8  | ep_lens:28.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:27.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.10  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2223364 | GE:49417 | epochs:0.8  | ep_lens:25.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.23 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2223464 | GE:49419 | epochs:0.8  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2224329 | GE:49439 | epochs:0.8  | ep_lens:80.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:71.0 (spuriousM:6.0 ,   8.5%) | ep_rewards:-0.63 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2225360 | GE:49460 | epochs:0.8  | ep_lens:85.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:78.0 (spuriousM:4.0 ,   5.1%) | ep_rewards:-0.60 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2226488 | GE:49480 | epochs:0.8  | ep_lens:100.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:88.0 (spuriousM:9.0 ,  10.2%) | ep_rewards:-0.80 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2226827 | GE:49487 | epochs:0.8  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:4.0 ,  10.0%) | ep_rewards:-0.35 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2227153 | GE:49498 | epochs:0.8  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.37 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2227328 | GE:49504 | epochs:0.8  | ep_lens:29.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.25 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2227809 | GE:49515 | epochs:0.8  | ep_lens:49.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.47 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2228009 | GE:49519 | epochs:0.8  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:5.0 ,  17.9%) | ep_rewards:-0.29 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2228406 | GE:49528 | epochs:0.8  | ep_lens:45.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.48 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2228478 | GE:49529 | epochs:0.8  | ep_lens:10.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:9.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2228703 | GE:49536 | epochs:0.8  | ep_lens:27.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.24 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2229288 | GE:49550 | epochs:0.8  | ep_lens:58.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:48.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.54 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2230062 | GE:49572 | epochs:0.8  | ep_lens:71.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:60.0 (spuriousM:3.0 ,   5.0%) | ep_rewards:-0.63 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2230273 | GE:49578 | epochs:0.8  | ep_lens:31.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.28 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2230362 | GE:49580 | epochs:0.8  | ep_lens:17.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.09 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2230453 | GE:49581 | epochs:0.8  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2230913 | GE:49595 | epochs:0.8  | ep_lens:57.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:49.0 (spuriousM:9.0 ,  18.4%) | ep_rewards:-0.49 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2231763 | GE:49619 | epochs:0.8  | ep_lens:75.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:64.0 (spuriousM:1.0 ,   1.6%) | ep_rewards:-0.65 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2232020 | GE:49624 | epochs:0.8  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.19 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2232209 | GE:49631 | epochs:0.8  | ep_lens:30.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.28 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2232578 | GE:49637 | epochs:0.8  | ep_lens:46.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.51 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2232982 | GE:49648 | epochs:0.8  | ep_lens:49.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.42 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2233193 | GE:49653 | epochs:0.8  | ep_lens:36.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.38 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2233437 | GE:49658 | epochs:0.8  | ep_lens:33.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.22 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2233508 | GE:49661 | epochs:0.8  | ep_lens:18.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.12 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2233744 | GE:49669 | epochs:0.8  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.22 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2234095 | GE:49676 | epochs:0.8  | ep_lens:48.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.37 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2234437 | GE:49686 | epochs:0.8  | ep_lens:38.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.42 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2234841 | GE:49698 | epochs:0.8  | ep_lens:54.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:41.0 (spuriousM:5.0 ,  12.2%) | ep_rewards:-0.60 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2235013 | GE:49703 | epochs:0.8  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:5.0 ,  18.5%) | ep_rewards:-0.23 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2235233 | GE:49710 | epochs:0.8  | ep_lens:26.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.23 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2235554 | GE:49720 | epochs:0.8  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.33 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2235675 | GE:49725 | epochs:0.8  | ep_lens:20.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.13 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2235919 | GE:49734 | epochs:0.8  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.27 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2236144 | GE:49738 | epochs:0.8  | ep_lens:41.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:33.0 (spuriousM:5.0 ,  15.2%) | ep_rewards:-0.41 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2236413 | GE:49748 | epochs:0.8  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.25 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2236704 | GE:49757 | epochs:0.8  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.25 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2236789 | GE:49760 | epochs:0.8  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.00  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2237157 | GE:49768 | epochs:0.8  | ep_lens:44.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:37.0 (spuriousM:5.0 ,  13.5%) | ep_rewards:-0.40 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2237516 | GE:49775 | epochs:0.8  | ep_lens:51.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:44.0 (spuriousM:7.0 ,  15.9%) | ep_rewards:-0.43 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2237656 | GE:49779 | epochs:0.8  | ep_lens:29.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.32 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2237698 | GE:49780 | epochs:0.8  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.02  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2237888 | GE:49784 | epochs:0.8  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.23 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2237947 | GE:49787 | epochs:0.8  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.03  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2238219 | GE:49794 | epochs:0.8  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.33 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2239033 | GE:49811 | epochs:0.8  | ep_lens:74.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:60.0 (spuriousM:10.0,  16.7%) | ep_rewards:-0.72 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2239550 | GE:49820 | epochs:0.8  | ep_lens:77.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:64.0 (spuriousM:4.0 ,   6.2%) | ep_rewards:-0.71 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2240058 | GE:49828 | epochs:0.8  | ep_lens:79.0 | edits:20.0 (spuriousE:20.0, 100.0%) | moves:59.0 (spuriousM:13.0,  22.0%) | ep_rewards:-0.90 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2240608 | GE:49841 | epochs:0.8  | ep_lens:65.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:52.0 (spuriousM:3.0 ,   5.8%) | ep_rewards:-0.65 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2240956 | GE:49851 | epochs:0.8  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.37 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2241163 | GE:49858 | epochs:0.8  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.21 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2241286 | GE:49861 | epochs:0.8  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.12  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2241570 | GE:49869 | epochs:0.8  | ep_lens:30.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.30 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2241868 | GE:49880 | epochs:0.8  | ep_lens:40.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:33.0 (spuriousM:5.0 ,  15.2%) | ep_rewards:-0.38 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2241998 | GE:49883 | epochs:0.8  | ep_lens:20.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.12 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2242255 | GE:49894 | epochs:0.8  | ep_lens:47.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.49 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2242432 | GE:49896 | epochs:0.8  | ep_lens:36.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.36 | mean_Q:0.02   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2242500 | GE:49898 | epochs:0.8  | ep_lens:10.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:9.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.03  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2242647 | GE:49904 | epochs:0.8  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:5.0 ,  20.8%) | ep_rewards:-0.24 | mean_Q:0.02   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2242833 | GE:49908 | epochs:0.8  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.07  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2243094 | GE:49911 | epochs:0.8  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.24 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2243331 | GE:49916 | epochs:0.8  | ep_lens:45.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.40 | mean_Q:-0.00  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2243594 | GE:49923 | epochs:0.8  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.24 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2243871 | GE:49932 | epochs:0.8  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.28 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2244169 | GE:49937 | epochs:0.8  | ep_lens:32.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.26 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2244645 | GE:49951 | epochs:0.8  | ep_lens:58.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:47.0 (spuriousM:9.0 ,  19.1%) | ep_rewards:-0.57 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2244827 | GE:49956 | epochs:0.8  | ep_lens:31.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.21 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2245061 | GE:49961 | epochs:0.8  | ep_lens:29.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.17 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2245290 | GE:49965 | epochs:0.8  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.33 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2245696 | GE:49971 | epochs:0.8  | ep_lens:58.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:50.0 (spuriousM:5.0 ,  10.0%) | ep_rewards:-0.49 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2245865 | GE:49974 | epochs:0.8  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.30 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2246123 | GE:49979 | epochs:0.8  | ep_lens:38.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:37.0 (spuriousM:6.0 ,  16.2%) | ep_rewards:-0.22 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2246238 | GE:49983 | epochs:0.8  | ep_lens:11.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:9.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.17  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2246836 | GE:49994 | epochs:0.8  | ep_lens:62.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:52.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.56 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2247079 | GE:49999 | epochs:0.8  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:11.0,  29.7%) | ep_rewards:-0.37 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2247298 | GE:50004 | epochs:0.8  | ep_lens:27.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.24 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2248009 | GE:50025 | epochs:0.8  | ep_lens:77.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:62.0 (spuriousM:2.0 ,   3.2%) | ep_rewards:-0.76 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2248125 | GE:50026 | epochs:0.8  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.10  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2248597 | GE:50039 | epochs:0.8  | ep_lens:56.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:52.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.38 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2248971 | GE:50046 | epochs:0.8  | ep_lens:47.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.41 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2249097 | GE:50050 | epochs:0.8  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.20 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2249267 | GE:50053 | epochs:0.8  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.19 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2249379 | GE:50057 | epochs:0.8  | ep_lens:21.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.16 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2249625 | GE:50065 | epochs:0.8  | ep_lens:42.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:31.0 (spuriousM:7.0 ,  22.6%) | ep_rewards:-0.49 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2249788 | GE:50069 | epochs:0.8  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:3.0 ,  13.0%) | ep_rewards:-0.18 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2249894 | GE:50071 | epochs:0.8  | ep_lens:22.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:21.0 (spuriousM:3.0 ,  14.3%) | ep_rewards:-0.14 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2250009 | GE:50075 | epochs:0.8  | ep_lens:23.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.22 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2250241 | GE:50080 | epochs:0.8  | ep_lens:25.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.13 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2250812 | GE:50093 | epochs:0.8  | ep_lens:58.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:52.0 (spuriousM:3.0 ,   5.8%) | ep_rewards:-0.44 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2250950 | GE:50096 | epochs:0.8  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.18 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2251603 | GE:50113 | epochs:0.8  | ep_lens:60.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.55 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2251688 | GE:50115 | epochs:0.8  | ep_lens:20.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.12 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2251801 | GE:50117 | epochs:0.8  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.18  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2252129 | GE:50128 | epochs:0.8  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.26 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2252474 | GE:50136 | epochs:0.8  | ep_lens:42.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.26 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2252971 | GE:50144 | epochs:0.8  | ep_lens:72.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:60.0 (spuriousM:2.0 ,   3.3%) | ep_rewards:-0.66 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2253051 | GE:50147 | epochs:0.8  | ep_lens:19.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.15 | mean_Q:-0.00  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2254012 | GE:50166 | epochs:0.8  | ep_lens:87.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:74.0 (spuriousM:3.0 ,   4.1%) | ep_rewards:-0.76 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2254386 | GE:50175 | epochs:0.8  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:7.0 ,  16.3%) | ep_rewards:-0.43 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2254560 | GE:50179 | epochs:0.8  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:5.0 ,  18.5%) | ep_rewards:-0.23 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2255156 | GE:50195 | epochs:0.8  | ep_lens:49.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:43.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.40 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2255469 | GE:50203 | epochs:0.8  | ep_lens:30.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.28 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2255743 | GE:50210 | epochs:0.8  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.38 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2256123 | GE:50221 | epochs:0.8  | ep_lens:47.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.39 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2256295 | GE:50227 | epochs:0.8  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.24 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2256709 | GE:50236 | epochs:0.8  | ep_lens:55.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.53 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2257316 | GE:50250 | epochs:0.8  | ep_lens:58.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:53.0 (spuriousM:4.0 ,   7.5%) | ep_rewards:-0.42 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2258000 | GE:50268 | epochs:0.8  | ep_lens:76.0 | edits:19.0 (spuriousE:19.0, 100.0%) | moves:57.0 (spuriousM:2.0 ,   3.5%) | ep_rewards:-0.86 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2258258 | GE:50275 | epochs:0.8  | ep_lens:37.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.36 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2258614 | GE:50283 | epochs:0.8  | ep_lens:43.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.27 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2259169 | GE:50297 | epochs:0.8  | ep_lens:68.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:56.0 (spuriousM:4.0 ,   7.1%) | ep_rewards:-0.64 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2259269 | GE:50301 | epochs:0.8  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.15  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2259526 | GE:50305 | epochs:0.8  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.30 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2259666 | GE:50309 | epochs:0.8  | ep_lens:28.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.14 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2260605 | GE:50330 | epochs:0.8  | ep_lens:75.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:69.0 (spuriousM:6.0 ,   8.7%) | ep_rewards:-0.53 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2260840 | GE:50337 | epochs:0.8  | ep_lens:37.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:29.0 (spuriousM:4.0 ,  13.8%) | ep_rewards:-0.39 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2261303 | GE:50348 | epochs:0.8  | ep_lens:50.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:46.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.35 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2261590 | GE:50353 | epochs:0.8  | ep_lens:38.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.22 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2262254 | GE:50371 | epochs:0.8  | ep_lens:53.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:50.0 (spuriousM:5.0 ,  10.0%) | ep_rewards:-0.34 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2262975 | GE:50392 | epochs:0.8  | ep_lens:58.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:55.0 (spuriousM:1.0 ,   1.8%) | ep_rewards:-0.37 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2263052 | GE:50397 | epochs:0.8  | ep_lens:19.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:18.0 (spuriousM:1.0 ,   5.6%) | ep_rewards:-0.12 | mean_Q:0.00   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2263563 | GE:50407 | epochs:0.8  | ep_lens:72.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:64.0 (spuriousM:3.0 ,   4.7%) | ep_rewards:-0.56 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2263757 | GE:50410 | epochs:0.8  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.36 | mean_Q:0.00   | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2263873 | GE:50414 | epochs:0.8  | ep_lens:22.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.16 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2264165 | GE:50417 | epochs:0.8  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.38 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2264802 | GE:50429 | epochs:0.8  | ep_lens:70.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:60.0 (spuriousM:2.0 ,   3.3%) | ep_rewards:-0.60 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2265526 | GE:50446 | epochs:0.8  | ep_lens:75.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:66.0 (spuriousM:12.0,  18.2%) | ep_rewards:-0.60 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2265753 | GE:50452 | epochs:0.8  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.31 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2266587 | GE:50474 | epochs:0.8  | ep_lens:75.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:63.0 (spuriousM:2.0 ,   3.2%) | ep_rewards:-0.68 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2266701 | GE:50478 | epochs:0.8  | ep_lens:18.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:16.0 (spuriousM:2.0 ,  12.5%) | ep_rewards:-0.14 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2267262 | GE:50492 | epochs:0.8  | ep_lens:54.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:45.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.50 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2267421 | GE:50495 | epochs:0.8  | ep_lens:25.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:24.0 (spuriousM:4.0 ,  16.7%) | ep_rewards:-0.15 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2267898 | GE:50507 | epochs:0.8  | ep_lens:47.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:41.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.39 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2268015 | GE:50512 | epochs:0.8  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.07  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2268082 | GE:50516 | epochs:0.8  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.01  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2268748 | GE:50532 | epochs:0.8  | ep_lens:54.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.37 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2269031 | GE:50542 | epochs:0.8  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:5.0 ,  14.7%) | ep_rewards:-0.29 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2269323 | GE:50544 | epochs:0.8  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.38 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2269358 | GE:50547 | epochs:0.8  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.05  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2269423 | GE:50549 | epochs:0.8  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.01  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2269713 | GE:50555 | epochs:0.8  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.27 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2270076 | GE:50564 | epochs:0.8  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.40 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2270467 | GE:50574 | epochs:0.8  | ep_lens:59.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:50.0 (spuriousM:5.0 ,  10.0%) | ep_rewards:-0.52 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2270907 | GE:50580 | epochs:0.8  | ep_lens:58.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:49.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.52 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2271083 | GE:50585 | epochs:0.8  | ep_lens:28.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.17 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2271368 | GE:50590 | epochs:0.8  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.36 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2271892 | GE:50599 | epochs:0.8  | ep_lens:65.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:61.0 (spuriousM:1.0 ,   1.6%) | ep_rewards:-0.43 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2272797 | GE:50618 | epochs:0.8  | ep_lens:86.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:75.0 (spuriousM:7.0 ,   9.3%) | ep_rewards:-0.71 | mean_Q:-0.32  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2272969 | GE:50621 | epochs:0.8  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.19 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2273288 | GE:50630 | epochs:0.8  | ep_lens:41.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:39.0 (spuriousM:7.0 ,  17.9%) | ep_rewards:-0.26 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2273461 | GE:50632 | epochs:0.8  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.26 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2273589 | GE:50634 | epochs:0.8  | ep_lens:9.0  | edits:3.0  (spuriousE:2.0 ,  66.7%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.28  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:2273646 | GE:50639 | epochs:0.8  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.25  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2274202 | GE:50648 | epochs:0.8  | ep_lens:53.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:46.0 (spuriousM:6.0 ,  13.0%) | ep_rewards:-0.44 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2274303 | GE:50652 | epochs:0.8  | ep_lens:24.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.15 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2274726 | GE:50660 | epochs:0.8  | ep_lens:61.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:48.0 (spuriousM:10.0,  20.8%) | ep_rewards:-0.63 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2274949 | GE:50666 | epochs:0.8  | ep_lens:36.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.23 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2275861 | GE:50687 | epochs:0.8  | ep_lens:79.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:70.0 (spuriousM:1.0 ,   1.4%) | ep_rewards:-0.62 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2276137 | GE:50694 | epochs:0.8  | ep_lens:47.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.51 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2276775 | GE:50707 | epochs:0.8  | ep_lens:64.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:59.0 (spuriousM:1.0 ,   1.7%) | ep_rewards:-0.45 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2277232 | GE:50718 | epochs:0.8  | ep_lens:60.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:53.0 (spuriousM:7.0 ,  13.2%) | ep_rewards:-0.48 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2277396 | GE:50721 | epochs:0.8  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.22 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2277650 | GE:50730 | epochs:0.8  | ep_lens:34.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:33.0 (spuriousM:5.0 ,  15.2%) | ep_rewards:-0.20 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2277759 | GE:50732 | epochs:0.8  | ep_lens:20.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:18.0 (spuriousM:1.0 ,   5.6%) | ep_rewards:-0.15 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2277913 | GE:50735 | epochs:0.8  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.21 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2278105 | GE:50741 | epochs:0.8  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.19 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2278811 | GE:50759 | epochs:0.8  | ep_lens:58.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.39 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2279105 | GE:50763 | epochs:0.8  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.27 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2279262 | GE:50769 | epochs:0.8  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2279534 | GE:50776 | epochs:0.8  | ep_lens:36.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.23 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2279968 | GE:50787 | epochs:0.8  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.27 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2280236 | GE:50793 | epochs:0.8  | ep_lens:36.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:28.0 (spuriousM:4.0 ,  14.3%) | ep_rewards:-0.38 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2280295 | GE:50797 | epochs:0.8  | ep_lens:16.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:14.0 (spuriousM:1.0 ,   7.1%) | ep_rewards:-0.13 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2280586 | GE:50804 | epochs:0.8  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.22 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2280700 | GE:50808 | epochs:0.8  | ep_lens:21.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:18.0 (spuriousM:1.0 ,   5.6%) | ep_rewards:-0.18 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2280817 | GE:50812 | epochs:0.8  | ep_lens:22.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.14 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2281475 | GE:50830 | epochs:0.8  | ep_lens:72.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:62.0 (spuriousM:4.0 ,   6.5%) | ep_rewards:-0.61 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2281731 | GE:50838 | epochs:0.8  | ep_lens:33.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.32 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2281917 | GE:50842 | epochs:0.8  | ep_lens:25.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.13 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2282128 | GE:50849 | epochs:0.8  | ep_lens:29.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.25 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2282320 | GE:50854 | epochs:0.8  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.24 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2282688 | GE:50864 | epochs:0.8  | ep_lens:40.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:38.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.79  | mean_Q:-0.19  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2282941 | GE:50873 | epochs:0.8  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.26 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2283309 | GE:50880 | epochs:0.8  | ep_lens:48.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.49 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2283731 | GE:50891 | epochs:0.8  | ep_lens:48.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.37 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2283839 | GE:50896 | epochs:0.8  | ep_lens:23.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.14 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2285013 | GE:50921 | epochs:0.8  | ep_lens:100.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:88.0 (spuriousM:10.0,  11.4%) | ep_rewards:-0.80 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2285753 | GE:50942 | epochs:0.8  | ep_lens:67.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:59.0 (spuriousM:11.0,  18.6%) | ep_rewards:-0.54 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2286142 | GE:50949 | epochs:0.8  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.35 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2286432 | GE:50955 | epochs:0.8  | ep_lens:32.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.31 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2286781 | GE:50963 | epochs:0.8  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:13.0,  29.5%) | ep_rewards:-0.40 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2287075 | GE:50968 | epochs:0.8  | ep_lens:51.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:44.0 (spuriousM:9.0 ,  20.5%) | ep_rewards:-0.43 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2287502 | GE:50977 | epochs:0.8  | ep_lens:53.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.47 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2287882 | GE:50988 | epochs:0.8  | ep_lens:55.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:49.0 (spuriousM:10.0,  20.4%) | ep_rewards:-0.43 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2288462 | GE:51000 | epochs:0.8  | ep_lens:63.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:53.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.57 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2289087 | GE:51016 | epochs:0.8  | ep_lens:61.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:53.0 (spuriousM:4.0 ,   7.5%) | ep_rewards:-0.51 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2289298 | GE:51021 | epochs:0.8  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.26 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2289856 | GE:51038 | epochs:0.8  | ep_lens:64.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:53.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.60 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2290602 | GE:51053 | epochs:0.8  | ep_lens:75.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:65.0 (spuriousM:1.0 ,   1.5%) | ep_rewards:-0.63 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2290967 | GE:51063 | epochs:0.8  | ep_lens:51.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.41 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2291228 | GE:51070 | epochs:0.8  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.25 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2291585 | GE:51080 | epochs:0.8  | ep_lens:48.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:45.0 (spuriousM:6.0 ,  13.3%) | ep_rewards:-0.32 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2291727 | GE:51084 | epochs:0.8  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.16 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2292290 | GE:51098 | epochs:0.8  | ep_lens:78.0 | edits:14.0 (spuriousE:13.0,  92.9%) | moves:64.0 (spuriousM:7.0 ,  10.9%) | ep_rewards:-0.70 | mean_Q:-0.13  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:2292413 | GE:51099 | epochs:0.8  | ep_lens:19.0 | edits:2.0  (spuriousE:1.0 ,  50.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:2292870 | GE:51109 | epochs:0.8  | ep_lens:61.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:53.0 (spuriousM:4.0 ,   7.5%) | ep_rewards:-0.51 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2293020 | GE:51115 | epochs:0.8  | ep_lens:24.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.20 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2293253 | GE:51119 | epochs:0.8  | ep_lens:33.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:26.0 (spuriousM:5.0 ,  19.2%) | ep_rewards:-0.34 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2293744 | GE:51133 | epochs:0.8  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:3.0 ,   6.0%) | ep_rewards:-0.46 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2294101 | GE:51141 | epochs:0.8  | ep_lens:38.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.34 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2294327 | GE:51146 | epochs:0.8  | ep_lens:34.0 | edits:7.0  (spuriousE:6.0 ,  85.7%) | moves:27.0 (spuriousM:6.0 ,  22.2%) | ep_rewards:0.65  | mean_Q:-0.03  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:2294556 | GE:51148 | epochs:0.8  | ep_lens:35.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.38 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2294948 | GE:51160 | epochs:0.8  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.43 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2295170 | GE:51165 | epochs:0.8  | ep_lens:27.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.14 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2295365 | GE:51169 | epochs:0.8  | ep_lens:34.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.32 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2295489 | GE:51174 | epochs:0.8  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:2295844 | GE:51183 | epochs:0.8  | ep_lens:44.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:40.0 (spuriousM:4.0 ,  10.0%) | ep_rewards:-0.32 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2296086 | GE:51188 | epochs:0.8  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.29 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2296483 | GE:51203 | epochs:0.8  | ep_lens:55.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.53 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2296654 | GE:51207 | epochs:0.8  | ep_lens:30.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.30 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2296860 | GE:51210 | epochs:0.8  | ep_lens:35.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.35 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2297054 | GE:51214 | epochs:0.8  | ep_lens:26.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.21 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2297271 | GE:51220 | epochs:0.8  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.26 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2297726 | GE:51227 | epochs:0.8  | ep_lens:56.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.43 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2297937 | GE:51236 | epochs:0.8  | ep_lens:24.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2298177 | GE:51240 | epochs:0.8  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.34 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2298508 | GE:51248 | epochs:0.8  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.37 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2298620 | GE:51252 | epochs:0.8  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2298841 | GE:51255 | epochs:0.8  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.31 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2298964 | GE:51257 | epochs:0.8  | ep_lens:19.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.15 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2299603 | GE:51273 | epochs:0.8  | ep_lens:75.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:66.0 (spuriousM:11.0,  16.7%) | ep_rewards:-0.60 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2299889 | GE:51279 | epochs:0.8  | ep_lens:41.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:40.0 (spuriousM:6.0 ,  15.0%) | ep_rewards:-0.23 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2300821 | GE:51296 | epochs:0.8  | ep_lens:90.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:76.0 (spuriousM:3.0 ,   3.9%) | ep_rewards:-0.80 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2301155 | GE:51304 | epochs:0.8  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.34 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2301451 | GE:51313 | epochs:0.8  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.27 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2301849 | GE:51321 | epochs:0.8  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.33 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2302774 | GE:51342 | epochs:0.8  | ep_lens:91.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:79.0 (spuriousM:1.0 ,   1.3%) | ep_rewards:-0.76 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2303180 | GE:51348 | epochs:0.8  | ep_lens:54.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:49.0 (spuriousM:5.0 ,  10.2%) | ep_rewards:-0.40 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2303386 | GE:51353 | epochs:0.8  | ep_lens:27.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.16 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2303563 | GE:51358 | epochs:0.8  | ep_lens:31.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.36 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2303811 | GE:51363 | epochs:0.8  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.25 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2303904 | GE:51364 | epochs:0.8  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2304249 | GE:51373 | epochs:0.8  | ep_lens:43.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.44 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2304706 | GE:51382 | epochs:0.8  | ep_lens:67.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:51.0 (spuriousM:7.0 ,  13.7%) | ep_rewards:-0.74 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2305589 | GE:51400 | epochs:0.8  | ep_lens:85.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:76.0 (spuriousM:2.0 ,   2.6%) | ep_rewards:-0.65 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2306175 | GE:51414 | epochs:0.8  | ep_lens:65.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:55.0 (spuriousM:2.0 ,   3.6%) | ep_rewards:-0.58 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2307096 | GE:51431 | epochs:0.8  | ep_lens:72.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:70.0 (spuriousM:7.0 ,  10.0%) | ep_rewards:-0.41 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2307469 | GE:51439 | epochs:0.9  | ep_lens:51.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:43.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.46 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2307824 | GE:51448 | epochs:0.9  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.35 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2308139 | GE:51456 | epochs:0.9  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.23 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2308304 | GE:51461 | epochs:0.9  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2308893 | GE:51474 | epochs:0.9  | ep_lens:63.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.54 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2309032 | GE:51478 | epochs:0.9  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:5.0 ,  17.9%) | ep_rewards:-0.23 | mean_Q:0.00   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2309306 | GE:51486 | epochs:0.9  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.22 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2309976 | GE:51500 | epochs:0.9  | ep_lens:72.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:58.0 (spuriousM:4.0 ,   6.9%) | ep_rewards:-0.71 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2310115 | GE:51503 | epochs:0.9  | ep_lens:29.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.27 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2310492 | GE:51514 | epochs:0.9  | ep_lens:51.0 | edits:7.0  (spuriousE:6.0 ,  85.7%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.39 | mean_Q:-0.15  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:2310697 | GE:51521 | epochs:0.9  | ep_lens:32.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.31 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2311549 | GE:51544 | epochs:0.9  | ep_lens:81.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:68.0 (spuriousM:13.0,  19.1%) | ep_rewards:-0.73 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2311729 | GE:51549 | epochs:0.9  | ep_lens:32.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.31 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2312829 | GE:51577 | epochs:0.9  | ep_lens:92.0 | edits:21.0 (spuriousE:21.0, 100.0%) | moves:71.0 (spuriousM:3.0 ,   4.2%) | ep_rewards:-0.99 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2313207 | GE:51586 | epochs:0.9  | ep_lens:30.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:29.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.82  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2313417 | GE:51591 | epochs:0.9  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.20 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2313955 | GE:51603 | epochs:0.9  | ep_lens:59.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:50.0 (spuriousM:8.0 ,  16.0%) | ep_rewards:-0.52 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2314198 | GE:51611 | epochs:0.9  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:7.0 ,  22.6%) | ep_rewards:-0.37 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2314311 | GE:51616 | epochs:0.9  | ep_lens:21.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:18.0 (spuriousM:3.0 ,  16.7%) | ep_rewards:-0.18 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2314490 | GE:51623 | epochs:0.9  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.25  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2314661 | GE:51627 | epochs:0.9  | ep_lens:31.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.36 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2314787 | GE:51629 | epochs:0.9  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.13  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2315079 | GE:51635 | epochs:0.9  | ep_lens:44.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.50 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2315360 | GE:51642 | epochs:0.9  | ep_lens:50.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.53 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2315522 | GE:51646 | epochs:0.9  | ep_lens:23.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.17 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2315839 | GE:51650 | epochs:0.9  | ep_lens:49.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.40 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2316143 | GE:51657 | epochs:0.9  | ep_lens:43.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.32 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2316252 | GE:51660 | epochs:0.9  | ep_lens:23.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.14 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2316949 | GE:51677 | epochs:0.9  | ep_lens:72.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:65.0 (spuriousM:4.0 ,   6.2%) | ep_rewards:-0.54 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2317056 | GE:51682 | epochs:0.9  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2317606 | GE:51694 | epochs:0.9  | ep_lens:53.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:45.0 (spuriousM:4.0 ,   8.9%) | ep_rewards:-0.47 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2317996 | GE:51703 | epochs:0.9  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.38 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2318262 | GE:51711 | epochs:0.9  | ep_lens:27.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.16 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2318517 | GE:51720 | epochs:0.9  | ep_lens:33.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.19 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2318767 | GE:51725 | epochs:0.9  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.37 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2319230 | GE:51736 | epochs:0.9  | ep_lens:60.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:51.0 (spuriousM:4.0 ,   7.8%) | ep_rewards:-0.53 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2319836 | GE:51750 | epochs:0.9  | ep_lens:62.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:51.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.59 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2320215 | GE:51757 | epochs:0.9  | ep_lens:54.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:43.0 (spuriousM:9.0 ,  20.9%) | ep_rewards:-0.55 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2320519 | GE:51765 | epochs:0.9  | ep_lens:40.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:34.0 (spuriousM:7.0 ,  20.6%) | ep_rewards:-0.35 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2321197 | GE:51778 | epochs:0.9  | ep_lens:73.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:57.0 (spuriousM:6.0 ,  10.5%) | ep_rewards:-0.77 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2321444 | GE:51784 | epochs:0.9  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.27 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2322158 | GE:51804 | epochs:0.9  | ep_lens:72.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:62.0 (spuriousM:2.0 ,   3.2%) | ep_rewards:-0.61 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2323225 | GE:51829 | epochs:0.9  | ep_lens:94.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:80.0 (spuriousM:5.0 ,   6.2%) | ep_rewards:-0.82 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2324012 | GE:51845 | epochs:0.9  | ep_lens:76.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:64.0 (spuriousM:1.0 ,   1.6%) | ep_rewards:-0.68 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2324140 | GE:51849 | epochs:0.9  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.16  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2324399 | GE:51854 | epochs:0.9  | ep_lens:49.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:42.0 (spuriousM:15.0,  35.7%) | ep_rewards:-0.42 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2324628 | GE:51861 | epochs:0.9  | ep_lens:31.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.28 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2324809 | GE:51866 | epochs:0.9  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2325743 | GE:51886 | epochs:0.9  | ep_lens:100.0 | edits:21.0 (spuriousE:21.0, 100.0%) | moves:79.0 (spuriousM:1.0 ,   1.3%) | ep_rewards:-1.03 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2326095 | GE:51896 | epochs:0.9  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.37 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2326319 | GE:51898 | epochs:0.9  | ep_lens:41.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.46 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2326620 | GE:51908 | epochs:0.9  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.31 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2327310 | GE:51920 | epochs:0.9  | ep_lens:60.0 | edits:7.0  (spuriousE:6.0 ,  85.7%) | moves:53.0 (spuriousM:3.0 ,   5.7%) | ep_rewards:0.52  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:2327624 | GE:51925 | epochs:0.9  | ep_lens:44.0 | edits:4.0  (spuriousE:3.0 ,  75.0%) | moves:40.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.68  | mean_Q:-0.15  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:2327785 | GE:51929 | epochs:0.9  | ep_lens:17.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.19  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2327992 | GE:51933 | epochs:0.9  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.26 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2328108 | GE:51935 | epochs:0.9  | ep_lens:23.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:22.0 (spuriousM:4.0 ,  18.2%) | ep_rewards:-0.14 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2329304 | GE:51960 | epochs:0.9  | ep_lens:100.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:82.0 (spuriousM:3.0 ,   3.7%) | ep_rewards:-0.95 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2330144 | GE:51976 | epochs:0.9  | ep_lens:80.0 | edits:21.0 (spuriousE:21.0, 100.0%) | moves:59.0 (spuriousM:3.0 ,   5.1%) | ep_rewards:-0.93 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2330345 | GE:51980 | epochs:0.9  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.16 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2330996 | GE:51993 | epochs:0.9  | ep_lens:67.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:56.0 (spuriousM:1.0 ,   1.8%) | ep_rewards:-0.61 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2331493 | GE:52004 | epochs:0.9  | ep_lens:51.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.46 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2331695 | GE:52009 | epochs:0.9  | ep_lens:34.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.20 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2331995 | GE:52015 | epochs:0.9  | ep_lens:45.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.50 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2332088 | GE:52020 | epochs:0.9  | ep_lens:22.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.16 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2332661 | GE:52032 | epochs:0.9  | ep_lens:56.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:50.0 (spuriousM:8.0 ,  16.0%) | ep_rewards:-0.43 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2333508 | GE:52050 | epochs:0.9  | ep_lens:84.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:68.0 (spuriousM:6.0 ,   8.8%) | ep_rewards:-0.82 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2333620 | GE:52054 | epochs:0.9  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.25  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2333920 | GE:52063 | epochs:0.9  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.30 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2334239 | GE:52074 | epochs:0.9  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.30 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2334737 | GE:52086 | epochs:0.9  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.46 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2334944 | GE:52090 | epochs:0.9  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.29 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2335055 | GE:52094 | epochs:0.9  | ep_lens:24.0 | edits:4.0  (spuriousE:3.0 ,  75.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.78  | mean_Q:-0.02  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:2335185 | GE:52098 | epochs:0.9  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.03  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2335572 | GE:52103 | epochs:0.9  | ep_lens:48.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.37 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2335698 | GE:52109 | epochs:0.9  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2336721 | GE:52131 | epochs:0.9  | ep_lens:85.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:68.0 (spuriousM:2.0 ,   2.9%) | ep_rewards:-0.85 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2336840 | GE:52138 | epochs:0.9  | ep_lens:23.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.14 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2337069 | GE:52144 | epochs:0.9  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.16 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2337418 | GE:52153 | epochs:0.9  | ep_lens:28.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:27.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.83  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2337632 | GE:52157 | epochs:0.9  | ep_lens:32.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.29 | mean_Q:-0.01  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2337870 | GE:52161 | epochs:0.9  | ep_lens:34.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:32.0 (spuriousM:6.0 ,  18.8%) | ep_rewards:-0.22 | mean_Q:-0.01  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2338096 | GE:52167 | epochs:0.9  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.25 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2338502 | GE:52173 | epochs:0.9  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.33 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2338844 | GE:52180 | epochs:0.9  | ep_lens:51.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.48 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2339069 | GE:52185 | epochs:0.9  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.38 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2339488 | GE:52193 | epochs:0.9  | ep_lens:74.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:57.0 (spuriousM:4.0 ,   7.0%) | ep_rewards:-0.80 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2339761 | GE:52202 | epochs:0.9  | ep_lens:30.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.20 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2340179 | GE:52213 | epochs:0.9  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.46 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2340436 | GE:52219 | epochs:0.9  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:4.0 ,  15.4%) | ep_rewards:-0.19 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2340751 | GE:52229 | epochs:0.9  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.38 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2340977 | GE:52237 | epochs:0.9  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.19 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2341454 | GE:52246 | epochs:0.9  | ep_lens:60.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:49.0 (spuriousM:8.0 ,  16.3%) | ep_rewards:-0.58 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2341708 | GE:52253 | epochs:0.9  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.25  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2341851 | GE:52257 | epochs:0.9  | ep_lens:24.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:23.0 (spuriousM:4.0 ,  17.4%) | ep_rewards:-0.15 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2341962 | GE:52261 | epochs:0.9  | ep_lens:20.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.10 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2342349 | GE:52270 | epochs:0.9  | ep_lens:41.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:40.0 (spuriousM:5.0 ,  12.5%) | ep_rewards:-0.23 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2342575 | GE:52276 | epochs:0.9  | ep_lens:41.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:33.0 (spuriousM:8.0 ,  24.2%) | ep_rewards:-0.41 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2342826 | GE:52283 | epochs:0.9  | ep_lens:32.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.26 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2343197 | GE:52294 | epochs:0.9  | ep_lens:43.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.32 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2343289 | GE:52298 | epochs:0.9  | ep_lens:18.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:15.0 (spuriousM:3.0 ,  20.0%) | ep_rewards:-0.17 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2343579 | GE:52305 | epochs:0.9  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:7.0 ,  26.9%) | ep_rewards:-0.25 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2343836 | GE:52314 | epochs:0.9  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.31 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2344545 | GE:52334 | epochs:0.9  | ep_lens:53.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:48.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.39 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2344804 | GE:52337 | epochs:0.9  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.29 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2345002 | GE:52344 | epochs:0.9  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:7.0 ,  23.3%) | ep_rewards:-0.24 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2345468 | GE:52357 | epochs:0.9  | ep_lens:57.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:49.0 (spuriousM:9.0 ,  18.4%) | ep_rewards:-0.49 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2345640 | GE:52362 | epochs:0.9  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2345994 | GE:52372 | epochs:0.9  | ep_lens:27.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:26.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2346204 | GE:52379 | epochs:0.9  | ep_lens:36.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:35.0 (spuriousM:5.0 ,  14.3%) | ep_rewards:-0.21 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2346401 | GE:52384 | epochs:0.9  | ep_lens:26.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.13 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2347118 | GE:52405 | epochs:0.9  | ep_lens:59.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:51.0 (spuriousM:10.0,  19.6%) | ep_rewards:-0.50 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2347275 | GE:52412 | epochs:0.9  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.11  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2347837 | GE:52423 | epochs:0.9  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.46 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2348107 | GE:52429 | epochs:0.9  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:7.0 ,  22.6%) | ep_rewards:-0.37 | mean_Q:0.02   | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2348380 | GE:52435 | epochs:0.9  | ep_lens:27.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.16 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2348679 | GE:52443 | epochs:0.9  | ep_lens:43.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.42 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2348898 | GE:52448 | epochs:0.9  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.19 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2349189 | GE:52453 | epochs:0.9  | ep_lens:42.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.31 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2349429 | GE:52457 | epochs:0.9  | ep_lens:29.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.17 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2349847 | GE:52469 | epochs:0.9  | ep_lens:65.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:55.0 (spuriousM:15.0,  27.3%) | ep_rewards:-0.58 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2349936 | GE:52472 | epochs:0.9  | ep_lens:20.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.05  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2350082 | GE:52476 | epochs:0.9  | ep_lens:22.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:3.0 ,  13.6%) | ep_rewards:-0.11 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2350373 | GE:52483 | epochs:0.9  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.28 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2350551 | GE:52491 | epochs:0.9  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.18 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2351245 | GE:52506 | epochs:0.9  | ep_lens:56.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:47.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.51 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2351400 | GE:52508 | epochs:0.9  | ep_lens:29.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:25.0 (spuriousM:4.0 ,  16.0%) | ep_rewards:-0.25 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2352139 | GE:52524 | epochs:0.9  | ep_lens:73.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:60.0 (spuriousM:6.0 ,  10.0%) | ep_rewards:-0.69 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2352722 | GE:52539 | epochs:0.9  | ep_lens:60.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:51.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.53 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2352833 | GE:52541 | epochs:0.9  | ep_lens:21.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.16 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2352927 | GE:52545 | epochs:0.9  | ep_lens:20.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:18.0 (spuriousM:2.0 ,  11.1%) | ep_rewards:-0.15 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2353028 | GE:52548 | epochs:0.9  | ep_lens:19.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:18.0 (spuriousM:1.0 ,   5.6%) | ep_rewards:-0.12 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2353460 | GE:52559 | epochs:0.9  | ep_lens:52.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:48.0 (spuriousM:9.0 ,  18.8%) | ep_rewards:-0.36 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2353632 | GE:52563 | epochs:0.9  | ep_lens:29.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:25.0 (spuriousM:6.0 ,  24.0%) | ep_rewards:-0.25 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2353684 | GE:52565 | epochs:0.9  | ep_lens:5.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:4.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.95  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:2353930 | GE:52571 | epochs:0.9  | ep_lens:37.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.36 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2355141 | GE:52604 | epochs:0.9  | ep_lens:100.0 | edits:21.0 (spuriousE:21.0, 100.0%) | moves:79.0 (spuriousM:1.0 ,   1.3%) | ep_rewards:-1.03 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2355522 | GE:52615 | epochs:0.9  | ep_lens:26.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:25.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2355858 | GE:52622 | epochs:0.9  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.33 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2356392 | GE:52632 | epochs:0.9  | ep_lens:50.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.48 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2356889 | GE:52645 | epochs:0.9  | ep_lens:69.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:58.0 (spuriousM:1.0 ,   1.7%) | ep_rewards:-0.62 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2357306 | GE:52659 | epochs:0.9  | ep_lens:49.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.37 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2357539 | GE:52665 | epochs:0.9  | ep_lens:34.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.20 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2358034 | GE:52679 | epochs:0.9  | ep_lens:66.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:56.0 (spuriousM:2.0 ,   3.6%) | ep_rewards:-0.58 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2358175 | GE:52682 | epochs:0.9  | ep_lens:20.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.18 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2358493 | GE:52692 | epochs:0.9  | ep_lens:46.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.41 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2358898 | GE:52701 | epochs:0.9  | ep_lens:57.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:48.0 (spuriousM:5.0 ,  10.4%) | ep_rewards:-0.51 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2359507 | GE:52717 | epochs:0.9  | ep_lens:82.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:65.0 (spuriousM:7.0 ,  10.8%) | ep_rewards:-0.84 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2359613 | GE:52721 | epochs:0.9  | ep_lens:19.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.02  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2359754 | GE:52727 | epochs:0.9  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.21 | mean_Q:0.02   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2359946 | GE:52732 | epochs:0.9  | ep_lens:30.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:24.0 (spuriousM:4.0 ,  16.7%) | ep_rewards:-0.30 | mean_Q:0.03   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2360030 | GE:52734 | epochs:0.9  | ep_lens:19.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:15.0 (spuriousM:2.0 ,  13.3%) | ep_rewards:-0.20 | mean_Q:0.05   | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2360232 | GE:52738 | epochs:0.9  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.04  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2360713 | GE:52750 | epochs:0.9  | ep_lens:51.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.43 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2360934 | GE:52758 | epochs:0.9  | ep_lens:24.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.13  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2361171 | GE:52762 | epochs:0.9  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.32 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2361647 | GE:52775 | epochs:0.9  | ep_lens:57.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.64 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2361967 | GE:52782 | epochs:0.9  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.35 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2362263 | GE:52788 | epochs:0.9  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.33 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2362759 | GE:52800 | epochs:0.9  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.33 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2362947 | GE:52803 | epochs:0.9  | ep_lens:39.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.40 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2363482 | GE:52814 | epochs:0.9  | ep_lens:63.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.54 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2363933 | GE:52825 | epochs:0.9  | ep_lens:64.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.57 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2364329 | GE:52835 | epochs:0.9  | ep_lens:49.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.45 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2364555 | GE:52840 | epochs:0.9  | ep_lens:31.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.28 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2365440 | GE:52861 | epochs:0.9  | ep_lens:81.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:71.0 (spuriousM:4.0 ,   5.6%) | ep_rewards:-0.66 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2365553 | GE:52863 | epochs:0.9  | ep_lens:18.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.12 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2365850 | GE:52871 | epochs:0.9  | ep_lens:47.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.31 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2366366 | GE:52882 | epochs:0.9  | ep_lens:56.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:50.0 (spuriousM:3.0 ,   6.0%) | ep_rewards:-0.43 | mean_Q:-0.27  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2366599 | GE:52889 | epochs:0.9  | ep_lens:34.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.32 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2366743 | GE:52894 | epochs:0.9  | ep_lens:26.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.23 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2366961 | GE:52900 | epochs:0.9  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.27 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2367230 | GE:52905 | epochs:0.9  | ep_lens:39.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.35 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2367470 | GE:52908 | epochs:0.9  | ep_lens:38.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.34 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2367522 | GE:52911 | epochs:0.9  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2367715 | GE:52917 | epochs:0.9  | ep_lens:26.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.18 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2368019 | GE:52928 | epochs:0.9  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.28 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2368356 | GE:52935 | epochs:0.9  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.36 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2369124 | GE:52953 | epochs:0.9  | ep_lens:90.0 | edits:22.0 (spuriousE:22.0, 100.0%) | moves:68.0 (spuriousM:11.0,  16.2%) | ep_rewards:-1.00 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2369511 | GE:52963 | epochs:0.9  | ep_lens:35.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:34.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.80  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2369618 | GE:52965 | epochs:0.9  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.04  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2369759 | GE:52970 | epochs:0.9  | ep_lens:23.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.14 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2370102 | GE:52979 | epochs:0.9  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.37 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2370559 | GE:52989 | epochs:0.9  | ep_lens:55.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:48.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.45 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2371057 | GE:53001 | epochs:0.9  | ep_lens:60.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:50.0 (spuriousM:4.0 ,   8.0%) | ep_rewards:-0.55 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2371308 | GE:53005 | epochs:0.9  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.29 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2371810 | GE:53019 | epochs:0.9  | ep_lens:52.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:43.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.49 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2371936 | GE:53023 | epochs:0.9  | ep_lens:23.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.19 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2372673 | GE:53046 | epochs:0.9  | ep_lens:62.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:57.0 (spuriousM:3.0 ,   5.3%) | ep_rewards:-0.44 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2372846 | GE:53048 | epochs:0.9  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:4.0 ,  14.8%) | ep_rewards:-0.23 | mean_Q:0.06   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2372979 | GE:53052 | epochs:0.9  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.03  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2373339 | GE:53060 | epochs:0.9  | ep_lens:51.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.46 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2373843 | GE:53073 | epochs:0.9  | ep_lens:60.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:51.0 (spuriousM:4.0 ,   7.8%) | ep_rewards:-0.53 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2374286 | GE:53082 | epochs:0.9  | ep_lens:59.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:55.0 (spuriousM:1.0 ,   1.8%) | ep_rewards:-0.40 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2374685 | GE:53090 | epochs:0.9  | ep_lens:58.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:52.0 (spuriousM:3.0 ,   5.8%) | ep_rewards:-0.44 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2374802 | GE:53092 | epochs:0.9  | ep_lens:23.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.22 | mean_Q:0.08   | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2375125 | GE:53100 | epochs:0.9  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.33 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2375499 | GE:53106 | epochs:0.9  | ep_lens:49.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:46.0 (spuriousM:5.0 ,  10.9%) | ep_rewards:-0.32 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2375737 | GE:53113 | epochs:0.9  | ep_lens:36.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.21 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2375954 | GE:53119 | epochs:0.9  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.30 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2376253 | GE:53124 | epochs:0.9  | ep_lens:38.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.24 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2376597 | GE:53131 | epochs:0.9  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.34 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2376782 | GE:53137 | epochs:0.9  | ep_lens:37.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.24 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2376892 | GE:53139 | epochs:0.9  | ep_lens:23.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.17 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2377495 | GE:53153 | epochs:0.9  | ep_lens:57.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:51.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.44 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2377561 | GE:53156 | epochs:0.9  | ep_lens:17.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.09 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2377745 | GE:53160 | epochs:0.9  | ep_lens:25.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.23 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2377956 | GE:53165 | epochs:0.9  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.30 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2378338 | GE:53175 | epochs:0.9  | ep_lens:44.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.35 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2378654 | GE:53184 | epochs:0.9  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.30 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2378797 | GE:53186 | epochs:0.9  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2378887 | GE:53190 | epochs:0.9  | ep_lens:22.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.14 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2379155 | GE:53196 | epochs:0.9  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.32 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2379362 | GE:53201 | epochs:0.9  | ep_lens:36.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.33 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2379754 | GE:53212 | epochs:0.9  | ep_lens:44.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.45 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2380001 | GE:53216 | epochs:0.9  | ep_lens:47.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:41.0 (spuriousM:5.0 ,  12.2%) | ep_rewards:-0.39 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2380672 | GE:53236 | epochs:0.9  | ep_lens:55.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.45 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2381183 | GE:53249 | epochs:0.9  | ep_lens:53.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:49.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.37 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2381599 | GE:53257 | epochs:0.9  | ep_lens:54.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:47.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.45 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2381725 | GE:53261 | epochs:0.9  | ep_lens:18.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:1.0 ,   5.6%) | ep_rewards:-0.09 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2382032 | GE:53269 | epochs:0.9  | ep_lens:43.0 | edits:4.0  (spuriousE:3.0 ,  75.0%) | moves:39.0 (spuriousM:7.0 ,  17.9%) | ep_rewards:-0.28 | mean_Q:-0.07  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:2382357 | GE:53277 | epochs:0.9  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:4.0 ,   9.5%) | ep_rewards:-0.36 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2382564 | GE:53284 | epochs:0.9  | ep_lens:37.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:32.0 (spuriousM:11.0,  34.4%) | ep_rewards:-0.31 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2382939 | GE:53292 | epochs:0.9  | ep_lens:43.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:41.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.27 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2384031 | GE:53309 | epochs:0.9  | ep_lens:100.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:85.0 (spuriousM:1.0 ,   1.2%) | ep_rewards:-0.88 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2384771 | GE:53320 | epochs:0.9  | ep_lens:75.0 | edits:21.0 (spuriousE:21.0, 100.0%) | moves:54.0 (spuriousM:8.0 ,  14.8%) | ep_rewards:-0.90 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2384963 | GE:53322 | epochs:0.9  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.16 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2385976 | GE:53342 | epochs:0.9  | ep_lens:100.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:86.0 (spuriousM:5.0 ,   5.8%) | ep_rewards:-0.85 | mean_Q:-0.34  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2386233 | GE:53350 | epochs:0.9  | ep_lens:36.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.33 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2386934 | GE:53366 | epochs:0.9  | ep_lens:78.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:66.0 (spuriousM:6.0 ,   9.1%) | ep_rewards:-0.69 | mean_Q:-0.26  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2387126 | GE:53373 | epochs:0.9  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.21 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2387406 | GE:53382 | epochs:0.9  | ep_lens:34.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.22 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2387518 | GE:53386 | epochs:0.9  | ep_lens:20.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:18.0 (spuriousM:2.0 ,  11.1%) | ep_rewards:-0.15 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2387630 | GE:53388 | epochs:0.9  | ep_lens:24.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.22 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2387858 | GE:53394 | epochs:0.9  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.31 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2388041 | GE:53397 | epochs:0.9  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.26 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2388759 | GE:53418 | epochs:0.9  | ep_lens:62.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.51 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2388994 | GE:53424 | epochs:0.9  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.31 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2389159 | GE:53427 | epochs:0.9  | ep_lens:26.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.18 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2389261 | GE:53430 | epochs:0.9  | ep_lens:17.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:2.0 ,  11.8%) | ep_rewards:-0.09 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2389531 | GE:53436 | epochs:0.9  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:7.0 ,  17.5%) | ep_rewards:-0.35 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2389736 | GE:53443 | epochs:0.9  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.22 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2389953 | GE:53450 | epochs:0.9  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.19 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2390051 | GE:53455 | epochs:0.9  | ep_lens:18.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:15.0 (spuriousM:1.0 ,   6.7%) | ep_rewards:-0.17 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2390308 | GE:53462 | epochs:0.9  | ep_lens:33.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.37 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2390381 | GE:53464 | epochs:0.9  | ep_lens:15.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:14.0 (spuriousM:1.0 ,   7.1%) | ep_rewards:-0.10 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2390605 | GE:53469 | epochs:0.9  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.22 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2390743 | GE:53473 | epochs:0.9  | ep_lens:29.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:25.0 (spuriousM:6.0 ,  24.0%) | ep_rewards:-0.25 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2390884 | GE:53481 | epochs:0.9  | ep_lens:24.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.17 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2391600 | GE:53500 | epochs:0.9  | ep_lens:72.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:62.0 (spuriousM:7.0 ,  11.3%) | ep_rewards:-0.61 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2391949 | GE:53506 | epochs:0.9  | ep_lens:50.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.50 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2392344 | GE:53519 | epochs:0.9  | ep_lens:44.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.32 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2392732 | GE:53531 | epochs:0.9  | ep_lens:43.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:39.0 (spuriousM:8.0 ,  20.5%) | ep_rewards:-0.32 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2392934 | GE:53537 | epochs:0.9  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.18 | mean_Q:-0.03  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2392985 | GE:53539 | epochs:0.9  | ep_lens:4.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:3.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.95  | mean_Q:0.01   | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2394110 | GE:53562 | epochs:0.9  | ep_lens:86.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:75.0 (spuriousM:4.0 ,   5.3%) | ep_rewards:-0.71 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2394345 | GE:53567 | epochs:0.9  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:5.0 ,  18.5%) | ep_rewards:-0.23 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2394665 | GE:53573 | epochs:0.9  | ep_lens:38.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:33.0 (spuriousM:5.0 ,  15.2%) | ep_rewards:-0.32 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2394936 | GE:53581 | epochs:0.9  | ep_lens:37.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:35.0 (spuriousM:5.0 ,  14.3%) | ep_rewards:-0.24 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2395078 | GE:53584 | epochs:0.9  | ep_lens:24.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.20 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2395235 | GE:53589 | epochs:0.9  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.24 | mean_Q:0.01   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2395526 | GE:53597 | epochs:0.9  | ep_lens:41.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.23 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2395770 | GE:53602 | epochs:0.9  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:4.0 ,  11.8%) | ep_rewards:-0.26 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2395853 | GE:53604 | epochs:0.9  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2396326 | GE:53616 | epochs:0.9  | ep_lens:57.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:51.0 (spuriousM:7.0 ,  13.7%) | ep_rewards:-0.44 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2396557 | GE:53623 | epochs:0.9  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.27 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2397097 | GE:53633 | epochs:0.9  | ep_lens:55.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.50 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2397222 | GE:53640 | epochs:0.9  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2397481 | GE:53644 | epochs:0.9  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:4.0 ,  10.5%) | ep_rewards:-0.34 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2398176 | GE:53657 | epochs:0.9  | ep_lens:77.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:66.0 (spuriousM:3.0 ,   4.5%) | ep_rewards:-0.66 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2398328 | GE:53660 | epochs:0.9  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.28 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2398701 | GE:53667 | epochs:0.9  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.29 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2398904 | GE:53672 | epochs:0.9  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.33 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2399533 | GE:53687 | epochs:0.9  | ep_lens:72.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:68.0 (spuriousM:5.0 ,   7.4%) | ep_rewards:-0.46 | mean_Q:-0.25  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2400362 | GE:53706 | epochs:0.9  | ep_lens:96.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:83.0 (spuriousM:3.0 ,   3.6%) | ep_rewards:-0.81 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2400497 | GE:53710 | epochs:0.9  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.20 | mean_Q:0.03   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2400770 | GE:53715 | epochs:0.9  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.36 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2401218 | GE:53725 | epochs:0.9  | ep_lens:59.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:45.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.65 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2401628 | GE:53732 | epochs:0.9  | ep_lens:50.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:46.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.35 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2401858 | GE:53739 | epochs:0.9  | ep_lens:32.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.19 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2402095 | GE:53743 | epochs:0.9  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2402387 | GE:53750 | epochs:0.9  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.26 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2402710 | GE:53758 | epochs:0.9  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.31 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2402985 | GE:53765 | epochs:0.9  | ep_lens:37.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.24 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2403061 | GE:53768 | epochs:0.9  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.10  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2403192 | GE:53772 | epochs:0.9  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2403460 | GE:53778 | epochs:0.9  | ep_lens:44.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:41.0 (spuriousM:17.0,  41.5%) | ep_rewards:-0.30 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2403766 | GE:53785 | epochs:0.9  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.23 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2404412 | GE:53803 | epochs:0.9  | ep_lens:63.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:59.0 (spuriousM:3.0 ,   5.1%) | ep_rewards:-0.42 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2404551 | GE:53806 | epochs:0.9  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2404892 | GE:53816 | epochs:0.9  | ep_lens:43.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.29 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2405095 | GE:53823 | epochs:0.9  | ep_lens:26.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.18 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2405242 | GE:53825 | epochs:0.9  | ep_lens:24.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.22 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2405390 | GE:53831 | epochs:0.9  | ep_lens:34.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:33.0 (spuriousM:10.0,  30.3%) | ep_rewards:-0.20 | mean_Q:0.02   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2405524 | GE:53833 | epochs:0.9  | ep_lens:23.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.22 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2406083 | GE:53849 | epochs:0.9  | ep_lens:64.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:59.0 (spuriousM:5.0 ,   8.5%) | ep_rewards:-0.45 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2406153 | GE:53852 | epochs:0.9  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.04  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2406541 | GE:53863 | epochs:0.9  | ep_lens:52.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.46 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2407168 | GE:53881 | epochs:0.9  | ep_lens:66.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:56.0 (spuriousM:3.0 ,   5.4%) | ep_rewards:-0.58 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2407373 | GE:53886 | epochs:0.9  | ep_lens:36.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.36 | mean_Q:0.04   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2407440 | GE:53887 | epochs:0.9  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:0.10   | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2407617 | GE:53894 | epochs:0.9  | ep_lens:22.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:0.01   | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2408230 | GE:53906 | epochs:0.9  | ep_lens:58.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:49.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.52 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2408741 | GE:53920 | epochs:0.9  | ep_lens:58.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:48.0 (spuriousM:2.0 ,   4.2%) | ep_rewards:-0.54 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2408992 | GE:53927 | epochs:0.9  | ep_lens:29.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.20 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2409153 | GE:53930 | epochs:0.9  | ep_lens:27.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.24 | mean_Q:0.01   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2409335 | GE:53935 | epochs:0.9  | ep_lens:31.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.18 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2409598 | GE:53941 | epochs:0.9  | ep_lens:48.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:40.0 (spuriousM:10.0,  25.0%) | ep_rewards:-0.44 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2410578 | GE:53965 | epochs:0.9  | ep_lens:86.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:70.0 (spuriousM:6.0 ,   8.6%) | ep_rewards:-0.83 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2410794 | GE:53968 | epochs:0.9  | ep_lens:48.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:41.0 (spuriousM:7.0 ,  17.1%) | ep_rewards:-0.42 | mean_Q:-0.03  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2410950 | GE:53971 | epochs:0.9  | ep_lens:30.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.28 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2411263 | GE:53981 | epochs:0.9  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.27 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2411408 | GE:53984 | epochs:0.9  | ep_lens:22.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.14 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2411704 | GE:53993 | epochs:0.9  | ep_lens:32.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.16 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2411882 | GE:53999 | epochs:0.9  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.23  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2412054 | GE:54003 | epochs:0.9  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.25 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2412216 | GE:54008 | epochs:0.9  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2412387 | GE:54014 | epochs:0.9  | ep_lens:37.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:30.0 (spuriousM:6.0 ,  20.0%) | ep_rewards:-0.36 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2412456 | GE:54015 | epochs:0.9  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.08  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2412585 | GE:54021 | epochs:0.9  | ep_lens:24.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.20 | mean_Q:0.00   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2413193 | GE:54033 | epochs:0.9  | ep_lens:84.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:73.0 (spuriousM:15.0,  20.5%) | ep_rewards:-0.70 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2413510 | GE:54044 | epochs:0.9  | ep_lens:47.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.46 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2413706 | GE:54046 | epochs:0.9  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.21 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2413869 | GE:54048 | epochs:0.9  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:5.0 ,  16.7%) | ep_rewards:-0.27 | mean_Q:0.01   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2414043 | GE:54052 | epochs:0.9  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.13  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2414548 | GE:54064 | epochs:0.9  | ep_lens:53.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.34 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2414829 | GE:54072 | epochs:0.9  | ep_lens:48.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:45.0 (spuriousM:7.0 ,  15.6%) | ep_rewards:-0.32 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2415072 | GE:54075 | epochs:0.9  | ep_lens:44.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:37.0 (spuriousM:6.0 ,  16.2%) | ep_rewards:-0.40 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2415670 | GE:54090 | epochs:0.9  | ep_lens:59.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:51.0 (spuriousM:7.0 ,  13.7%) | ep_rewards:-0.50 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2415871 | GE:54096 | epochs:0.9  | ep_lens:27.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.29 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2416024 | GE:54100 | epochs:0.9  | ep_lens:29.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.20 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2416293 | GE:54104 | epochs:0.9  | ep_lens:27.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.14 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2416499 | GE:54111 | epochs:0.9  | ep_lens:36.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.38 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2416835 | GE:54119 | epochs:0.9  | ep_lens:54.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.52 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2417086 | GE:54123 | epochs:0.9  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:7.0 ,  16.7%) | ep_rewards:-0.33 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2417317 | GE:54128 | epochs:0.9  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:5.0 ,  15.6%) | ep_rewards:-0.25 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2417436 | GE:54130 | epochs:0.9  | ep_lens:23.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.19 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2417562 | GE:54134 | epochs:0.9  | ep_lens:20.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:18.0 (spuriousM:1.0 ,   5.6%) | ep_rewards:-0.15 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2417705 | GE:54139 | epochs:0.9  | ep_lens:25.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.13 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2417995 | GE:54149 | epochs:0.9  | ep_lens:31.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.18 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2418185 | GE:54154 | epochs:0.9  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:5.0 ,  17.9%) | ep_rewards:-0.23 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2418444 | GE:54159 | epochs:0.9  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.37 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2418800 | GE:54170 | epochs:0.9  | ep_lens:40.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.28 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2418902 | GE:54172 | epochs:0.9  | ep_lens:17.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:15.0 (spuriousM:1.0 ,   6.7%) | ep_rewards:-0.14 | mean_Q:-0.02  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2419611 | GE:54191 | epochs:0.9  | ep_lens:55.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:47.0 (spuriousM:3.0 ,   6.4%) | ep_rewards:-0.48 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2420496 | GE:54214 | epochs:0.9  | ep_lens:92.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:81.0 (spuriousM:16.0,  19.8%) | ep_rewards:-0.74 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2420748 | GE:54222 | epochs:0.9  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.27 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2420984 | GE:54227 | epochs:0.9  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:4.0 ,  15.4%) | ep_rewards:-0.22 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2421303 | GE:54234 | epochs:0.9  | ep_lens:45.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.43 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2421429 | GE:54235 | epochs:0.9  | ep_lens:21.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.16 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2421545 | GE:54238 | epochs:0.9  | ep_lens:20.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.88  | mean_Q:-0.10  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2421762 | GE:54247 | epochs:0.9  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.31 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2422065 | GE:54254 | epochs:0.9  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.31 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2422637 | GE:54267 | epochs:0.9  | ep_lens:56.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:47.0 (spuriousM:3.0 ,   6.4%) | ep_rewards:-0.51 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2423228 | GE:54283 | epochs:0.9  | ep_lens:62.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:54.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.51 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2423464 | GE:54287 | epochs:0.9  | ep_lens:40.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.38 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2423687 | GE:54294 | epochs:0.9  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.37 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2424378 | GE:54307 | epochs:0.9  | ep_lens:85.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:72.0 (spuriousM:1.0 ,   1.4%) | ep_rewards:-0.75 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2424979 | GE:54318 | epochs:0.9  | ep_lens:74.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:63.0 (spuriousM:4.0 ,   6.3%) | ep_rewards:-0.65 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2425253 | GE:54322 | epochs:0.9  | ep_lens:30.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:29.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.82  | mean_Q:-0.28  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2425487 | GE:54326 | epochs:0.9  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.27 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2425714 | GE:54329 | epochs:0.9  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.33 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2425920 | GE:54332 | epochs:0.9  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:7.0 ,  22.6%) | ep_rewards:-0.28 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2426138 | GE:54337 | epochs:0.9  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.37 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2426288 | GE:54341 | epochs:0.9  | ep_lens:29.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.25 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2426486 | GE:54345 | epochs:0.9  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.25 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2426824 | GE:54353 | epochs:0.9  | ep_lens:38.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.24 | mean_Q:-0.25  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2426946 | GE:54357 | epochs:0.9  | ep_lens:19.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:18.0 (spuriousM:2.0 ,  11.1%) | ep_rewards:-0.12 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2427091 | GE:54361 | epochs:0.9  | ep_lens:24.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.22 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2428020 | GE:54390 | epochs:0.9  | ep_lens:78.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:66.0 (spuriousM:14.0,  21.2%) | ep_rewards:-0.69 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2428253 | GE:54395 | epochs:0.9  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.37 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2428648 | GE:54407 | epochs:0.9  | ep_lens:60.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:53.0 (spuriousM:6.0 ,  11.3%) | ep_rewards:-0.48 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2428893 | GE:54414 | epochs:0.9  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.37 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2429026 | GE:54417 | epochs:0.9  | ep_lens:23.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:22.0 (spuriousM:3.0 ,  13.6%) | ep_rewards:-0.14 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2429158 | GE:54421 | epochs:0.9  | ep_lens:23.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.17 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2429452 | GE:54426 | epochs:0.9  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.31 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2429511 | GE:54430 | epochs:0.9  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2430362 | GE:54451 | epochs:0.9  | ep_lens:72.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:60.0 (spuriousM:1.0 ,   1.7%) | ep_rewards:-0.66 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2430996 | GE:54468 | epochs:0.9  | ep_lens:60.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.70 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2431186 | GE:54471 | epochs:0.9  | ep_lens:26.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:23.0 (spuriousM:2.0 ,   8.7%) | ep_rewards:-0.21 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2431527 | GE:54479 | epochs:0.9  | ep_lens:53.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.44 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2431660 | GE:54482 | epochs:0.9  | ep_lens:23.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:16.0 (spuriousM:2.0 ,  12.5%) | ep_rewards:-0.29 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2432183 | GE:54494 | epochs:0.9  | ep_lens:65.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:55.0 (spuriousM:8.0 ,  14.5%) | ep_rewards:-0.58 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2432263 | GE:54496 | epochs:0.9  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.09  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2432455 | GE:54505 | epochs:0.9  | ep_lens:31.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.28 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2433046 | GE:54518 | epochs:0.9  | ep_lens:72.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:62.0 (spuriousM:6.0 ,   9.7%) | ep_rewards:-0.61 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2433759 | GE:54536 | epochs:0.9  | ep_lens:66.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:57.0 (spuriousM:2.0 ,   3.5%) | ep_rewards:-0.56 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2434546 | GE:54556 | epochs:0.9  | ep_lens:72.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:67.0 (spuriousM:6.0 ,   9.0%) | ep_rewards:-0.49 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2434850 | GE:54566 | epochs:0.9  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.33 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2435344 | GE:54575 | epochs:0.9  | ep_lens:40.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:39.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.77  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2435634 | GE:54585 | epochs:0.9  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.37 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2436055 | GE:54601 | epochs:0.9  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.33 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2436616 | GE:54613 | epochs:0.9  | ep_lens:55.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:50.0 (spuriousM:3.0 ,   6.0%) | ep_rewards:-0.40 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2437018 | GE:54623 | epochs:0.9  | ep_lens:51.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:46.0 (spuriousM:4.0 ,   8.7%) | ep_rewards:-0.38 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2437454 | GE:54632 | epochs:0.9  | ep_lens:54.0 | edits:5.0  (spuriousE:4.0 ,  80.0%) | moves:49.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.60  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:2437813 | GE:54639 | epochs:0.9  | ep_lens:49.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.37 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2438010 | GE:54645 | epochs:0.9  | ep_lens:30.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.28 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2438197 | GE:54647 | epochs:0.9  | ep_lens:28.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.27 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2438394 | GE:54654 | epochs:0.9  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.23 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2438860 | GE:54668 | epochs:0.9  | ep_lens:61.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:49.0 (spuriousM:2.0 ,   4.1%) | ep_rewards:-0.61 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2439095 | GE:54674 | epochs:0.9  | ep_lens:31.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.21 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2439402 | GE:54682 | epochs:0.9  | ep_lens:47.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.44 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2439895 | GE:54691 | epochs:0.9  | ep_lens:50.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:45.0 (spuriousM:5.0 ,  11.1%) | ep_rewards:-0.38 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2440149 | GE:54700 | epochs:0.9  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.23 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2440262 | GE:54702 | epochs:0.9  | ep_lens:21.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:17.0 (spuriousM:3.0 ,  17.6%) | ep_rewards:-0.21 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2440372 | GE:54705 | epochs:0.9  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.13  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2440516 | GE:54709 | epochs:0.9  | ep_lens:27.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.16 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2440954 | GE:54719 | epochs:0.9  | ep_lens:54.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.52 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2441166 | GE:54724 | epochs:0.9  | ep_lens:40.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.43 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2441317 | GE:54728 | epochs:0.9  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2441588 | GE:54736 | epochs:0.9  | ep_lens:44.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.42 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2441816 | GE:54740 | epochs:0.9  | ep_lens:38.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.39 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2442117 | GE:54748 | epochs:0.9  | ep_lens:40.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.35 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2442375 | GE:54754 | epochs:0.9  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.27 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2442545 | GE:54758 | epochs:0.9  | ep_lens:29.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.20 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2442637 | GE:54761 | epochs:0.9  | ep_lens:16.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:1.0 ,   6.2%) | ep_rewards:-0.08 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2442853 | GE:54767 | epochs:0.9  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.28 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2443197 | GE:54774 | epochs:0.9  | ep_lens:54.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.50 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2443552 | GE:54782 | epochs:0.9  | ep_lens:48.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:39.0 (spuriousM:4.0 ,  10.3%) | ep_rewards:-0.47 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2443631 | GE:54783 | epochs:0.9  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2443960 | GE:54793 | epochs:0.9  | ep_lens:52.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.44 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2444376 | GE:54804 | epochs:0.9  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.32 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2444770 | GE:54811 | epochs:0.9  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.27 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2445391 | GE:54829 | epochs:0.9  | ep_lens:63.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:51.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.62 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2445707 | GE:54839 | epochs:0.9  | ep_lens:42.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.41 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2446110 | GE:54849 | epochs:0.9  | ep_lens:37.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.31 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2446409 | GE:54860 | epochs:0.9  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.21 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2446871 | GE:54872 | epochs:0.9  | ep_lens:55.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:49.0 (spuriousM:5.0 ,  10.2%) | ep_rewards:-0.43 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2447019 | GE:54876 | epochs:0.9  | ep_lens:24.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:23.0 (spuriousM:3.0 ,  13.0%) | ep_rewards:-0.15 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2447232 | GE:54882 | epochs:0.9  | ep_lens:30.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.15 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2447405 | GE:54887 | epochs:0.9  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.22 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2447638 | GE:54893 | epochs:0.9  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.27 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2447820 | GE:54899 | epochs:0.9  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.18 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2448453 | GE:54913 | epochs:0.9  | ep_lens:65.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:54.0 (spuriousM:4.0 ,   7.4%) | ep_rewards:-0.60 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2448692 | GE:54921 | epochs:0.9  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.24 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2448860 | GE:54926 | epochs:0.9  | ep_lens:29.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:22.0 (spuriousM:3.0 ,  13.6%) | ep_rewards:-0.32 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2449219 | GE:54934 | epochs:0.9  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.34 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2449439 | GE:54938 | epochs:0.9  | ep_lens:36.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.33 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2449711 | GE:54948 | epochs:0.9  | ep_lens:34.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.32 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2450012 | GE:54956 | epochs:0.9  | ep_lens:43.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:34.0 (spuriousM:8.0 ,  23.5%) | ep_rewards:-0.44 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2450171 | GE:54959 | epochs:0.9  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.34 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2450319 | GE:54966 | epochs:0.9  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:3.0 ,  13.0%) | ep_rewards:-0.18 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2450485 | GE:54970 | epochs:0.9  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:5.0 ,  20.8%) | ep_rewards:-0.21 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2450713 | GE:54975 | epochs:0.9  | ep_lens:29.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.20 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2451082 | GE:54986 | epochs:0.9  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.36 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2451353 | GE:54993 | epochs:0.9  | ep_lens:37.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.31 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2451509 | GE:54998 | epochs:0.9  | ep_lens:32.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:24.0 (spuriousM:4.0 ,  16.7%) | ep_rewards:-0.36 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2451621 | GE:55000 | epochs:0.9  | ep_lens:19.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.06  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2451786 | GE:55003 | epochs:0.9  | ep_lens:30.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.28 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2451943 | GE:55010 | epochs:0.9  | ep_lens:25.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.25 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2452165 | GE:55016 | epochs:0.9  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:4.0 ,  11.8%) | ep_rewards:-0.38 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2452745 | GE:55030 | epochs:0.9  | ep_lens:54.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:50.0 (spuriousM:3.0 ,   6.0%) | ep_rewards:-0.37 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2453133 | GE:55040 | epochs:0.9  | ep_lens:57.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:48.0 (spuriousM:3.0 ,   6.2%) | ep_rewards:-0.51 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2453699 | GE:55052 | epochs:0.9  | ep_lens:76.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:62.0 (spuriousM:4.0 ,   6.5%) | ep_rewards:-0.73 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2453968 | GE:55059 | epochs:0.9  | ep_lens:37.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.26 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2454080 | GE:55061 | epochs:0.9  | ep_lens:24.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.20 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2454374 | GE:55070 | epochs:0.9  | ep_lens:34.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.35 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2454712 | GE:55077 | epochs:0.9  | ep_lens:51.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.61 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2454990 | GE:55084 | epochs:0.9  | ep_lens:42.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:34.0 (spuriousM:4.0 ,  11.8%) | ep_rewards:-0.41 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2455095 | GE:55085 | epochs:0.9  | ep_lens:23.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.22 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2455465 | GE:55093 | epochs:0.9  | ep_lens:30.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:28.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.25  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2455686 | GE:55100 | epochs:0.9  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.31 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2455972 | GE:55107 | epochs:0.9  | ep_lens:33.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.29 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2456445 | GE:55117 | epochs:0.9  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:4.0 ,   8.0%) | ep_rewards:-0.46 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2456703 | GE:55126 | epochs:0.9  | ep_lens:34.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.32 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2457004 | GE:55135 | epochs:0.9  | ep_lens:33.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.19 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2457145 | GE:55139 | epochs:0.9  | ep_lens:22.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.14 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2457321 | GE:55142 | epochs:0.9  | ep_lens:29.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.27 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2457534 | GE:55148 | epochs:0.9  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:4.0 ,  11.8%) | ep_rewards:-0.32 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2457919 | GE:55158 | epochs:0.9  | ep_lens:48.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:38.0 (spuriousM:6.0 ,  15.8%) | ep_rewards:-0.49 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2458238 | GE:55167 | epochs:0.9  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.24 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2458825 | GE:55182 | epochs:0.9  | ep_lens:53.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:45.0 (spuriousM:2.0 ,   4.4%) | ep_rewards:-0.47 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2459051 | GE:55186 | epochs:0.9  | ep_lens:36.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.38 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2459292 | GE:55193 | epochs:0.9  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.25 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2459845 | GE:55206 | epochs:0.9  | ep_lens:57.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:52.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.41 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2460015 | GE:55211 | epochs:0.9  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.24 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2460279 | GE:55220 | epochs:0.9  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.29 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2460662 | GE:55231 | epochs:0.9  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.33 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2461119 | GE:55240 | epochs:0.9  | ep_lens:44.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.30 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2461198 | GE:55244 | epochs:0.9  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.21  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2461482 | GE:55250 | epochs:0.9  | ep_lens:60.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:49.0 (spuriousM:8.0 ,  16.3%) | ep_rewards:-0.58 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2461795 | GE:55255 | epochs:0.9  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.28 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2462289 | GE:55269 | epochs:0.9  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:6.0 ,  12.0%) | ep_rewards:-0.46 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2462699 | GE:55277 | epochs:0.9  | ep_lens:53.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:44.0 (spuriousM:6.0 ,  13.6%) | ep_rewards:-0.49 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2462881 | GE:55282 | epochs:0.9  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.20 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2463304 | GE:55292 | epochs:0.9  | ep_lens:47.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.34 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2463710 | GE:55301 | epochs:0.9  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.38 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2463797 | GE:55303 | epochs:0.9  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.06  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2463969 | GE:55306 | epochs:0.9  | ep_lens:17.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.12  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2464298 | GE:55313 | epochs:0.9  | ep_lens:47.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:43.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.34 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2465359 | GE:55339 | epochs:0.9  | ep_lens:100.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:82.0 (spuriousM:5.0 ,   6.1%) | ep_rewards:-0.95 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2465496 | GE:55342 | epochs:0.9  | ep_lens:22.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.11 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2465919 | GE:55349 | epochs:0.9  | ep_lens:54.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:44.0 (spuriousM:5.0 ,  11.4%) | ep_rewards:-0.52 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2466313 | GE:55358 | epochs:0.9  | ep_lens:54.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:48.0 (spuriousM:14.0,  29.2%) | ep_rewards:-0.42 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2466692 | GE:55366 | epochs:0.9  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:1.0 ,   2.5%) | ep_rewards:-0.35 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2467181 | GE:55377 | epochs:0.9  | ep_lens:52.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:49.0 (spuriousM:3.0 ,   6.1%) | ep_rewards:-0.34 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2467425 | GE:55381 | epochs:0.9  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.26 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2467929 | GE:55391 | epochs:0.9  | ep_lens:64.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:57.0 (spuriousM:3.0 ,   5.3%) | ep_rewards:-0.50 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2468181 | GE:55396 | epochs:0.9  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.34 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2468412 | GE:55401 | epochs:0.9  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.37 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2469635 | GE:55426 | epochs:0.9  | ep_lens:100.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:83.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:-0.93 | mean_Q:-0.26  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2469826 | GE:55430 | epochs:0.9  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.27 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2470018 | GE:55434 | epochs:0.9  | ep_lens:34.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.22 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2470333 | GE:55441 | epochs:0.9  | ep_lens:46.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:45.0 (spuriousM:8.0 ,  17.8%) | ep_rewards:-0.26 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2470703 | GE:55448 | epochs:0.9  | ep_lens:50.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:46.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.35 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2470881 | GE:55456 | epochs:0.9  | ep_lens:25.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.15 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2471200 | GE:55462 | epochs:0.9  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.29 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2471688 | GE:55472 | epochs:0.9  | ep_lens:64.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:53.0 (spuriousM:4.0 ,   7.5%) | ep_rewards:-0.60 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2471981 | GE:55478 | epochs:0.9  | ep_lens:49.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:42.0 (spuriousM:8.0 ,  19.0%) | ep_rewards:-0.42 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2472099 | GE:55483 | epochs:0.9  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.26  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2472722 | GE:55495 | epochs:0.9  | ep_lens:68.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:60.0 (spuriousM:2.0 ,   3.3%) | ep_rewards:-0.54 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2473003 | GE:55499 | epochs:0.9  | ep_lens:48.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.47 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2473345 | GE:55507 | epochs:0.9  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.37 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2473468 | GE:55514 | epochs:0.9  | ep_lens:23.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.17 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2473860 | GE:55522 | epochs:0.9  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.34 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2474248 | GE:55532 | epochs:0.9  | ep_lens:59.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:53.0 (spuriousM:7.0 ,  13.2%) | ep_rewards:-0.45 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2474615 | GE:55545 | epochs:0.9  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.37 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2475030 | GE:55558 | epochs:0.9  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.38 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2475342 | GE:55566 | epochs:0.9  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.25 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2475693 | GE:55577 | epochs:0.9  | ep_lens:59.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:46.0 (spuriousM:5.0 ,  10.9%) | ep_rewards:-0.62 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2475825 | GE:55579 | epochs:0.9  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2476360 | GE:55593 | epochs:0.9  | ep_lens:54.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:46.0 (spuriousM:3.0 ,   6.5%) | ep_rewards:-0.47 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2476664 | GE:55600 | epochs:0.9  | ep_lens:44.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.42 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2476784 | GE:55601 | epochs:0.9  | ep_lens:18.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.12 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2477129 | GE:55613 | epochs:0.9  | ep_lens:42.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.39 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2477371 | GE:55620 | epochs:0.9  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.23 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2477704 | GE:55629 | epochs:0.9  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.39 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2477763 | GE:55632 | epochs:0.9  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.06  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2478352 | GE:55644 | epochs:0.9  | ep_lens:55.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:48.0 (spuriousM:5.0 ,  10.4%) | ep_rewards:-0.45 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2478730 | GE:55654 | epochs:0.9  | ep_lens:55.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:50.0 (spuriousM:3.0 ,   6.0%) | ep_rewards:-0.40 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2478927 | GE:55660 | epochs:0.9  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:4.0 ,  18.2%) | ep_rewards:-0.20 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2479251 | GE:55668 | epochs:0.9  | ep_lens:55.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:42.0 (spuriousM:7.0 ,  16.7%) | ep_rewards:-0.60 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2480080 | GE:55687 | epochs:0.9  | ep_lens:70.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:59.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.63 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2480782 | GE:55706 | epochs:0.9  | ep_lens:71.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:62.0 (spuriousM:10.0,  16.1%) | ep_rewards:-0.58 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2481127 | GE:55717 | epochs:0.9  | ep_lens:33.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.19 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2481419 | GE:55721 | epochs:0.9  | ep_lens:40.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.43 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2481497 | GE:55724 | epochs:0.9  | ep_lens:19.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:16.0 (spuriousM:2.0 ,  12.5%) | ep_rewards:-0.17 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2481776 | GE:55731 | epochs:0.9  | ep_lens:37.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.34 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2482019 | GE:55736 | epochs:0.9  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.25 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2482072 | GE:55738 | epochs:0.9  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.24  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2482202 | GE:55740 | epochs:0.9  | ep_lens:23.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.22 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2482536 | GE:55749 | epochs:0.9  | ep_lens:44.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.37 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2482795 | GE:55760 | epochs:0.9  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:3.0 ,  10.7%) | ep_rewards:-0.23 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2483128 | GE:55768 | epochs:0.9  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.26 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2483433 | GE:55777 | epochs:0.9  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.39 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2484068 | GE:55792 | epochs:0.9  | ep_lens:64.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:53.0 (spuriousM:3.0 ,   5.7%) | ep_rewards:-0.60 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2484981 | GE:55813 | epochs:0.9  | ep_lens:86.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:75.0 (spuriousM:2.0 ,   2.7%) | ep_rewards:-0.71 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2485345 | GE:55823 | epochs:0.9  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.38 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2485496 | GE:55827 | epochs:0.9  | ep_lens:24.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.22 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2485788 | GE:55833 | epochs:0.9  | ep_lens:40.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.38 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2486153 | GE:55841 | epochs:0.9  | ep_lens:39.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.35 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2486253 | GE:55844 | epochs:0.9  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.13  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2486467 | GE:55849 | epochs:0.9  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.24 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2486882 | GE:55858 | epochs:0.9  | ep_lens:57.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:53.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.39 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2487099 | GE:55864 | epochs:0.9  | ep_lens:32.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:28.0 (spuriousM:5.0 ,  17.9%) | ep_rewards:-0.26 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2487457 | GE:55873 | epochs:0.9  | ep_lens:48.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:46.0 (spuriousM:5.0 ,  10.9%) | ep_rewards:-0.29 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2487895 | GE:55884 | epochs:0.9  | ep_lens:61.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.48 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2487978 | GE:55886 | epochs:0.9  | ep_lens:17.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:2.0 ,  11.8%) | ep_rewards:-0.09 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2488043 | GE:55888 | epochs:0.9  | ep_lens:5.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:4.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.95  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2488152 | GE:55891 | epochs:0.9  | ep_lens:21.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:19.0 (spuriousM:3.0 ,  15.8%) | ep_rewards:-0.16 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2488558 | GE:55899 | epochs:0.9  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.28 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2488868 | GE:55905 | epochs:0.9  | ep_lens:55.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:45.0 (spuriousM:5.0 ,  11.1%) | ep_rewards:-0.53 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2488959 | GE:55910 | epochs:0.9  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.19  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2489510 | GE:55921 | epochs:0.9  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.46 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2489633 | GE:55927 | epochs:0.9  | ep_lens:23.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.14 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2489787 | GE:55930 | epochs:0.9  | ep_lens:24.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.22 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2490163 | GE:55942 | epochs:0.9  | ep_lens:58.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:50.0 (spuriousM:2.0 ,   4.0%) | ep_rewards:-0.49 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2490962 | GE:55958 | epochs:0.9  | ep_lens:74.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:61.0 (spuriousM:3.0 ,   4.9%) | ep_rewards:-0.70 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2491032 | GE:55961 | epochs:0.9  | ep_lens:18.0 | edits:2.0  (spuriousE:1.0 ,  50.0%) | moves:16.0 (spuriousM:1.0 ,   6.2%) | ep_rewards:0.86  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:2491141 | GE:55964 | epochs:0.9  | ep_lens:20.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.13 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2491431 | GE:55974 | epochs:0.9  | ep_lens:39.0 | edits:5.0  (spuriousE:4.0 ,  80.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:0.68  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:2491790 | GE:55981 | epochs:0.9  | ep_lens:52.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:43.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.49 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2492231 | GE:55994 | epochs:0.9  | ep_lens:57.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:51.0 (spuriousM:3.0 ,   5.9%) | ep_rewards:-0.44 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2492627 | GE:56003 | epochs:0.9  | ep_lens:47.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.41 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2492899 | GE:56008 | epochs:0.9  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:1.0 ,   3.3%) | ep_rewards:-0.30 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2493212 | GE:56017 | epochs:0.9  | ep_lens:40.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:32.0 (spuriousM:6.0 ,  18.8%) | ep_rewards:-0.40 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2493670 | GE:56027 | epochs:0.9  | ep_lens:50.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.38 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2494915 | GE:56060 | epochs:0.9  | ep_lens:100.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:89.0 (spuriousM:2.0 ,   2.2%) | ep_rewards:-0.78 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2495185 | GE:56066 | epochs:0.9  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.25 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2495406 | GE:56073 | epochs:0.9  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.22 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2495615 | GE:56079 | epochs:0.9  | ep_lens:26.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.26 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2495856 | GE:56084 | epochs:0.9  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.26 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2496599 | GE:56106 | epochs:0.9  | ep_lens:55.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.58 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2496937 | GE:56112 | epochs:0.9  | ep_lens:46.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.31 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2497043 | GE:56115 | epochs:0.9  | ep_lens:22.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.19 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2497207 | GE:56119 | epochs:0.9  | ep_lens:33.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.22 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2497382 | GE:56122 | epochs:0.9  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.22 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2497661 | GE:56132 | epochs:0.9  | ep_lens:39.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.22 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2498087 | GE:56142 | epochs:0.9  | ep_lens:49.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:47.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.30 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2498350 | GE:56148 | epochs:0.9  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.29 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2498448 | GE:56151 | epochs:0.9  | ep_lens:21.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:17.0 (spuriousM:2.0 ,  11.8%) | ep_rewards:-0.21 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2498615 | GE:56156 | epochs:0.9  | ep_lens:37.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.39 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2499054 | GE:56168 | epochs:0.9  | ep_lens:41.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.26 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2499582 | GE:56181 | epochs:0.9  | ep_lens:51.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:46.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.38 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2499670 | GE:56186 | epochs:0.9  | ep_lens:21.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.16 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2499928 | GE:56192 | epochs:0.9  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:7.0 ,  23.3%) | ep_rewards:-0.30 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2500459 | GE:56207 | epochs:0.9  | ep_lens:52.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:46.0 (spuriousM:6.0 ,  13.0%) | ep_rewards:-0.41 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2500682 | GE:56214 | epochs:0.9  | ep_lens:26.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.18 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2500902 | GE:56218 | epochs:0.9  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.33 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2501627 | GE:56240 | epochs:0.9  | ep_lens:68.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:62.0 (spuriousM:2.0 ,   3.2%) | ep_rewards:-0.49 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2501869 | GE:56248 | epochs:0.9  | ep_lens:33.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.19 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2501977 | GE:56251 | epochs:0.9  | ep_lens:22.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.16 | mean_Q:0.02   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2502422 | GE:56262 | epochs:0.9  | ep_lens:51.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:44.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.43 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2502665 | GE:56267 | epochs:0.9  | ep_lens:34.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.35 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2503714 | GE:56291 | epochs:0.9  | ep_lens:99.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:88.0 (spuriousM:7.0 ,   8.0%) | ep_rewards:-0.77 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2504004 | GE:56296 | epochs:0.9  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:5.0 ,  11.9%) | ep_rewards:-0.36 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2504198 | GE:56299 | epochs:0.9  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.30 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2504355 | GE:56302 | epochs:0.9  | ep_lens:31.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.28 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2504557 | GE:56308 | epochs:0.9  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.22 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2504772 | GE:56313 | epochs:0.9  | ep_lens:25.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.15 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2505010 | GE:56320 | epochs:0.9  | ep_lens:24.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:23.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.27  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2505354 | GE:56328 | epochs:0.9  | ep_lens:34.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.17 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2505485 | GE:56333 | epochs:0.9  | ep_lens:21.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.13 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2505798 | GE:56343 | epochs:0.9  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:3.0 ,   7.9%) | ep_rewards:-0.28 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2505952 | GE:56348 | epochs:0.9  | ep_lens:25.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.15 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2506742 | GE:56366 | epochs:0.9  | ep_lens:75.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:67.0 (spuriousM:1.0 ,   1.5%) | ep_rewards:-0.58 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2507002 | GE:56374 | epochs:0.9  | ep_lens:31.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.21 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2507596 | GE:56391 | epochs:0.9  | ep_lens:59.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:54.0 (spuriousM:2.0 ,   3.7%) | ep_rewards:-0.42 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2507701 | GE:56393 | epochs:0.9  | ep_lens:20.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.18 | mean_Q:0.05   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2507871 | GE:56397 | epochs:0.9  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.24 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2507973 | GE:56402 | epochs:0.9  | ep_lens:19.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:17.0 (spuriousM:2.0 ,  11.8%) | ep_rewards:-0.15 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2508234 | GE:56409 | epochs:0.9  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.24 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2509092 | GE:56427 | epochs:0.9  | ep_lens:85.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:70.0 (spuriousM:2.0 ,   2.9%) | ep_rewards:-0.80 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2509644 | GE:56437 | epochs:0.9  | ep_lens:57.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:45.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.59 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2510055 | GE:56447 | epochs:0.9  | ep_lens:51.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.53 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2510261 | GE:56451 | epochs:0.9  | ep_lens:35.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.38 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2510693 | GE:56462 | epochs:0.9  | ep_lens:60.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:49.0 (spuriousM:3.0 ,   6.1%) | ep_rewards:-0.58 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2510824 | GE:56466 | epochs:0.9  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2511158 | GE:56474 | epochs:0.9  | ep_lens:43.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.32 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2511634 | GE:56484 | epochs:0.9  | ep_lens:69.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:58.0 (spuriousM:9.0 ,  15.5%) | ep_rewards:-0.62 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2511876 | GE:56489 | epochs:0.9  | ep_lens:39.0 | edits:8.0  (spuriousE:7.0 ,  87.5%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.36 | mean_Q:-0.11  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:2512117 | GE:56496 | epochs:0.9  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.24 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2512408 | GE:56503 | epochs:0.9  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.24 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2512826 | GE:56512 | epochs:0.9  | ep_lens:57.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:48.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.51 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2513084 | GE:56519 | epochs:0.9  | ep_lens:48.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:41.0 (spuriousM:4.0 ,   9.8%) | ep_rewards:-0.42 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2513216 | GE:56523 | epochs:0.9  | ep_lens:23.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.22 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2513612 | GE:56532 | epochs:0.9  | ep_lens:49.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:42.0 (spuriousM:3.0 ,   7.1%) | ep_rewards:-0.42 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2514044 | GE:56542 | epochs:0.9  | ep_lens:54.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:44.0 (spuriousM:3.0 ,   6.8%) | ep_rewards:-0.52 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2514193 | GE:56544 | epochs:0.9  | ep_lens:27.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:26.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.12  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2514379 | GE:56550 | epochs:0.9  | ep_lens:32.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:27.0 (spuriousM:5.0 ,  18.5%) | ep_rewards:-0.29 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2514557 | GE:56554 | epochs:0.9  | ep_lens:27.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.29 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2514858 | GE:56560 | epochs:0.9  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.31 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2515320 | GE:56570 | epochs:0.9  | ep_lens:66.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:57.0 (spuriousM:4.0 ,   7.0%) | ep_rewards:-0.56 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2515425 | GE:56572 | epochs:0.9  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2515670 | GE:56581 | epochs:0.9  | ep_lens:30.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.18 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2516166 | GE:56594 | epochs:0.9  | ep_lens:52.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:47.0 (spuriousM:5.0 ,  10.6%) | ep_rewards:-0.39 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2516782 | GE:56608 | epochs:0.9  | ep_lens:64.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:58.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.47 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2517131 | GE:56616 | epochs:0.9  | ep_lens:47.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:45.0 (spuriousM:3.0 ,   6.7%) | ep_rewards:-0.29 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2517367 | GE:56623 | epochs:0.9  | ep_lens:38.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.24 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2517658 | GE:56631 | epochs:0.9  | ep_lens:26.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:25.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.18  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2517770 | GE:56633 | epochs:0.9  | ep_lens:23.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.19 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2517856 | GE:56635 | epochs:0.9  | ep_lens:21.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.13 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2518309 | GE:56643 | epochs:0.9  | ep_lens:55.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:48.0 (spuriousM:3.0 ,   6.2%) | ep_rewards:-0.45 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2518451 | GE:56647 | epochs:0.9  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.24 | mean_Q:-0.05  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2519067 | GE:56664 | epochs:0.9  | ep_lens:56.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:47.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.51 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2519184 | GE:56668 | epochs:0.9  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.05  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2519449 | GE:56673 | epochs:0.9  | ep_lens:48.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:43.0 (spuriousM:13.0,  30.2%) | ep_rewards:-0.37 | mean_Q:-0.03  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2519581 | GE:56677 | epochs:0.9  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.18 | mean_Q:-0.03  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2519627 | GE:56679 | epochs:0.9  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.06  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2520225 | GE:56690 | epochs:0.9  | ep_lens:60.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:49.0 (spuriousM:4.0 ,   8.2%) | ep_rewards:-0.58 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2520461 | GE:56695 | epochs:0.9  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.33 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2520589 | GE:56700 | epochs:0.9  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2520700 | GE:56704 | epochs:0.9  | ep_lens:17.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.09 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2521493 | GE:56725 | epochs:0.9  | ep_lens:75.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:67.0 (spuriousM:1.0 ,   1.5%) | ep_rewards:-0.58 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2521720 | GE:56729 | epochs:0.9  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.31 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2522230 | GE:56741 | epochs:0.9  | ep_lens:56.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:52.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.38 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2522654 | GE:56749 | epochs:0.9  | ep_lens:64.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:52.0 (spuriousM:4.0 ,   7.7%) | ep_rewards:-0.62 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2522868 | GE:56756 | epochs:0.9  | ep_lens:45.0 | edits:10.0 (spuriousE:9.0 ,  90.0%) | moves:35.0 (spuriousM:5.0 ,  14.3%) | ep_rewards:-0.44 | mean_Q:-0.04  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:2522955 | GE:56760 | epochs:0.9  | ep_lens:21.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:18.0 (spuriousM:3.0 ,  16.7%) | ep_rewards:-0.18 | mean_Q:0.00   | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2523260 | GE:56768 | epochs:0.9  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:4.0 ,  13.8%) | ep_rewards:-0.33 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2523427 | GE:56771 | epochs:0.9  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.31 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2523888 | GE:56780 | epochs:0.9  | ep_lens:63.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:54.0 (spuriousM:4.0 ,   7.4%) | ep_rewards:-0.54 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2523965 | GE:56783 | epochs:0.9  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2524203 | GE:56788 | epochs:0.9  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:3.0 ,   9.7%) | ep_rewards:-0.25 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2524831 | GE:56805 | epochs:0.9  | ep_lens:56.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:54.0 (spuriousM:3.0 ,   5.6%) | ep_rewards:-0.33 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2524960 | GE:56808 | epochs:0.9  | ep_lens:24.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.25 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2525215 | GE:56815 | epochs:0.9  | ep_lens:31.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.31 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2525290 | GE:56819 | epochs:0.9  | ep_lens:18.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:15.0 (spuriousM:1.0 ,   6.7%) | ep_rewards:-0.17 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2525557 | GE:56828 | epochs:0.9  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.29 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2526139 | GE:56840 | epochs:0.9  | ep_lens:58.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:47.0 (spuriousM:9.0 ,  19.1%) | ep_rewards:-0.57 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2526412 | GE:56848 | epochs:0.9  | ep_lens:27.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.16 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2526760 | GE:56858 | epochs:0.9  | ep_lens:40.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:37.0 (spuriousM:5.0 ,  13.5%) | ep_rewards:-0.28 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2527024 | GE:56866 | epochs:0.9  | ep_lens:38.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.22 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2527149 | GE:56869 | epochs:0.9  | ep_lens:23.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:21.0 (spuriousM:3.0 ,  14.3%) | ep_rewards:-0.17 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2527534 | GE:56880 | epochs:0.9  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.43 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2527943 | GE:56891 | epochs:0.9  | ep_lens:51.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:42.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.48 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2528184 | GE:56899 | epochs:0.9  | ep_lens:32.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.29 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2528592 | GE:56907 | epochs:0.9  | ep_lens:51.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.46 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2529251 | GE:56926 | epochs:0.9  | ep_lens:56.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:50.0 (spuriousM:4.0 ,   8.0%) | ep_rewards:-0.43 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2529367 | GE:56928 | epochs:0.9  | ep_lens:23.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.17 | mean_Q:0.00   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2529443 | GE:56929 | epochs:0.9  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.06  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2529817 | GE:56940 | epochs:0.9  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.33 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2529958 | GE:56946 | epochs:0.9  | ep_lens:23.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.17 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2530325 | GE:56952 | epochs:0.9  | ep_lens:56.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:47.0 (spuriousM:3.0 ,   6.4%) | ep_rewards:-0.51 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2530870 | GE:56962 | epochs:0.9  | ep_lens:70.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:60.0 (spuriousM:6.0 ,  10.0%) | ep_rewards:-0.60 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2531358 | GE:56971 | epochs:0.9  | ep_lens:56.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:49.0 (spuriousM:3.0 ,   6.1%) | ep_rewards:-0.46 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2531585 | GE:56977 | epochs:0.9  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.27 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2531838 | GE:56982 | epochs:0.9  | ep_lens:33.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.37 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2532108 | GE:56990 | epochs:0.9  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:6.0 ,  20.0%) | ep_rewards:-0.30 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2532788 | GE:57007 | epochs:0.9  | ep_lens:58.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:46.0 (spuriousM:5.0 ,  10.9%) | ep_rewards:-0.59 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2532908 | GE:57013 | epochs:0.9  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.23  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2533307 | GE:57021 | epochs:0.9  | ep_lens:54.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:37.0 (spuriousM:5.0 ,  13.5%) | ep_rewards:-0.70 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2533390 | GE:57024 | epochs:0.9  | ep_lens:21.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:18.0 (spuriousM:4.0 ,  22.2%) | ep_rewards:-0.18 | mean_Q:0.01   | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2533656 | GE:57030 | epochs:0.9  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.37 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2534098 | GE:57043 | epochs:0.9  | ep_lens:53.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:45.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.47 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2534419 | GE:57050 | epochs:0.9  | ep_lens:35.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.23 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2534537 | GE:57054 | epochs:0.9  | ep_lens:21.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.13 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2534626 | GE:57055 | epochs:0.9  | ep_lens:11.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:10.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2534904 | GE:57059 | epochs:0.9  | ep_lens:32.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:30.0 (spuriousM:5.0 ,  16.7%) | ep_rewards:-0.21 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2535206 | GE:57066 | epochs:0.9  | ep_lens:49.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.45 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2535850 | GE:57081 | epochs:0.9  | ep_lens:68.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:62.0 (spuriousM:1.0 ,   1.6%) | ep_rewards:-0.49 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2535960 | GE:57083 | epochs:0.9  | ep_lens:22.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:5.0 ,  22.7%) | ep_rewards:-0.11 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2536934 | GE:57105 | epochs:0.9  | ep_lens:96.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:82.0 (spuriousM:2.0 ,   2.4%) | ep_rewards:-0.83 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2537197 | GE:57109 | epochs:0.9  | ep_lens:48.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.47 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2537945 | GE:57129 | epochs:0.9  | ep_lens:78.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:64.0 (spuriousM:4.0 ,   6.2%) | ep_rewards:-0.74 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2538766 | GE:57153 | epochs:0.9  | ep_lens:82.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:64.0 (spuriousM:4.0 ,   6.2%) | ep_rewards:-0.86 | mean_Q:-0.24  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2538960 | GE:57157 | epochs:0.9  | ep_lens:34.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.22 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2539048 | GE:57160 | epochs:0.9  | ep_lens:18.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.12 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2539220 | GE:57164 | epochs:0.9  | ep_lens:24.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.25 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2539518 | GE:57172 | epochs:0.9  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.29 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2539698 | GE:57179 | epochs:0.9  | ep_lens:32.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.29 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2540764 | GE:57204 | epochs:0.9  | ep_lens:92.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:79.0 (spuriousM:3.0 ,   3.8%) | ep_rewards:-0.79 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2540870 | GE:57206 | epochs:0.9  | ep_lens:20.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:18.0 (spuriousM:2.0 ,  11.1%) | ep_rewards:-0.15 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2541142 | GE:57214 | epochs:0.9  | ep_lens:42.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.46 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2541435 | GE:57222 | epochs:0.9  | ep_lens:39.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.32 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2541603 | GE:57228 | epochs:0.9  | ep_lens:26.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.18 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2541901 | GE:57235 | epochs:0.9  | ep_lens:40.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.40 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2542204 | GE:57244 | epochs:0.9  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:3.0 ,   7.7%) | ep_rewards:-0.38 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2543320 | GE:57264 | epochs:0.9  | ep_lens:100.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:90.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:-0.75 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2543495 | GE:57267 | epochs:0.9  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:4.0 ,  13.8%) | ep_rewards:-0.24 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2543689 | GE:57269 | epochs:0.9  | ep_lens:26.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:25.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2543994 | GE:57275 | epochs:0.9  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.37 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2544274 | GE:57281 | epochs:0.9  | ep_lens:49.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.45 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2544629 | GE:57292 | epochs:0.9  | ep_lens:41.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.28 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2544707 | GE:57294 | epochs:0.9  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2544926 | GE:57299 | epochs:0.9  | ep_lens:28.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.17 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2545132 | GE:57306 | epochs:0.9  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.22 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2545575 | GE:57316 | epochs:0.9  | ep_lens:59.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:48.0 (spuriousM:2.0 ,   4.2%) | ep_rewards:-0.57 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2545932 | GE:57326 | epochs:0.9  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:4.0 ,  12.1%) | ep_rewards:-0.29 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2546009 | GE:57327 | epochs:0.9  | ep_lens:18.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:17.0 (spuriousM:2.0 ,  11.8%) | ep_rewards:-0.12 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2546499 | GE:57338 | epochs:0.9  | ep_lens:59.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:45.0 (spuriousM:4.0 ,   8.9%) | ep_rewards:-0.65 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2546660 | GE:57343 | epochs:0.9  | ep_lens:22.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.19 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2546969 | GE:57353 | epochs:0.9  | ep_lens:37.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.29 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2547267 | GE:57361 | epochs:0.9  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.33 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2548537 | GE:57385 | epochs:0.9  | ep_lens:100.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:84.0 (spuriousM:3.0 ,   3.6%) | ep_rewards:-0.90 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2548937 | GE:57395 | epochs:0.9  | ep_lens:73.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:62.0 (spuriousM:6.0 ,   9.7%) | ep_rewards:-0.64 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2549282 | GE:57402 | epochs:0.9  | ep_lens:47.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.41 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2550376 | GE:57425 | epochs:0.9  | ep_lens:98.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:83.0 (spuriousM:3.0 ,   3.6%) | ep_rewards:-0.87 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2550630 | GE:57430 | epochs:0.9  | ep_lens:47.0 | edits:5.0  (spuriousE:4.0 ,  80.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:0.64  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:2550867 | GE:57434 | epochs:0.9  | ep_lens:33.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.22 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2551154 | GE:57440 | epochs:0.9  | ep_lens:29.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:27.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.22  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2551544 | GE:57448 | epochs:0.9  | ep_lens:48.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.42 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2551849 | GE:57455 | epochs:0.9  | ep_lens:32.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.26 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2552530 | GE:57476 | epochs:0.9  | ep_lens:63.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:54.0 (spuriousM:2.0 ,   3.7%) | ep_rewards:-0.54 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2552773 | GE:57481 | epochs:0.9  | ep_lens:30.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:29.0 (spuriousM:1.0 ,   3.4%) | ep_rewards:-0.14 | mean_Q:-0.17  | Errs:2  | Fixes:1  (50.0 %) | TF:No 
TRAIN || T:2552955 | GE:57484 | epochs:0.9  | ep_lens:36.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:29.0 (spuriousM:4.0 ,  13.8%) | ep_rewards:-0.36 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2553162 | GE:57491 | epochs:1.0  | ep_lens:36.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.23 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2553432 | GE:57500 | epochs:1.0  | ep_lens:32.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:28.0 (spuriousM:2.0 ,   7.1%) | ep_rewards:-0.26 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2553536 | GE:57503 | epochs:1.0  | ep_lens:17.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:14.0 (spuriousM:1.0 ,   7.1%) | ep_rewards:-0.16 | mean_Q:-0.00  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2553620 | GE:57506 | epochs:1.0  | ep_lens:18.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:16.0 (spuriousM:1.0 ,   6.2%) | ep_rewards:-0.14 | mean_Q:0.03   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2553718 | GE:57511 | epochs:1.0  | ep_lens:20.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:18.0 (spuriousM:2.0 ,  11.1%) | ep_rewards:-0.15 | mean_Q:0.03   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2553915 | GE:57515 | epochs:1.0  | ep_lens:32.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.29 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2554176 | GE:57523 | epochs:1.0  | ep_lens:37.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.36 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2554777 | GE:57540 | epochs:1.0  | ep_lens:50.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:46.0 (spuriousM:3.0 ,   6.5%) | ep_rewards:-0.35 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2554861 | GE:57542 | epochs:1.0  | ep_lens:17.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:14.0 (spuriousM:2.0 ,  14.3%) | ep_rewards:-0.16 | mean_Q:0.00   | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2555108 | GE:57548 | epochs:1.0  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:5.0 ,  15.2%) | ep_rewards:-0.26 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2555681 | GE:57562 | epochs:1.0  | ep_lens:55.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:48.0 (spuriousM:5.0 ,  10.4%) | ep_rewards:-0.45 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2555803 | GE:57566 | epochs:1.0  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.11  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2556004 | GE:57572 | epochs:1.0  | ep_lens:32.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.29 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2556403 | GE:57584 | epochs:1.0  | ep_lens:49.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:42.0 (spuriousM:4.0 ,   9.5%) | ep_rewards:-0.42 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2556802 | GE:57595 | epochs:1.0  | ep_lens:48.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:43.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.37 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2557511 | GE:57611 | epochs:1.0  | ep_lens:75.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:69.0 (spuriousM:1.0 ,   1.4%) | ep_rewards:-0.53 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2557951 | GE:57617 | epochs:1.0  | ep_lens:52.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:43.0 (spuriousM:7.0 ,  16.3%) | ep_rewards:-0.49 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2558403 | GE:57626 | epochs:1.0  | ep_lens:72.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:65.0 (spuriousM:2.0 ,   3.1%) | ep_rewards:-0.54 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2559035 | GE:57638 | epochs:1.0  | ep_lens:78.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:64.0 (spuriousM:1.0 ,   1.6%) | ep_rewards:-0.74 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2559263 | GE:57642 | epochs:1.0  | ep_lens:35.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.30 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2559376 | GE:57647 | epochs:1.0  | ep_lens:24.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.20 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2559772 | GE:57653 | epochs:1.0  | ep_lens:67.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:55.0 (spuriousM:7.0 ,  12.7%) | ep_rewards:-0.64 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2559956 | GE:57657 | epochs:1.0  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.38 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2560138 | GE:57662 | epochs:1.0  | ep_lens:34.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.32 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2560411 | GE:57668 | epochs:1.0  | ep_lens:33.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:30.0 (spuriousM:5.0 ,  16.7%) | ep_rewards:-0.24 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2560866 | GE:57678 | epochs:1.0  | ep_lens:52.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:46.0 (spuriousM:5.0 ,  10.9%) | ep_rewards:-0.41 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2561562 | GE:57691 | epochs:1.0  | ep_lens:69.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:62.0 (spuriousM:2.0 ,   3.2%) | ep_rewards:-0.52 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2561758 | GE:57696 | epochs:1.0  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.16 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2562026 | GE:57705 | epochs:1.0  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:4.0 ,  11.4%) | ep_rewards:-0.33 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2562440 | GE:57719 | epochs:1.0  | ep_lens:57.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:48.0 (spuriousM:2.0 ,   4.2%) | ep_rewards:-0.51 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2562735 | GE:57725 | epochs:1.0  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.33 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2562946 | GE:57731 | epochs:1.0  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:4.0 ,  16.7%) | ep_rewards:-0.24 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2563217 | GE:57737 | epochs:1.0  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:5.0 ,  11.9%) | ep_rewards:-0.33 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2563453 | GE:57742 | epochs:1.0  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.18  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2563706 | GE:57746 | epochs:1.0  | ep_lens:41.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.43 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2563792 | GE:57750 | epochs:1.0  | ep_lens:19.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:18.0 (spuriousM:3.0 ,  16.7%) | ep_rewards:-0.12 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2563978 | GE:57754 | epochs:1.0  | ep_lens:26.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.21 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2564632 | GE:57769 | epochs:1.0  | ep_lens:64.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:53.0 (spuriousM:3.0 ,   5.7%) | ep_rewards:-0.60 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2565237 | GE:57785 | epochs:1.0  | ep_lens:51.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:43.0 (spuriousM:4.0 ,   9.3%) | ep_rewards:-0.46 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2565464 | GE:57790 | epochs:1.0  | ep_lens:32.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:27.0 (spuriousM:5.0 ,  18.5%) | ep_rewards:-0.29 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2565757 | GE:57798 | epochs:1.0  | ep_lens:37.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.36 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2566042 | GE:57808 | epochs:1.0  | ep_lens:38.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:36.0 (spuriousM:8.0 ,  22.2%) | ep_rewards:-0.24 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2566605 | GE:57824 | epochs:1.0  | ep_lens:43.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:41.0 (spuriousM:2.0 ,   4.9%) | ep_rewards:-0.27 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2567076 | GE:57838 | epochs:1.0  | ep_lens:61.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:52.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.53 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2567211 | GE:57841 | epochs:1.0  | ep_lens:22.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.16 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2567264 | GE:57844 | epochs:1.0  | ep_lens:15.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:14.0 (spuriousM:2.0 ,  14.3%) | ep_rewards:-0.10 | mean_Q:-0.00  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2567555 | GE:57850 | epochs:1.0  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.28 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2567678 | GE:57854 | epochs:1.0  | ep_lens:18.0 | edits:2.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.14  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2567906 | GE:57861 | epochs:1.0  | ep_lens:40.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.43 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2568086 | GE:57866 | epochs:1.0  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2568642 | GE:57881 | epochs:1.0  | ep_lens:51.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:46.0 (spuriousM:6.0 ,  13.0%) | ep_rewards:-0.38 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2569890 | GE:57912 | epochs:1.0  | ep_lens:95.0 | edits:19.0 (spuriousE:19.0, 100.0%) | moves:76.0 (spuriousM:2.0 ,   2.6%) | ep_rewards:-0.95 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2570007 | GE:57913 | epochs:1.0  | ep_lens:21.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.16 | mean_Q:0.01   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2570298 | GE:57920 | epochs:1.0  | ep_lens:45.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.53 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2570439 | GE:57923 | epochs:1.0  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.22 | mean_Q:0.00   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2570707 | GE:57928 | epochs:1.0  | ep_lens:27.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:26.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2570850 | GE:57932 | epochs:1.0  | ep_lens:24.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.12 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2571106 | GE:57938 | epochs:1.0  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.31 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2571528 | GE:57948 | epochs:1.0  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:6.0 ,  14.3%) | ep_rewards:-0.36 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2571622 | GE:57952 | epochs:1.0  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.08  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2572907 | GE:57979 | epochs:1.0  | ep_lens:100.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:90.0 (spuriousM:1.0 ,   1.1%) | ep_rewards:-0.75 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2573080 | GE:57985 | epochs:1.0  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.31 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2573869 | GE:58000 | epochs:1.0  | ep_lens:89.0 | edits:20.0 (spuriousE:20.0, 100.0%) | moves:69.0 (spuriousM:5.0 ,   7.2%) | ep_rewards:-0.95 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2574564 | GE:58013 | epochs:1.0  | ep_lens:75.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:61.0 (spuriousM:7.0 ,  11.5%) | ep_rewards:-0.73 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2575094 | GE:58029 | epochs:1.0  | ep_lens:49.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.37 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2575226 | GE:58032 | epochs:1.0  | ep_lens:19.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:18.0 (spuriousM:2.0 ,  11.1%) | ep_rewards:-0.12 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2575475 | GE:58039 | epochs:1.0  | ep_lens:47.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:42.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.36 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2575642 | GE:58043 | epochs:1.0  | ep_lens:42.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:34.0 (spuriousM:6.0 ,  17.6%) | ep_rewards:-0.41 | mean_Q:-0.02  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2575988 | GE:58051 | epochs:1.0  | ep_lens:38.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.19 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2576143 | GE:58055 | epochs:1.0  | ep_lens:25.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.13 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2576645 | GE:58067 | epochs:1.0  | ep_lens:48.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:41.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.42 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2577411 | GE:58089 | epochs:1.0  | ep_lens:73.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:64.0 (spuriousM:3.0 ,   4.7%) | ep_rewards:-0.59 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2577683 | GE:58095 | epochs:1.0  | ep_lens:39.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.30 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2577928 | GE:58099 | epochs:1.0  | ep_lens:42.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:31.0 (spuriousM:1.0 ,   3.2%) | ep_rewards:-0.49 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2578072 | GE:58103 | epochs:1.0  | ep_lens:23.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.14 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2578409 | GE:58113 | epochs:1.0  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.33 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2578756 | GE:58123 | epochs:1.0  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.30 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2578913 | GE:58126 | epochs:1.0  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.26 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2579171 | GE:58132 | epochs:1.0  | ep_lens:33.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:27.0 (spuriousM:5.0 ,  18.5%) | ep_rewards:-0.32 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2579607 | GE:58142 | epochs:1.0  | ep_lens:59.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:48.0 (spuriousM:2.0 ,   4.2%) | ep_rewards:-0.57 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2579766 | GE:58145 | epochs:1.0  | ep_lens:30.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.20 | mean_Q:-0.06  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2579933 | GE:58148 | epochs:1.0  | ep_lens:28.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.24 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2580414 | GE:58161 | epochs:1.0  | ep_lens:65.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:56.0 (spuriousM:6.0 ,  10.7%) | ep_rewards:-0.55 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2581037 | GE:58175 | epochs:1.0  | ep_lens:63.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:56.0 (spuriousM:7.0 ,  12.5%) | ep_rewards:-0.49 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2581272 | GE:58182 | epochs:1.0  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.37 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2581375 | GE:58183 | epochs:1.0  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.06  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2581624 | GE:58190 | epochs:1.0  | ep_lens:45.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:39.0 (spuriousM:6.0 ,  15.4%) | ep_rewards:-0.38 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2581688 | GE:58193 | epochs:1.0  | ep_lens:3.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:2.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.96  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2581902 | GE:58197 | epochs:1.0  | ep_lens:39.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.40 | mean_Q:-0.02  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2582404 | GE:58207 | epochs:1.0  | ep_lens:65.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:59.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.48 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2582840 | GE:58214 | epochs:1.0  | ep_lens:51.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:46.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.38 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2582946 | GE:58218 | epochs:1.0  | ep_lens:19.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.15 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2583388 | GE:58230 | epochs:1.0  | ep_lens:53.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.52 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2583653 | GE:58235 | epochs:1.0  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.31 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2583719 | GE:58239 | epochs:1.0  | ep_lens:4.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:3.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.95  | mean_Q:-0.18  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2584146 | GE:58252 | epochs:1.0  | ep_lens:46.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:42.0 (spuriousM:2.0 ,   4.8%) | ep_rewards:-0.33 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2584274 | GE:58254 | epochs:1.0  | ep_lens:22.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.19 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2584598 | GE:58260 | epochs:1.0  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:5.0 ,  11.6%) | ep_rewards:-0.43 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2585544 | GE:58283 | epochs:1.0  | ep_lens:89.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:76.0 (spuriousM:1.0 ,   1.3%) | ep_rewards:-0.77 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2585796 | GE:58289 | epochs:1.0  | ep_lens:29.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.27 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2586114 | GE:58296 | epochs:1.0  | ep_lens:40.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:37.0 (spuriousM:4.0 ,  10.8%) | ep_rewards:-0.28 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2586412 | GE:58310 | epochs:1.0  | ep_lens:28.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.14 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2586646 | GE:58314 | epochs:1.0  | ep_lens:33.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.39 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2587080 | GE:58324 | epochs:1.0  | ep_lens:58.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:49.0 (spuriousM:2.0 ,   4.1%) | ep_rewards:-0.52 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2587824 | GE:58339 | epochs:1.0  | ep_lens:81.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:71.0 (spuriousM:4.0 ,   5.6%) | ep_rewards:-0.66 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2588153 | GE:58347 | epochs:1.0  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.36 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2588624 | GE:58356 | epochs:1.0  | ep_lens:48.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:43.0 (spuriousM:5.0 ,  11.6%) | ep_rewards:-0.37 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2588828 | GE:58361 | epochs:1.0  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:7.0 ,  24.1%) | ep_rewards:-0.24 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2589481 | GE:58372 | epochs:1.0  | ep_lens:78.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:69.0 (spuriousM:5.0 ,   7.2%) | ep_rewards:-0.62 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2589829 | GE:58379 | epochs:1.0  | ep_lens:55.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:47.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.48 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2589947 | GE:58383 | epochs:1.0  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:4.0 ,  18.2%) | ep_rewards:-0.20 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2590054 | GE:58385 | epochs:1.0  | ep_lens:22.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.11 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2590344 | GE:58392 | epochs:1.0  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.38 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2591137 | GE:58411 | epochs:1.0  | ep_lens:78.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:70.0 (spuriousM:3.0 ,   4.3%) | ep_rewards:-0.59 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2591726 | GE:58426 | epochs:1.0  | ep_lens:55.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:47.0 (spuriousM:6.0 ,  12.8%) | ep_rewards:-0.48 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2591994 | GE:58432 | epochs:1.0  | ep_lens:47.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.46 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2592334 | GE:58442 | epochs:1.0  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.40 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2592514 | GE:58447 | epochs:1.0  | ep_lens:27.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.16 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2592770 | GE:58454 | epochs:1.0  | ep_lens:34.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.27 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2593152 | GE:58464 | epochs:1.0  | ep_lens:52.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.46 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2593284 | GE:58468 | epochs:1.0  | ep_lens:24.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.17 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2593764 | GE:58480 | epochs:1.0  | ep_lens:70.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:54.0 (spuriousM:2.0 ,   3.7%) | ep_rewards:-0.75 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2593994 | GE:58487 | epochs:1.0  | ep_lens:31.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.23 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2594840 | GE:58506 | epochs:1.0  | ep_lens:81.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:70.0 (spuriousM:5.0 ,   7.1%) | ep_rewards:-0.68 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2594975 | GE:58507 | epochs:1.0  | ep_lens:24.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.20 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2595500 | GE:58520 | epochs:1.0  | ep_lens:65.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:55.0 (spuriousM:3.0 ,   5.5%) | ep_rewards:-0.58 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2595914 | GE:58534 | epochs:1.0  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:5.0 ,  13.5%) | ep_rewards:-0.37 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2596028 | GE:58536 | epochs:1.0  | ep_lens:16.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:15.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.12  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2596199 | GE:58541 | epochs:1.0  | ep_lens:25.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.25 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2596672 | GE:58552 | epochs:1.0  | ep_lens:64.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:56.0 (spuriousM:7.0 ,  12.5%) | ep_rewards:-0.52 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2596848 | GE:58559 | epochs:1.0  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.25 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2597148 | GE:58565 | epochs:1.0  | ep_lens:42.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.39 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2597425 | GE:58571 | epochs:1.0  | ep_lens:39.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.25 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2597731 | GE:58579 | epochs:1.0  | ep_lens:42.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.44 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2597881 | GE:58583 | epochs:1.0  | ep_lens:27.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.26 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2598121 | GE:58588 | epochs:1.0  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:3.0 ,  10.3%) | ep_rewards:-0.24 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2598476 | GE:58599 | epochs:1.0  | ep_lens:42.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.29 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2598669 | GE:58602 | epochs:1.0  | ep_lens:28.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.32 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2598831 | GE:58607 | epochs:1.0  | ep_lens:29.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.25 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2599112 | GE:58613 | epochs:1.0  | ep_lens:34.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:31.0 (spuriousM:2.0 ,   6.5%) | ep_rewards:-0.25 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2599250 | GE:58617 | epochs:1.0  | ep_lens:18.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:17.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.23  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2599590 | GE:58625 | epochs:1.0  | ep_lens:38.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.37 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2599877 | GE:58632 | epochs:1.0  | ep_lens:39.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.35 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2600000 | GE:58636 | epochs:1.0  | ep_lens:22.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:21.0 (spuriousM:4.0 ,  19.0%) | ep_rewards:-0.14 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2600570 | GE:58655 | epochs:1.0  | ep_lens:58.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:54.0 (spuriousM:4.0 ,   7.4%) | ep_rewards:-0.39 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2601166 | GE:58668 | epochs:1.0  | ep_lens:70.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:53.0 (spuriousM:3.0 ,   5.7%) | ep_rewards:-0.78 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2601309 | GE:58674 | epochs:1.0  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.18 | mean_Q:-0.00  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2601828 | GE:58688 | epochs:1.0  | ep_lens:50.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:46.0 (spuriousM:1.0 ,   2.2%) | ep_rewards:-0.35 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2602028 | GE:58696 | epochs:1.0  | ep_lens:27.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:23.0 (spuriousM:1.0 ,   4.3%) | ep_rewards:-0.24 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2602611 | GE:58711 | epochs:1.0  | ep_lens:67.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:59.0 (spuriousM:2.0 ,   3.4%) | ep_rewards:-0.54 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2603464 | GE:58729 | epochs:1.0  | ep_lens:100.0 | edits:24.0 (spuriousE:24.0, 100.0%) | moves:76.0 (spuriousM:46.0,  60.5%) | ep_rewards:-1.10 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2603779 | GE:58736 | epochs:1.0  | ep_lens:34.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.20 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2604405 | GE:58758 | epochs:1.0  | ep_lens:49.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:43.0 (spuriousM:2.0 ,   4.7%) | ep_rewards:-0.40 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2604482 | GE:58760 | epochs:1.0  | ep_lens:16.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:14.0 (spuriousM:1.0 ,   7.1%) | ep_rewards:-0.13 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2605048 | GE:58769 | epochs:1.0  | ep_lens:61.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:52.0 (spuriousM:4.0 ,   7.7%) | ep_rewards:-0.53 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2605116 | GE:58773 | epochs:1.0  | ep_lens:21.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.13 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2605241 | GE:58777 | epochs:1.0  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.25  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2605471 | GE:58783 | epochs:1.0  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.19 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2605758 | GE:58793 | epochs:1.0  | ep_lens:34.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:29.0 (spuriousM:7.0 ,  24.1%) | ep_rewards:-0.30 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2606073 | GE:58802 | epochs:1.0  | ep_lens:40.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:33.0 (spuriousM:3.0 ,   9.1%) | ep_rewards:-0.38 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2606234 | GE:58807 | epochs:1.0  | ep_lens:28.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.19 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2606963 | GE:58821 | epochs:1.0  | ep_lens:73.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:62.0 (spuriousM:1.0 ,   1.6%) | ep_rewards:-0.64 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2607651 | GE:58836 | epochs:1.0  | ep_lens:71.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:62.0 (spuriousM:10.0,  16.1%) | ep_rewards:-0.58 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2608170 | GE:58845 | epochs:1.0  | ep_lens:68.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:64.0 (spuriousM:1.0 ,   1.6%) | ep_rewards:-0.44 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2608295 | GE:58851 | epochs:1.0  | ep_lens:21.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.16 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2608396 | GE:58854 | epochs:1.0  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2608577 | GE:58858 | epochs:1.0  | ep_lens:27.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:24.0 (spuriousM:3.0 ,  12.5%) | ep_rewards:-0.21 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2608704 | GE:58862 | epochs:1.0  | ep_lens:21.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:18.0 (spuriousM:1.0 ,   5.6%) | ep_rewards:-0.18 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2608791 | GE:58864 | epochs:1.0  | ep_lens:23.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:17.0 (spuriousM:2.0 ,  11.8%) | ep_rewards:-0.27 | mean_Q:0.00   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2608899 | GE:58868 | epochs:1.0  | ep_lens:22.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.19 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2609092 | GE:58874 | epochs:1.0  | ep_lens:34.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:26.0 (spuriousM:5.0 ,  19.2%) | ep_rewards:-0.37 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2609236 | GE:58877 | epochs:1.0  | ep_lens:25.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:22.0 (spuriousM:2.0 ,   9.1%) | ep_rewards:-0.20 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2609515 | GE:58882 | epochs:1.0  | ep_lens:39.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.30 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2609909 | GE:58890 | epochs:1.0  | ep_lens:48.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:42.0 (spuriousM:4.0 ,   9.5%) | ep_rewards:-0.39 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2610197 | GE:58896 | epochs:1.0  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.31 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2610963 | GE:58915 | epochs:1.0  | ep_lens:75.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:68.0 (spuriousM:2.0 ,   2.9%) | ep_rewards:-0.55 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2611314 | GE:58921 | epochs:1.0  | ep_lens:52.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:47.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.39 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2611635 | GE:58929 | epochs:1.0  | ep_lens:50.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:43.0 (spuriousM:8.0 ,  18.6%) | ep_rewards:-0.43 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2611873 | GE:58936 | epochs:1.0  | ep_lens:30.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:26.0 (spuriousM:1.0 ,   3.8%) | ep_rewards:-0.25 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2612147 | GE:58942 | epochs:1.0  | ep_lens:35.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:32.0 (spuriousM:1.0 ,   3.1%) | ep_rewards:-0.25 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2612628 | GE:58954 | epochs:1.0  | ep_lens:45.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.33 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2612713 | GE:58957 | epochs:1.0  | ep_lens:10.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:9.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.19  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2612843 | GE:58963 | epochs:1.0  | ep_lens:21.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.16 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2613094 | GE:58970 | epochs:1.0  | ep_lens:30.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:24.0 (spuriousM:2.0 ,   8.3%) | ep_rewards:-0.30 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2613804 | GE:58988 | epochs:1.0  | ep_lens:67.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:61.0 (spuriousM:8.0 ,  13.1%) | ep_rewards:-0.49 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2613976 | GE:58991 | epochs:1.0  | ep_lens:25.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:23.0 (spuriousM:4.0 ,  17.4%) | ep_rewards:-0.18 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2614085 | GE:58992 | epochs:1.0  | ep_lens:24.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:22.0 (spuriousM:1.0 ,   4.5%) | ep_rewards:-0.17 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2614665 | GE:59002 | epochs:1.0  | ep_lens:63.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:57.0 (spuriousM:2.0 ,   3.5%) | ep_rewards:-0.47 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2614848 | GE:59006 | epochs:1.0  | ep_lens:32.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:28.0 (spuriousM:6.0 ,  21.4%) | ep_rewards:-0.26 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2615414 | GE:59021 | epochs:1.0  | ep_lens:64.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:53.0 (spuriousM:4.0 ,   7.5%) | ep_rewards:-0.60 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2615601 | GE:59024 | epochs:1.0  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.19 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2615747 | GE:59029 | epochs:1.0  | ep_lens:26.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:20.0 (spuriousM:2.0 ,  10.0%) | ep_rewards:-0.28 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2616772 | GE:59050 | epochs:1.0  | ep_lens:100.0 | edits:18.0 (spuriousE:18.0, 100.0%) | moves:82.0 (spuriousM:34.0,  41.5%) | ep_rewards:-0.95 | mean_Q:-0.28  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2616952 | GE:59052 | epochs:1.0  | ep_lens:35.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:31.0 (spuriousM:5.0 ,  16.1%) | ep_rewards:-0.28 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2617309 | GE:59062 | epochs:1.0  | ep_lens:39.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.30 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2618081 | GE:59082 | epochs:1.0  | ep_lens:64.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:57.0 (spuriousM:5.0 ,   8.8%) | ep_rewards:-0.50 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2618472 | GE:59095 | epochs:1.0  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.36 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2618709 | GE:59102 | epochs:1.0  | ep_lens:32.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.34 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2618973 | GE:59107 | epochs:1.0  | ep_lens:49.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:42.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.42 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2619282 | GE:59114 | epochs:1.0  | ep_lens:38.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.24 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2619482 | GE:59121 | epochs:1.0  | ep_lens:36.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:33.0 (spuriousM:2.0 ,   6.1%) | ep_rewards:-0.26 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2619652 | GE:59126 | epochs:1.0  | ep_lens:22.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:20.0 (spuriousM:1.0 ,   5.0%) | ep_rewards:-0.16 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2619998 | GE:59138 | epochs:1.0  | ep_lens:32.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.24 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2620222 | GE:59142 | epochs:1.0  | ep_lens:25.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.13 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2620461 | GE:59148 | epochs:1.0  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.33 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2621443 | GE:59162 | epochs:1.0  | ep_lens:100.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:84.0 (spuriousM:5.0 ,   6.0%) | ep_rewards:-0.90 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2621819 | GE:59167 | epochs:1.0  | ep_lens:42.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.34 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2621907 | GE:59169 | epochs:1.0  | ep_lens:22.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:19.0 (spuriousM:3.0 ,  15.8%) | ep_rewards:-0.19 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2622186 | GE:59176 | epochs:1.0  | ep_lens:36.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:30.0 (spuriousM:3.0 ,  10.0%) | ep_rewards:-0.33 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2622886 | GE:59194 | epochs:1.0  | ep_lens:66.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:55.0 (spuriousM:4.0 ,   7.3%) | ep_rewards:-0.61 | mean_Q:-0.24  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2623192 | GE:59204 | epochs:1.0  | ep_lens:45.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.43 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2624018 | GE:59226 | epochs:1.0  | ep_lens:70.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:63.0 (spuriousM:12.0,  19.0%) | ep_rewards:-0.53 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2624506 | GE:59238 | epochs:1.0  | ep_lens:45.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:42.0 (spuriousM:1.0 ,   2.4%) | ep_rewards:-0.30 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2624844 | GE:59246 | epochs:1.0  | ep_lens:31.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:30.0 (spuriousM:2.0 ,   6.7%) | ep_rewards:-0.18 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2624958 | GE:59249 | epochs:1.0  | ep_lens:24.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.20 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2625206 | GE:59256 | epochs:1.0  | ep_lens:38.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:34.0 (spuriousM:2.0 ,   5.9%) | ep_rewards:-0.29 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2625339 | GE:59259 | epochs:1.0  | ep_lens:18.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.12 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2625806 | GE:59270 | epochs:1.0  | ep_lens:48.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:44.0 (spuriousM:1.0 ,   2.3%) | ep_rewards:-0.34 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2626017 | GE:59275 | epochs:1.0  | ep_lens:40.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:30.0 (spuriousM:5.0 ,  16.7%) | ep_rewards:-0.45 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2626273 | GE:59284 | epochs:1.0  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.33 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2626530 | GE:59289 | epochs:1.0  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.26 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2626900 | GE:59300 | epochs:1.0  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.36 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2627385 | GE:59312 | epochs:1.0  | ep_lens:47.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:37.0 (spuriousM:3.0 ,   8.1%) | ep_rewards:-0.49 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2627882 | GE:59329 | epochs:1.0  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.36 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2628198 | GE:59337 | epochs:1.0  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.30 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2628526 | GE:59343 | epochs:1.0  | ep_lens:41.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:34.0 (spuriousM:1.0 ,   2.9%) | ep_rewards:-0.38 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2628904 | GE:59349 | epochs:1.0  | ep_lens:48.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:39.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:-0.47 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2629040 | GE:59354 | epochs:1.0  | ep_lens:23.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:19.0 (spuriousM:2.0 ,  10.5%) | ep_rewards:-0.22 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2629255 | GE:59357 | epochs:1.0  | ep_lens:32.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.29 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2629342 | GE:59361 | epochs:1.0  | ep_lens:18.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:18.0 (spuriousM:1.0 ,   5.6%) | ep_rewards:-0.09 | mean_Q:-0.03  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2629618 | GE:59367 | epochs:1.0  | ep_lens:41.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:37.0 (spuriousM:2.0 ,   5.4%) | ep_rewards:-0.31 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2630281 | GE:59384 | epochs:1.0  | ep_lens:78.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:65.0 (spuriousM:1.0 ,   1.5%) | ep_rewards:-0.72 | mean_Q:-0.21  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2630515 | GE:59388 | epochs:1.0  | ep_lens:33.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.27 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2630730 | GE:59395 | epochs:1.0  | ep_lens:28.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.17 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2630996 | GE:59401 | epochs:1.0  | ep_lens:25.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.85  | mean_Q:-0.22  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2631255 | GE:59408 | epochs:1.0  | ep_lens:40.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:33.0 (spuriousM:1.0 ,   3.0%) | ep_rewards:-0.38 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2631923 | GE:59428 | epochs:1.0  | ep_lens:53.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:49.0 (spuriousM:2.0 ,   4.1%) | ep_rewards:-0.37 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2632348 | GE:59439 | epochs:1.0  | ep_lens:32.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:31.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.81  | mean_Q:-0.16  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2632444 | GE:59441 | epochs:1.0  | ep_lens:14.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:13.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.08  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2632533 | GE:59446 | epochs:1.0  | ep_lens:21.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.21 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2632753 | GE:59450 | epochs:1.0  | ep_lens:38.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:30.0 (spuriousM:5.0 ,  16.7%) | ep_rewards:-0.39 | mean_Q:-0.04  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2633013 | GE:59457 | epochs:1.0  | ep_lens:38.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.34 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2633192 | GE:59463 | epochs:1.0  | ep_lens:21.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:20.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.87  | mean_Q:-0.19  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2633948 | GE:59483 | epochs:1.0  | ep_lens:73.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:66.0 (spuriousM:3.0 ,   4.5%) | ep_rewards:-0.54 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2634559 | GE:59498 | epochs:1.0  | ep_lens:62.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:54.0 (spuriousM:1.0 ,   1.9%) | ep_rewards:-0.51 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2634658 | GE:59501 | epochs:1.0  | ep_lens:22.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:21.0 (spuriousM:3.0 ,  14.3%) | ep_rewards:-0.14 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2635252 | GE:59513 | epochs:1.0  | ep_lens:62.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:52.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.56 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2635319 | GE:59516 | epochs:1.0  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2635656 | GE:59528 | epochs:1.0  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:2.0 ,   5.7%) | ep_rewards:-0.33 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2636057 | GE:59538 | epochs:1.0  | ep_lens:43.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:37.0 (spuriousM:1.0 ,   2.7%) | ep_rewards:-0.37 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2636168 | GE:59543 | epochs:1.0  | ep_lens:23.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:20.0 (spuriousM:3.0 ,  15.0%) | ep_rewards:-0.19 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2636499 | GE:59552 | epochs:1.0  | ep_lens:48.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.42 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2636669 | GE:59559 | epochs:1.0  | ep_lens:27.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:23.0 (spuriousM:4.0 ,  17.4%) | ep_rewards:-0.24 | mean_Q:-0.06  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2637112 | GE:59569 | epochs:1.0  | ep_lens:59.0 | edits:12.0 (spuriousE:12.0, 100.0%) | moves:47.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.60 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2637327 | GE:59576 | epochs:1.0  | ep_lens:37.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.44 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2638062 | GE:59594 | epochs:1.0  | ep_lens:55.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:51.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.38 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2638275 | GE:59602 | epochs:1.0  | ep_lens:40.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.30 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2638513 | GE:59605 | epochs:1.0  | ep_lens:26.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:25.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.84  | mean_Q:-0.20  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2638615 | GE:59609 | epochs:1.0  | ep_lens:19.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.10 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2638779 | GE:59612 | epochs:1.0  | ep_lens:29.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.20 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2639250 | GE:59629 | epochs:1.0  | ep_lens:48.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:41.0 (spuriousM:3.0 ,   7.3%) | ep_rewards:-0.42 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2639406 | GE:59633 | epochs:1.0  | ep_lens:27.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.14 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2640452 | GE:59658 | epochs:1.0  | ep_lens:90.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:76.0 (spuriousM:4.0 ,   5.3%) | ep_rewards:-0.80 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2640810 | GE:59668 | epochs:1.0  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:4.0 ,   9.1%) | ep_rewards:-0.40 | mean_Q:-0.14  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2641007 | GE:59674 | epochs:1.0  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:2.0 ,   6.9%) | ep_rewards:-0.33 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2641198 | GE:59680 | epochs:1.0  | ep_lens:27.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:25.0 (spuriousM:2.0 ,   8.0%) | ep_rewards:-0.19 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2641504 | GE:59688 | epochs:1.0  | ep_lens:42.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:36.0 (spuriousM:1.0 ,   2.8%) | ep_rewards:-0.36 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2641723 | GE:59697 | epochs:1.0  | ep_lens:35.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:29.0 (spuriousM:5.0 ,  17.2%) | ep_rewards:-0.33 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2641907 | GE:59701 | epochs:1.0  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.22 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2642159 | GE:59710 | epochs:1.0  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:3.0 ,  11.1%) | ep_rewards:-0.23 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2642316 | GE:59715 | epochs:1.0  | ep_lens:27.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:21.0 (spuriousM:2.0 ,   9.5%) | ep_rewards:-0.29 | mean_Q:0.02   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2642735 | GE:59723 | epochs:1.0  | ep_lens:58.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:52.0 (spuriousM:4.0 ,   7.7%) | ep_rewards:-0.44 | mean_Q:-0.09  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2642853 | GE:59726 | epochs:1.0  | ep_lens:28.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:25.0 (spuriousM:3.0 ,  12.0%) | ep_rewards:-0.22 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2642993 | GE:59728 | epochs:1.0  | ep_lens:29.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:26.0 (spuriousM:4.0 ,  15.4%) | ep_rewards:-0.22 | mean_Q:-0.05  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2643044 | GE:59729 | epochs:1.0  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.07  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2643307 | GE:59736 | epochs:1.0  | ep_lens:30.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:29.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.82  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2643965 | GE:59745 | epochs:1.0  | ep_lens:96.0 | edits:16.0 (spuriousE:16.0, 100.0%) | moves:80.0 (spuriousM:4.0 ,   5.0%) | ep_rewards:-0.88 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2644333 | GE:59755 | epochs:1.0  | ep_lens:46.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:40.0 (spuriousM:2.0 ,   5.0%) | ep_rewards:-0.38 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2644582 | GE:59761 | epochs:1.0  | ep_lens:45.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:36.0 (spuriousM:6.0 ,  16.7%) | ep_rewards:-0.45 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2645156 | GE:59770 | epochs:1.0  | ep_lens:80.0 | edits:11.0 (spuriousE:11.0, 100.0%) | moves:69.0 (spuriousM:13.0,  18.8%) | ep_rewards:-0.68 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2645434 | GE:59777 | epochs:1.0  | ep_lens:27.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.16 | mean_Q:-0.18  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2645578 | GE:59779 | epochs:1.0  | ep_lens:22.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:19.0 (spuriousM:1.0 ,   5.3%) | ep_rewards:-0.19 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2646248 | GE:59792 | epochs:1.0  | ep_lens:71.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:58.0 (spuriousM:3.0 ,   5.2%) | ep_rewards:-0.68 | mean_Q:-0.23  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2646502 | GE:59797 | epochs:1.0  | ep_lens:45.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.45 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2646564 | GE:59800 | epochs:1.0  | ep_lens:6.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:5.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2647020 | GE:59813 | epochs:1.0  | ep_lens:50.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:44.0 (spuriousM:2.0 ,   4.5%) | ep_rewards:-0.40 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2647933 | GE:59832 | epochs:1.0  | ep_lens:92.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:75.0 (spuriousM:10.0,  13.3%) | ep_rewards:-0.89 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2648329 | GE:59840 | epochs:1.0  | ep_lens:42.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.39 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2648734 | GE:59849 | epochs:1.0  | ep_lens:50.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:48.0 (spuriousM:7.0 ,  14.6%) | ep_rewards:-0.30 | mean_Q:-0.19  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2649181 | GE:59856 | epochs:1.0  | ep_lens:70.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:56.0 (spuriousM:2.0 ,   3.6%) | ep_rewards:-0.70 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2649310 | GE:59859 | epochs:1.0  | ep_lens:13.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:12.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.91  | mean_Q:-0.23  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2649785 | GE:59869 | epochs:1.0  | ep_lens:63.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:53.0 (spuriousM:2.0 ,   3.8%) | ep_rewards:-0.57 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2650064 | GE:59873 | epochs:1.0  | ep_lens:45.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.48 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2650398 | GE:59884 | epochs:1.0  | ep_lens:40.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:35.0 (spuriousM:7.0 ,  20.0%) | ep_rewards:-0.33 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2651434 | GE:59905 | epochs:1.0  | ep_lens:100.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:87.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:-0.83 | mean_Q:-0.23  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2651936 | GE:59918 | epochs:1.0  | ep_lens:55.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:47.0 (spuriousM:1.0 ,   2.1%) | ep_rewards:-0.48 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2652765 | GE:59933 | epochs:1.0  | ep_lens:92.0 | edits:14.0 (spuriousE:14.0, 100.0%) | moves:78.0 (spuriousM:1.0 ,   1.3%) | ep_rewards:-0.81 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2652933 | GE:59936 | epochs:1.0  | ep_lens:32.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.29 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2653359 | GE:59948 | epochs:1.0  | ep_lens:57.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:44.0 (spuriousM:5.0 ,  11.4%) | ep_rewards:-0.61 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2653674 | GE:59954 | epochs:1.0  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:2.0 ,   7.4%) | ep_rewards:-0.26 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2653907 | GE:59960 | epochs:1.0  | ep_lens:31.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:27.0 (spuriousM:1.0 ,   3.7%) | ep_rewards:-0.26 | mean_Q:-0.17  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2654170 | GE:59964 | epochs:1.0  | ep_lens:38.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:32.0 (spuriousM:5.0 ,  15.6%) | ep_rewards:-0.34 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2654359 | GE:59971 | epochs:1.0  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.33  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2654510 | GE:59976 | epochs:1.0  | ep_lens:24.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:23.0 (spuriousM:4.0 ,  17.4%) | ep_rewards:-0.15 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2654759 | GE:59983 | epochs:1.0  | ep_lens:30.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.20 | mean_Q:-0.14  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2655110 | GE:59990 | epochs:1.0  | ep_lens:36.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:31.0 (spuriousM:4.0 ,  12.9%) | ep_rewards:-0.31 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2655640 | GE:60002 | epochs:1.0  | ep_lens:60.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:53.0 (spuriousM:3.0 ,   5.7%) | ep_rewards:-0.48 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2655983 | GE:60013 | epochs:1.0  | ep_lens:48.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:39.0 (spuriousM:2.0 ,   5.1%) | ep_rewards:-0.47 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2656291 | GE:60020 | epochs:1.0  | ep_lens:41.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:35.0 (spuriousM:7.0 ,  20.0%) | ep_rewards:-0.36 | mean_Q:-0.12  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2656535 | GE:60027 | epochs:1.0  | ep_lens:37.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:30.0 (spuriousM:4.0 ,  13.3%) | ep_rewards:-0.36 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2656659 | GE:60030 | epochs:1.0  | ep_lens:25.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.15 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2656926 | GE:60038 | epochs:1.0  | ep_lens:34.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:32.0 (spuriousM:2.0 ,   6.2%) | ep_rewards:-0.22 | mean_Q:-0.13  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2657042 | GE:60043 | epochs:1.0  | ep_lens:21.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:21.0 (spuriousM:1.0 ,   4.8%) | ep_rewards:-0.11 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2657215 | GE:60047 | epochs:1.0  | ep_lens:23.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:22.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.86  | mean_Q:-0.14  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2657767 | GE:60060 | epochs:1.0  | ep_lens:53.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:48.0 (spuriousM:4.0 ,   8.3%) | ep_rewards:-0.39 | mean_Q:-0.12  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2657828 | GE:60063 | epochs:1.0  | ep_lens:7.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:6.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.94  | mean_Q:-0.06  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2658009 | GE:60068 | epochs:1.0  | ep_lens:34.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:26.0 (spuriousM:3.0 ,  11.5%) | ep_rewards:-0.37 | mean_Q:0.00   | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2658819 | GE:60086 | epochs:1.0  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.46 | mean_Q:-0.11  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2658924 | GE:60090 | epochs:1.0  | ep_lens:21.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:19.0 (spuriousM:3.0 ,  15.8%) | ep_rewards:-0.16 | mean_Q:-0.01  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2659138 | GE:60095 | epochs:1.0  | ep_lens:39.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:32.0 (spuriousM:3.0 ,   9.4%) | ep_rewards:-0.37 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2659286 | GE:60099 | epochs:1.0  | ep_lens:24.0 | edits:0.0  (spuriousE:0.0 ,   0.0%) | moves:24.0 (spuriousM:1.0 ,   4.2%) | ep_rewards:-0.12 | mean_Q:-0.08  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2659377 | GE:60101 | epochs:1.0  | ep_lens:17.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:16.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.89  | mean_Q:-0.07  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2659450 | GE:60105 | epochs:1.0  | ep_lens:12.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:11.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.92  | mean_Q:-0.05  | Errs:2  | Fixes:2  (100.0%) | TF:Yes
TRAIN || T:2659988 | GE:60116 | epochs:1.0  | ep_lens:51.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:45.0 (spuriousM:4.0 ,   8.9%) | ep_rewards:-0.41 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2660341 | GE:60124 | epochs:1.0  | ep_lens:49.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:43.0 (spuriousM:3.0 ,   7.0%) | ep_rewards:-0.40 | mean_Q:-0.07  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2661472 | GE:60151 | epochs:1.0  | ep_lens:100.0 | edits:17.0 (spuriousE:17.0, 100.0%) | moves:83.0 (spuriousM:2.0 ,   2.4%) | ep_rewards:-0.93 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2662168 | GE:60167 | epochs:1.0  | ep_lens:82.0 | edits:10.0 (spuriousE:10.0, 100.0%) | moves:72.0 (spuriousM:3.0 ,   4.2%) | ep_rewards:-0.66 | mean_Q:-0.19  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2663105 | GE:60186 | epochs:1.0  | ep_lens:88.0 | edits:15.0 (spuriousE:15.0, 100.0%) | moves:73.0 (spuriousM:5.0 ,   6.8%) | ep_rewards:-0.82 | mean_Q:-0.20  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2663471 | GE:60194 | epochs:1.0  | ep_lens:45.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:40.0 (spuriousM:3.0 ,   7.5%) | ep_rewards:-0.35 | mean_Q:-0.21  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2663724 | GE:60199 | epochs:1.0  | ep_lens:43.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:36.0 (spuriousM:3.0 ,   8.3%) | ep_rewards:-0.39 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2664053 | GE:60209 | epochs:1.0  | ep_lens:41.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:36.0 (spuriousM:2.0 ,   5.6%) | ep_rewards:-0.33 | mean_Q:-0.22  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2664327 | GE:60216 | epochs:1.0  | ep_lens:36.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:32.0 (spuriousM:4.0 ,  12.5%) | ep_rewards:-0.28 | mean_Q:-0.22  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2664643 | GE:60228 | epochs:1.0  | ep_lens:38.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:35.0 (spuriousM:3.0 ,   8.6%) | ep_rewards:-0.27 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2664729 | GE:60229 | epochs:1.0  | ep_lens:20.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:18.0 (spuriousM:1.0 ,   5.6%) | ep_rewards:-0.15 | mean_Q:-0.07  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2665441 | GE:60247 | epochs:1.0  | ep_lens:71.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:65.0 (spuriousM:3.0 ,   4.6%) | ep_rewards:-0.51 | mean_Q:-0.20  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2665546 | GE:60250 | epochs:1.0  | ep_lens:19.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:17.0 (spuriousM:3.0 ,  17.6%) | ep_rewards:-0.15 | mean_Q:-0.04  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2666285 | GE:60267 | epochs:1.0  | ep_lens:73.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:69.0 (spuriousM:2.0 ,   2.9%) | ep_rewards:-0.47 | mean_Q:-0.16  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2666892 | GE:60284 | epochs:1.0  | ep_lens:52.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:48.0 (spuriousM:2.0 ,   4.2%) | ep_rewards:-0.36 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2667046 | GE:60289 | epochs:1.0  | ep_lens:26.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:23.0 (spuriousM:3.0 ,  13.0%) | ep_rewards:-0.21 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2667784 | GE:60309 | epochs:1.0  | ep_lens:64.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:57.0 (spuriousM:4.0 ,   7.0%) | ep_rewards:-0.50 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2667879 | GE:60313 | epochs:1.0  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.13  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2668334 | GE:60324 | epochs:1.0  | ep_lens:39.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:36.0 (spuriousM:4.0 ,  11.1%) | ep_rewards:-0.27 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2669160 | GE:60347 | epochs:1.0  | ep_lens:67.0 | edits:6.0  (spuriousE:6.0 , 100.0%) | moves:61.0 (spuriousM:3.0 ,   4.9%) | ep_rewards:-0.49 | mean_Q:-0.15  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2670081 | GE:60375 | epochs:1.0  | ep_lens:74.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:67.0 (spuriousM:5.0 ,   7.5%) | ep_rewards:-0.55 | mean_Q:-0.18  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2670153 | GE:60377 | epochs:1.0  | ep_lens:8.0  | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:7.0  (spuriousM:0.0 ,   0.0%) | ep_rewards:0.93  | mean_Q:-0.09  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2671008 | GE:60393 | epochs:1.0  | ep_lens:73.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:64.0 (spuriousM:7.0 ,  10.9%) | ep_rewards:-0.59 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2671449 | GE:60402 | epochs:1.0  | ep_lens:62.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:60.0 (spuriousM:5.0 ,   8.3%) | ep_rewards:-0.36 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2671994 | GE:60412 | epochs:1.0  | ep_lens:69.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:60.0 (spuriousM:7.0 ,  11.7%) | ep_rewards:-0.57 | mean_Q:-0.13  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2672342 | GE:60422 | epochs:1.0  | ep_lens:43.0 | edits:5.0  (spuriousE:4.0 ,  80.0%) | moves:38.0 (spuriousM:1.0 ,   2.6%) | ep_rewards:0.66  | mean_Q:-0.19  | Errs:1  | Fixes:1  (100.0%) | TF:No 
TRAIN || T:2672428 | GE:60425 | epochs:1.0  | ep_lens:15.0 | edits:1.0  (spuriousE:0.0 ,   0.0%) | moves:14.0 (spuriousM:0.0 ,   0.0%) | ep_rewards:0.90  | mean_Q:-0.17  | Errs:1  | Fixes:1  (100.0%) | TF:Yes
TRAIN || T:2672647 | GE:60428 | epochs:1.0  | ep_lens:34.0 | edits:8.0  (spuriousE:8.0 , 100.0%) | moves:26.0 (spuriousM:2.0 ,   7.7%) | ep_rewards:-0.37 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2672963 | GE:60431 | epochs:1.0  | ep_lens:43.0 | edits:5.0  (spuriousE:5.0 , 100.0%) | moves:38.0 (spuriousM:2.0 ,   5.3%) | ep_rewards:-0.34 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2673096 | GE:60437 | epochs:1.0  | ep_lens:30.0 | edits:3.0  (spuriousE:3.0 , 100.0%) | moves:27.0 (spuriousM:4.0 ,  14.8%) | ep_rewards:-0.23 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2673306 | GE:60443 | epochs:1.0  | ep_lens:37.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:28.0 (spuriousM:1.0 ,   3.6%) | ep_rewards:-0.41 | mean_Q:-0.11  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2673613 | GE:60449 | epochs:1.0  | ep_lens:38.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:37.0 (spuriousM:5.0 ,  13.5%) | ep_rewards:-0.22 | mean_Q:-0.17  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2673784 | GE:60456 | epochs:1.0  | ep_lens:36.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:34.0 (spuriousM:3.0 ,   8.8%) | ep_rewards:-0.23 | mean_Q:-0.08  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2674336 | GE:60470 | epochs:1.0  | ep_lens:61.0 | edits:13.0 (spuriousE:13.0, 100.0%) | moves:48.0 (spuriousM:11.0,  22.9%) | ep_rewards:-0.63 | mean_Q:-0.15  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2674548 | GE:60475 | epochs:1.0  | ep_lens:34.0 | edits:9.0  (spuriousE:9.0 , 100.0%) | moves:25.0 (spuriousM:4.0 ,  16.0%) | ep_rewards:-0.40 | mean_Q:-0.09  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2674678 | GE:60479 | epochs:1.0  | ep_lens:20.0 | edits:2.0  (spuriousE:2.0 , 100.0%) | moves:18.0 (spuriousM:1.0 ,   5.6%) | ep_rewards:-0.15 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2674752 | GE:60484 | epochs:1.0  | ep_lens:18.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:17.0 (spuriousM:1.0 ,   5.9%) | ep_rewards:-0.12 | mean_Q:-0.03  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2674948 | GE:60489 | epochs:1.0  | ep_lens:26.0 | edits:1.0  (spuriousE:1.0 , 100.0%) | moves:25.0 (spuriousM:1.0 ,   4.0%) | ep_rewards:-0.16 | mean_Q:-0.10  | Errs:1  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2675415 | GE:60497 | epochs:1.0  | ep_lens:57.0 | edits:7.0  (spuriousE:7.0 , 100.0%) | moves:50.0 (spuriousM:1.0 ,   2.0%) | ep_rewards:-0.46 | mean_Q:-0.10  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
TRAIN || T:2676130 | GE:60512 | epochs:1.0  | ep_lens:51.0 | edits:4.0  (spuriousE:4.0 , 100.0%) | moves:47.0 (spuriousM:2.0 ,   4.3%) | ep_rewards:-0.36 | mean_Q:-0.16  | Errs:2  | Fixes:0  (0.0  %) | TF:No 
Saved Model: 2676130

======= SUMMARY_TRAIN || GE:60513 | episodes:54367 | ep_lens:47.2 | edits:6.4  (spuriousE:6.4 ,  99.8%) | moves:40.8 (spuriousM:4.3 ,  10.5%) | ep_rewards:-0.39 | mean_Q:-0.16  | Errs:69168 | Fixes:742 (1.1  %) | done at 23/06/2021 03:00:19
time_taken: 15998.177820205688
test eval_data_size:500, num_eval_workers:8, eval_batch_size:62
Starting evaluator thread 0  with a batch of 62 (0-62) episodes
Starting evaluator thread 1  with a batch of 62 (62-124) episodes
Starting evaluator thread 2  with a batch of 62 (124-186) episodes
Starting evaluator thread 3  with a batch of 62 (186-248) episodes
Starting evaluator thread 4  with a batch of 62 (248-310) episodes
Starting evaluator thread 5  with a batch of 62 (310-372) episodes
Starting evaluator thread 6  with a batch of 62 (372-434) episodes
Starting evaluator thread 7  with a batch of 66 (434-500) episodes




-----------------------| Started logging at: Jun 23 2021 21:36:53 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 21:38:20 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 21:38:45 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 21:39:30 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 21:40:04 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 21:46:34 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 21:47:00 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 21:50:52 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 21:54:27 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 21:59:43 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 22:01:03 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 22:09:35 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 22:11:18 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 22:12:14 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 22:23:07 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 22:25:31 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 22:26:39 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 22:34:40 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 22:35:28 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 22:36:09 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
<tensorflow.python.keras.engine.functional.Functional object at 0x7ff9a8c371f0>


-----------------------| Started logging at: Jun 23 2021 22:36:59 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
<tensorflow.python.keras.engine.functional.Functional object at 0x7fb5982fe1f0>
num_workers: 8


-----------------------| Started logging at: Jun 23 2021 22:38:03 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
<tensorflow.python.keras.engine.functional.Functional object at 0x7f8cb9c1f1f0>
num_workers: 8
GE_selection_probability: 1
<tensorflow.python.keras.engine.functional.Functional object at 0x7f8cd8d32070>


-----------------------| Started logging at: Jun 23 2021 22:38:24 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
<tensorflow.python.keras.engine.functional.Functional object at 0x7f8d70f861f0>
num_workers: 8
GE_selection_probability: 1
<tensorflow.python.keras.engine.functional.Functional object at 0x7f8da098b070>
will train for 605100 max_episodes
<tensorflow.python.keras.engine.functional.Functional object at 0x7f8d70fe6910>
<tensorflow.python.keras.engine.functional.Functional object at 0x7f8d50cc9f70>
<tensorflow.python.keras.engine.functional.Functional object at 0x7f8da0ab67f0>
<tensorflow.python.keras.engine.functional.Functional object at 0x7f8d7105bcd0>
<tensorflow.python.keras.engine.functional.Functional object at 0x7f8db1362310>
<tensorflow.python.keras.engine.functional.Functional object at 0x7f8db1368190>
<tensorflow.python.keras.engine.functional.Functional object at 0x7f8d81078fa0>
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 5, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 6, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 7, T: 0, GE: 0.000000, labelled_data: 6051


-----------------------| Started logging at: Jun 23 2021 22:39:30 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
input_1 (InputLayer)            [(None, 91)]         0                                            
__________________________________________________________________________________________________
embedding (Embedding)           (None, 91, 24)       2184        input_1[0][0]                    
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       embedding[0][0]                  
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
global_average_pooling1d (Globa (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
dense (Dense)                   (None, 13)           1677        global_average_pooling1d[0][0]   
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           dense[0][0]                      
__________________________________________________________________________________________________
dense_1 (Dense)                 (None, 1)            129         global_average_pooling1d[0][0]   
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
input_2 (InputLayer)            [(None, 91)]         0                                            
__________________________________________________________________________________________________
embedding_1 (Embedding)         (None, 91, 24)       2184        input_2[0][0]                    
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       embedding_1[0][0]                
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
global_average_pooling1d_1 (Glo (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
dense_2 (Dense)                 (None, 13)           1677        global_average_pooling1d_1[0][0] 
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           dense_2[0][0]                    
__________________________________________________________________________________________________
dense_3 (Dense)                 (None, 1)            129         global_average_pooling1d_1[0][0] 
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
input_3 (InputLayer)            [(None, 91)]         0                                            
__________________________________________________________________________________________________
embedding_2 (Embedding)         (None, 91, 24)       2184        input_3[0][0]                    
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       embedding_2[0][0]                
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
global_average_pooling1d_2 (Glo (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
dense_4 (Dense)                 (None, 13)           1677        global_average_pooling1d_2[0][0] 
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           dense_4[0][0]                    
__________________________________________________________________________________________________
dense_5 (Dense)                 (None, 1)            129         global_average_pooling1d_2[0][0] 
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
input_4 (InputLayer)            [(None, 91)]         0                                            
__________________________________________________________________________________________________
embedding_3 (Embedding)         (None, 91, 24)       2184        input_4[0][0]                    
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       embedding_3[0][0]                
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
global_average_pooling1d_3 (Glo (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
dense_6 (Dense)                 (None, 13)           1677        global_average_pooling1d_3[0][0] 
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           dense_6[0][0]                    
__________________________________________________________________________________________________
dense_7 (Dense)                 (None, 1)            129         global_average_pooling1d_3[0][0] 
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
input_5 (InputLayer)            [(None, 91)]         0                                            
__________________________________________________________________________________________________
embedding_4 (Embedding)         (None, 91, 24)       2184        input_5[0][0]                    
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       embedding_4[0][0]                
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
global_average_pooling1d_4 (Glo (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
dense_8 (Dense)                 (None, 13)           1677        global_average_pooling1d_4[0][0] 
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           dense_8[0][0]                    
__________________________________________________________________________________________________
dense_9 (Dense)                 (None, 1)            129         global_average_pooling1d_4[0][0] 
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
input_6 (InputLayer)            [(None, 91)]         0                                            
__________________________________________________________________________________________________
embedding_5 (Embedding)         (None, 91, 24)       2184        input_6[0][0]                    
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       embedding_5[0][0]                
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
global_average_pooling1d_5 (Glo (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
dense_10 (Dense)                (None, 13)           1677        global_average_pooling1d_5[0][0] 
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           dense_10[0][0]                   
__________________________________________________________________________________________________
dense_11 (Dense)                (None, 1)            129         global_average_pooling1d_5[0][0] 
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
input_7 (InputLayer)            [(None, 91)]         0                                            
__________________________________________________________________________________________________
embedding_6 (Embedding)         (None, 91, 24)       2184        input_7[0][0]                    
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       embedding_6[0][0]                
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
global_average_pooling1d_6 (Glo (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
dense_12 (Dense)                (None, 13)           1677        global_average_pooling1d_6[0][0] 
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           dense_12[0][0]                   
__________________________________________________________________________________________________
dense_13 (Dense)                (None, 1)            129         global_average_pooling1d_6[0][0] 
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
input_8 (InputLayer)            [(None, 91)]         0                                            
__________________________________________________________________________________________________
embedding_7 (Embedding)         (None, 91, 24)       2184        input_8[0][0]                    
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       embedding_7[0][0]                
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
global_average_pooling1d_7 (Glo (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
dense_14 (Dense)                (None, 13)           1677        global_average_pooling1d_7[0][0] 
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           dense_14[0][0]                   
__________________________________________________________________________________________________
dense_15 (Dense)                (None, 1)            129         global_average_pooling1d_7[0][0] 
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
input_9 (InputLayer)            [(None, 91)]         0                                            
__________________________________________________________________________________________________
embedding_8 (Embedding)         (None, 91, 24)       2184        input_9[0][0]                    
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       embedding_8[0][0]                
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
global_average_pooling1d_8 (Glo (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
dense_16 (Dense)                (None, 13)           1677        global_average_pooling1d_8[0][0] 
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           dense_16[0][0]                   
__________________________________________________________________________________________________
dense_17 (Dense)                (None, 1)            129         global_average_pooling1d_8[0][0] 
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 5, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 6, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 7, T: 0, GE: 0.000000, labelled_data: 6051


-----------------------| Started logging at: Jun 23 2021 22:41:55 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 22:42:30 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 22:43:09 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 22:45:22 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 22:45:44 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
input_1 (InputLayer)            [(None, 91)]         0                                            
__________________________________________________________________________________________________
embedding (Embedding)           (None, 91, 24)       2184        input_1[0][0]                    
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       embedding[0][0]                  
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
input_2 (InputLayer)            [(None, 91)]         0                                            
__________________________________________________________________________________________________
embedding_1 (Embedding)         (None, 91, 24)       2184        input_2[0][0]                    
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       embedding_1[0][0]                
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
input_3 (InputLayer)            [(None, 91)]         0                                            
__________________________________________________________________________________________________
embedding_2 (Embedding)         (None, 91, 24)       2184        input_3[0][0]                    
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       embedding_2[0][0]                
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
input_4 (InputLayer)            [(None, 91)]         0                                            
__________________________________________________________________________________________________
embedding_3 (Embedding)         (None, 91, 24)       2184        input_4[0][0]                    
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       embedding_3[0][0]                
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
input_5 (InputLayer)            [(None, 91)]         0                                            
__________________________________________________________________________________________________
embedding_4 (Embedding)         (None, 91, 24)       2184        input_5[0][0]                    
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       embedding_4[0][0]                
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
input_6 (InputLayer)            [(None, 91)]         0                                            
__________________________________________________________________________________________________
embedding_5 (Embedding)         (None, 91, 24)       2184        input_6[0][0]                    
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       embedding_5[0][0]                
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
input_7 (InputLayer)            [(None, 91)]         0                                            
__________________________________________________________________________________________________
embedding_6 (Embedding)         (None, 91, 24)       2184        input_7[0][0]                    
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       embedding_6[0][0]                
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
input_8 (InputLayer)            [(None, 91)]         0                                            
__________________________________________________________________________________________________
embedding_7 (Embedding)         (None, 91, 24)       2184        input_8[0][0]                    
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       embedding_7[0][0]                
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
input_9 (InputLayer)            [(None, 91)]         0                                            
__________________________________________________________________________________________________
embedding_8 (Embedding)         (None, 91, 24)       2184        input_9[0][0]                    
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       embedding_8[0][0]                
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 5, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 6, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 7, T: 0, GE: 0.000000, labelled_data: 6051


-----------------------| Started logging at: Jun 23 2021 22:47:35 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 22:47:49 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 5, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 6, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 7, T: 0, GE: 0.000000, labelled_data: 6051


-----------------------| Started logging at: Jun 23 2021 22:48:56 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 5, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 6, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 7, T: 0, GE: 0.000000, labelled_data: 6051


-----------------------| Started logging at: Jun 23 2021 22:50:58 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 5, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 6, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 7, T: 0, GE: 0.000000, labelled_data: 6051


-----------------------| Started logging at: Jun 23 2021 22:56:15 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
b'{"fact": "1", "i": "2", "catalan_num": "3", "j": "4", "str": "5", "a": "6", "b": "7", "num": "8"}'
b'{"fact": "1", "i": "2", "catalan_num": "3", "j": "4", "str": "5", "a": "6", "b": "7", "num": "8"}'
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 5, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 6, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 7, T: 0, GE: 0.000000, labelled_data: 6051


-----------------------| Started logging at: Jun 23 2021 22:58:27 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
b'{"fact": "1", "i": "2", "catalan_num": "3", "j": "4", "str": "5", "a": "6", "b": "7", "num": "8"}'
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 5, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 6, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 7, T: 0, GE: 0.000000, labelled_data: 6051


-----------------------| Started logging at: Jun 23 2021 23:00:32 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
b'{"fact": "1", "i": "2", "catalan_num": "3", "j": "4", "str": "5", "a": "6", "b": "7", "num": "8"}'
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 5, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 6, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 7, T: 0, GE: 0.000000, labelled_data: 6051


-----------------------| Started logging at: Jun 23 2021 23:01:54 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
b'{"fact": "1", "i": "2", "catalan_num": "3", "j": "4", "str": "5", "a": "6", "b": "7", "num": "8"}'
<class 'bytes'>
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 5, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 6, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 7, T: 0, GE: 0.000000, labelled_data: 6051


-----------------------| Started logging at: Jun 23 2021 23:02:41 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
<class 'bytes'>
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
b'{"fact": "1", "i": "2", "catalan_num": "3", "j": "4", "str": "5", "a": "6", "b": "7", "num": "8"}'
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 5, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 6, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 7, T: 0, GE: 0.000000, labelled_data: 6051


-----------------------| Started logging at: Jun 23 2021 23:05:25 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 5, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 6, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 7, T: 0, GE: 0.000000, labelled_data: 6051


-----------------------| Started logging at: Jun 23 2021 23:05:58 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
<class 'dict'>
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
<class 'dict'>
ORIGINAL_PROGRAM STEP: 0 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++){ 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
<class 'dict'>
ORIGINAL_PROGRAM STEP: 0 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" );} 
[11] else { printf ( "String" );} 
[12] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
<class 'dict'>
ORIGINAL_PROGRAM STEP: 0 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++){ 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 5, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 6, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 7, T: 0, GE: 0.000000, labelled_data: 6051


-----------------------| Started logging at: Jun 23 2021 23:06:52 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++){ 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" );} 
[11] else { printf ( "String" );} 
[12] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++){ 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 5, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 6, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 7, T: 0, GE: 0.000000, labelled_data: 6051


-----------------------| Started logging at: Jun 23 2021 23:16:25 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++){ 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" );} 
[11] else { printf ( "String" );} 
[12] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++){ 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 5, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 6, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 7, T: 0, GE: 0.000000, labelled_data: 6051


-----------------------| Started logging at: Jun 23 2021 23:17:53 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++){ 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" );} 
[11] else { printf ( "String" );} 
[12] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++){ 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 5, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 6, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 7, T: 0, GE: 0.000000, labelled_data: 6051


-----------------------| Started logging at: Jun 23 2021 23:18:39 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++){ 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" );} 
[11] else { printf ( "String" );} 
[12] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
[[15  1 19  2 15 20  2 87 90 50 86 90 51 77  2 34 50 90 70 43 51  2 36 43
  66  2 36 90 52 90 50 90 59 43 51 66 81  2 87 90 50 86 90 58 86 90 58 87
  90 74 43 75 51  2 34 50 90 67 90 74 90 75 51  2 77  9 50 82 58 90 51 66
   2 36 90 74 90 75 66 81  2 90 69 90 55 43 66  2 36 90 50 90 58 90 58 90
  51 66 81  2 86  7 50 51 77  2 86 90 58 90 58 90 66  2 87 90 74 43 75 58
  90 66  2 10 50 82 58 48 90 51 66  2 86 90 74 90 75 66  2 32 50 90 69 43
  66 90 67 43 66 90 56 51 77  2 90 74 90 75 69 50 50 90 50 43 52 90 51 51
  63 90 50 90 51 51 63 90 50 90 55 43 51 66 81  2 32 50 90 69 43 66 90 67
  90 66 90 56 51 77  2 10 50 82 58 48 90 74 90 75 51 66  2 90 69 90 50 90
  74 90 75 58 43 58 90 51 66  2  9 50 82 58 90 51 66 81  2 36 43 66 81  2]]
ORIGINAL_PROGRAM STEP: 0 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++){ 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

[[15  1 19  2 15 18  2 86  7 50 51 77  2 86 90 74 43 75 66  2 86 90 58 90
  58 90 58 90 66  2 10 50 82 58 48 90 51 66  2 32 50 90 69 43 66 90 67 90
  66 90 56 51 77  2 10 50 82 58 48 90 74 90 75 51 66 81  2 10 50 82 58 48
  90 51 66  2 32 50 90 69 43 66 90 67 90 66 90 56 51 77  2 32 50 90 69 90
  55 43 66 90 67 90 66 90 56 51  2 34 50 50 90 74 90 75 55 90 74 90 75 51
  70 90 51 77  2  9 50 82 58 50 90 74 90 75 58 90 74 90 75 51 51 66 81 81
  81  2 36 43 66 81  2]]
Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
[[15  1 19  2 86  7 50 51 77  2 86 90 58 90 58 90 58 90 66  2 10 50 82 58
  48 90 58 48 90 51 66  2 90 69 43 66  2 32 50 90 69 43 66 90 67 69 90 66
  90 69 90 55 43 51 77  2 34 50 90 46 90 70 43 51  2 90 69 90 59 43 66 81
   2 34 50 90 70 90 51 77  2  9 50 82 51 66  2 31 77  9 50 82 51 66 81  2
  36 43 66 81  2]]
Starting worker: 5, T: 0, GE: 0.000000, labelled_data: 6051
Starting worker: 6, T: 0, GE: 0.000000, labelled_data: 6051
[[15  1 19  2 15 20  2 86  7 50 51 77  2 86 90 58 90 58 90 58 90 58 90 66
   2 90 69 43 66  2 10 50 82 58 48 90 51 66  2 32 50 90 69 43 66 90 67 69
  90 66 90 56 51  2 32 50 90 69 43 66 90 67 69 90 59 90 66 90 56 51  2  9
  50 82 51 66  2  9 50 82 51 66  2 32 50 90 69 43 66 90 67 69 43 52 90 59
  43 66 90 56 51  2  9 50 82 51 66  2 90 56 66  2 34 50 90 71 69 43 51  2
   9 50 82 51 66  2  9 50 82 51 66 81  2 34 50 90 59 43 51  2 32 50 90 69
  43 66 90 67 69 43 52 90 59 43 66 90 56 51  2  9 50 82 51 66  2 36 43 66
  81  2]]
Starting worker: 7, T: 0, GE: 0.000000, labelled_data: 6051


-----------------------| Started logging at: Jun 23 2021 23:19:51 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++){ 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" );} 
[11] else { printf ( "String" );} 
[12] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++){ 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 5, T: 2, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: move_right REWARD: -0.005 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 6, T: 3, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 7, T: 4, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf ( "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:Yes, UPDATED_PROGRAM STEP: 2 , ACTION: move_down REWARD: -0.005 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long /*CURSOR*/ fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 3 , ACTION: move_down REWARD: -0.005 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if /*CURSOR*/ ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , TF:No ,UPDATED_PROGRAM  UPDATED_PROGRAMSTEP:  STEP:3  2, ACTION:  , ACTION:insert(  insert;REWARD:  REWARD:-0.030000000000000002  -0.030000000000000002ID:  ID:prog33031_v1 
prog45977{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}

{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11

 [1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7

 


TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 4 , ACTION: move_down REWARD: -0.005 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return /*CURSOR*/ 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
TF:No ,  
UPDATED_PROGRAM
 STEP: 3 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return /*CURSOR*/ i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long /*CURSOR*/ catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num /*CURSOR*/ ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: move_down REWARD: -0.005 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( /*CURSOR*/ int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: delete REWARD: -0.030000000000000002 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int /*CURSOR*/ i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: delete REWARD: -0.030000000000000002 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 10 , ACTION: move_right REWARD: -0.005 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i /*CURSOR*/ , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: move_down REWARD: -0.005 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , /*CURSOR*/ int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] /*CURSOR*/ int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: move_down REWARD: -0.005 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int /*CURSOR*/ n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_down REWARD: -0.005 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int /*CURSOR*/ j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] /*CURSOR*/ int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n /*CURSOR*/ , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: delete REWARD: -0.030000000000000002 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j /*CURSOR*/ , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_down REWARD: -0.005 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n /*CURSOR*/ , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , /*CURSOR*/ long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include <stdio.h> 
[2 ] int main /*CURSOR*/ (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: delete REWARD: -0.030000000000000002 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , /*CURSOR*/ A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 15 , ACTION: move_right REWARD: -0.005 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long /*CURSOR*/ str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include <stdio.h> 
[2 ] int main /*CURSOR*/ (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: move_down REWARD: -0.005 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 16 , ACTION: move_right REWARD: -0.005 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str /*CURSOR*/ [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: move_down REWARD: -0.005 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 17 , ACTION: move_right REWARD: -0.005 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ /*CURSOR*/ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: move_right REWARD: -0.005 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  1615  , ACTION:, ACTION:  insert;insert;  REWARD:REWARD:  -0.030000000000000002-0.030000000000000002  ID:ID:  prog45977prog27879_v1

{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}

[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
  



TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 18 , ACTION: move_right REWARD: -0.005 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 /*CURSOR*/ ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ] /*CURSOR*/ ) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 17 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 20 , ACTION: move_right REWARD: -0.005 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] /*CURSOR*/ if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: 0.97 ID: prog11669
{'fact': '1', 'i': '2', 'catalan_num': '3', 'j': '4', 'str': '5', 'a': '6', 'b': '7', 'num': '8'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: move_down REWARD: -0.005 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: move_down REWARD: -0.005 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: delete REWARD: -0.030000000000000002 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: move_down REWARD: -0.005 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float /*CURSOR*/ h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog33031_v1
{'a': '1', 'i': '2', 'j': '3', 'n': '4', 's': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: move_right REWARD: -0.005 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( /*CURSOR*/ "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
{'m': '1', 'n': '2', 'i': '3', 'count': '4'}
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
{'i': '1', 'j': '2', 'k': '3', 'n': '4', 'ctr': '5'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: move_right REWARD: -0.005 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h /*CURSOR*/ , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
TF:No ,  UPDATED_PROGRAM
 
STEP: 24 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
{'n': '1', 'A': '2', 'i': '3', 'j': '4', 'f': '5', 'k': '6'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( /*CURSOR*/ "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog32785
{'max': '1', 'a': '2', 'b': '3', 'h': '4', 'i': '5', 'j': '6'}
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog17345
{'h': '1', 'w': '2', 'H': '3', 'B': '4'}
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h /*CURSOR*/ , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
{'h': '1', 'm': '2', 'n': '3', 'p': '4', 'k': '5', 'i': '6', 'j': '7', 'l': '8'}
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 



-----------------------| Started logging at: Jun 23 2021 23:21:18 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++){ 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" );} 
[11] else { printf ( "String" );} 
[12] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog24441
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++){ 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog45977
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 5, T: 2, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: move_right REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 6, T: 3, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 7, T: 4, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf ( "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:Yes, UPDATED_PROGRAM STEP: 2 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long /*CURSOR*/ fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 3 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if /*CURSOR*/ ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 4 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return /*CURSOR*/ 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return /*CURSOR*/ i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long /*CURSOR*/ catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num /*CURSOR*/ ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: move_down REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( /*CURSOR*/ int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: delete REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int /*CURSOR*/ i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: delete REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  UPDATED_PROGRAM
 
STEP: 9 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 10 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i /*CURSOR*/ , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  910  , ACTION:, ACTION:  replace;)with);insert;  REWARD:REWARD:  -0.030000000000000002-0.030000000000000002  ID:ID:  prog45977prog33031_v1

[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
  



TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: move_down REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , /*CURSOR*/ int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] /*CURSOR*/ int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  1011  , ACTION:, ACTION:  move_downreplace,with;  REWARD:REWARD:  -0.005-0.030000000000000002  ID:ID:  prog45977prog33031_v1

[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int /*CURSOR*/ n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
  



TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_down REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int /*CURSOR*/ j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] /*CURSOR*/ int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
TF:No ,  
UPDATED_PROGRAM
 STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n /*CURSOR*/ , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: delete REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j /*CURSOR*/ , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n /*CURSOR*/ , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , /*CURSOR*/ long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main /*CURSOR*/ (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: delete REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , /*CURSOR*/ A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 15 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long /*CURSOR*/ str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main /*CURSOR*/ (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: TF:No ,15  UPDATED_PROGRAM, ACTION:  STEP:insert)  14REWARD:  , ACTION:-0.030000000000000002  move_downID:  REWARD:prog33031_v1 -0.005 
ID:[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
  prog45977


[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 16 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str /*CURSOR*/ [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;with, REWARD: -0.030000000000000002 TF:No ,ID:  UPDATED_PROGRAMprog33031_v1 
STEP:[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
  15
 
, ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: move_down REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 17 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ /*CURSOR*/ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: move_right REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
TF:No ,  UPDATED_PROGRAM
 
STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 18 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 /*CURSOR*/ ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ] /*CURSOR*/ ) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 17 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 20 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] /*CURSOR*/ if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: 0.97 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: move_down REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: delete REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 20 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: move_down REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float /*CURSOR*/ h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( /*CURSOR*/ "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 


Keyboard interrupt: stopping training!
TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h /*CURSOR*/ , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( /*CURSOR*/ "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h /*CURSOR*/ , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 



-----------------------| Started logging at: Jun 23 2021 23:22:39 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++){ 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" );} 
[11] else { printf ( "String" );} 
[12] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog24441
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++){ 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog45977
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 5, T: 2, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: move_right REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 6, T: 3, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 7, T: 4, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf ( "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:Yes, UPDATED_PROGRAM STEP: 2 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long /*CURSOR*/ fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 3 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if /*CURSOR*/ ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 4 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return /*CURSOR*/ 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return /*CURSOR*/ i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long /*CURSOR*/ catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num /*CURSOR*/ ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: move_down REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( /*CURSOR*/ int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
TF:No ,  
UPDATED_PROGRAM
 STEP: 8 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: delete REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int /*CURSOR*/ i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: delete REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
TF:No ,  UPDATED_PROGRAM
 
STEP: 9 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 10 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i /*CURSOR*/ , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: move_down REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , /*CURSOR*/ int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] /*CURSOR*/ int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
TF:No ,  
UPDATED_PROGRAM
 STEP: 10 , ACTION: move_down REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int /*CURSOR*/ n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_down REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int /*CURSOR*/ j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] /*CURSOR*/ int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n /*CURSOR*/ , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: delete REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j /*CURSOR*/ , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n /*CURSOR*/ , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , /*CURSOR*/ long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main /*CURSOR*/ (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  1413  , ACTION:, ACTION:  deletemove_right  REWARD:REWARD:  -0.030000000000000002-0.005  ID:ID:  prog33031_v1prog45977

[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , /*CURSOR*/ A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
  



TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 15 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long /*CURSOR*/ str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main /*CURSOR*/ (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: move_down REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 16 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str /*CURSOR*/ [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: move_down REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 17 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ /*CURSOR*/ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: move_right REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 18 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 /*CURSOR*/ ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ] /*CURSOR*/ ) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 20 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] /*CURSOR*/ if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: 0.97 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: move_down REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: delete REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: move_down REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float /*CURSOR*/ h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( /*CURSOR*/ "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h /*CURSOR*/ , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( /*CURSOR*/ "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h /*CURSOR*/ , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 



-----------------------| Started logging at: Jun 23 2021 23:30:46 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++){ 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" );} 
[11] else { printf ( "String" );} 
[12] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog24441
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++){ 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog45977
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 5, T: 2, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: move_right REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 6, T: 3, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 7, T: 4, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf ( "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:Yes, UPDATED_PROGRAM STEP: 2 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long /*CURSOR*/ fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
TF:No ,  
UPDATED_PROGRAM
 STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 3 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if /*CURSOR*/ ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAMTF:No ,  STEP:UPDATED_PROGRAM  3STEP:  , ACTION:2  insert(, ACTION:  REWARD:insert;  -0.030000000000000002REWARD:  ID:-0.030000000000000002  prog33031_v1ID:
 [1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
prog45977 

[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7

 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 4 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return /*CURSOR*/ 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , TF:No ,UPDATED_PROGRAM  STEP: UPDATED_PROGRAM STEP: 34  , ACTION:, ACTION:  insert; insert} REWARD:REWARD: -0.030000000000000002  -0.030000000000000002 ID: prog33031_v1ID:
 [1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
prog45977
 [1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7

 


TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return /*CURSOR*/ i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 5 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long /*CURSOR*/ catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num /*CURSOR*/ ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: move_down REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
TF:No ,  
UPDATED_PROGRAM
 STEP: 6 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( /*CURSOR*/ int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
TF:No ,  UPDATED_PROGRAM
 
STEP: 7 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: delete REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int /*CURSOR*/ i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: delete REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 9 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 10 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i /*CURSOR*/ , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: move_down REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , /*CURSOR*/ int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] /*CURSOR*/ int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  1110  , ACTION:, ACTION:  replace,with;move_down  REWARD:REWARD:  -0.030000000000000002-0.005  ID:ID:  prog33031_v1prog45977

[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int /*CURSOR*/ n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
  



TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_down REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int /*CURSOR*/ j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] /*CURSOR*/ int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n /*CURSOR*/ , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: delete REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j /*CURSOR*/ , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: TF:No ,insert{  UPDATED_PROGRAMREWARD:  STEP:-0.030000000000000002  12ID:  , ACTION:prog33031_v1 
insert{[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
  REWARD:
 
-0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n /*CURSOR*/ , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , /*CURSOR*/ long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main /*CURSOR*/ (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: delete REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , /*CURSOR*/ A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 15 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long /*CURSOR*/ str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main /*CURSOR*/ (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: move_down REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  UPDATED_PROGRAM
 
STEP: 15 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 16 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str /*CURSOR*/ [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , TF:No ,UPDATED_PROGRAM  UPDATED_PROGRAMSTEP:  STEP: 1516  , ACTION:, ACTION:  insert;replace;with,  REWARD:REWARD:  -0.030000000000000002-0.030000000000000002  ID:ID: TF:No , prog45977 prog33031_v1UPDATED_PROGRAM
 
STEP:[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
  [1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11

14 

 
, ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: move_down REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 17 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ /*CURSOR*/ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No ,TF:No ,TF:No ,  UPDATED_PROGRAM  UPDATED_PROGRAMSTEP:  STEP:16 UPDATED_PROGRAM15   , ACTION:, ACTION: STEP:insert;  17REWARD:   insert;-0.030000000000000002 , ACTION:REWARD:  ID:-0.030000000000000002   prog27879_v1ID:move_right 
prog45977 [1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

REWARD: 
-0.005[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
  

ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 18 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 /*CURSOR*/ ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 18 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ] /*CURSOR*/ ) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  1918  , ACTION:, ACTION:  insert)insert;  REWARD:REWARD:  -0.030000000000000002-0.030000000000000002  ID:ID:  prog33031_v1prog45977

[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
  



TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 20 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  2019  , ACTION:, ACTION:  insert(insert{  REWARD:REWARD:  -0.030000000000000002-0.030000000000000002  ID:ID:  prog33031_v1prog45977

[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
  



TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] /*CURSOR*/ if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  2120  , ACTION:, ACTION:  insert}insert{  REWARD:REWARD:  -0.030000000000000002-0.030000000000000002  ID:ID:  prog33031_v1prog45977

[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
  



TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: 0.97 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: move_down REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: delete REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 22 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
TF:No ,  
UPDATED_PROGRAM
 STEP: 22 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: move_down REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float /*CURSOR*/ h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( /*CURSOR*/ "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h /*CURSOR*/ , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( /*CURSOR*/ "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h /*CURSOR*/ , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 



-----------------------| Started logging at: Jun 23 2021 23:34:56 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 23:37:54 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 23:40:18 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 23:40:51 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 23:41:08 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 23 2021 23:41:57 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8


-----------------------| Started logging at: Jun 23 2021 23:42:42 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8


-----------------------| Started logging at: Jun 23 2021 23:42:56 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1


-----------------------| Started logging at: Jun 23 2021 23:52:27 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None


Done training! Initializing last evaluation - 



-----------------------| Started logging at: Jun 23 2021 23:54:00 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++){ 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" );} 
[11] else { printf ( "String" );} 
[12] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog24441
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++){ 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog45977
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 5, T: 2, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: move_right REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 6, T: 3, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 7, T: 4, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf ( "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:Yes, UPDATED_PROGRAM STEP: 2 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long /*CURSOR*/ fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 3 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if /*CURSOR*/ ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 4 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return /*CURSOR*/ 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return /*CURSOR*/ i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long /*CURSOR*/ catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num /*CURSOR*/ ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: move_down REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( /*CURSOR*/ int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: delete REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int /*CURSOR*/ i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: delete REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 10 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i /*CURSOR*/ , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: move_down REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , /*CURSOR*/ int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] /*CURSOR*/ int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: move_down REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int /*CURSOR*/ n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_down REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int /*CURSOR*/ j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] /*CURSOR*/ int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
TF:No ,  
UPDATED_PROGRAM
 STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n /*CURSOR*/ , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: delete REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j /*CURSOR*/ , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  1312  , ACTION:, ACTION: insert{  REWARD:insert{  -0.030000000000000002REWARD:  ID:-0.030000000000000002  prog33031_v1ID:
 [1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
prog45977 

[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n /*CURSOR*/ , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7

 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , /*CURSOR*/ long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main /*CURSOR*/ (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , /*CURSOR*/ A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 14 , ACTION: delete REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 15 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long /*CURSOR*/ str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main /*CURSOR*/ (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: move_down REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 15 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 16 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str /*CURSOR*/ [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
TF:No ,  
UPDATED_PROGRAM
 STEP: 15 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: move_down REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, TF:No ,UPDATED_PROGRAM  UPDATED_PROGRAMSTEP:  STEP:17  15, ACTION:  , ACTION:move_right  replace,with;REWARD:  REWARD:-0.005  -0.030000000000000002ID:  ID:prog11669 
prog32785[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ /*CURSOR*/ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7

 [1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12

 


TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: move_right REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:Yes, UPDATED_PROGRAM STEP: 18 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 /*CURSOR*/ ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  1817  , ACTION:, ACTION:  insert(insert{  REWARD:REWARD:  -0.030000000000000002-0.030000000000000002  ID:ID:  prog33031_v1prog45977

[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
  



TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:Yes, UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ] /*CURSOR*/ ) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  1918  , ACTION:, ACTION:  insert)insert;  REWARD:REWARD:  -0.030000000000000002-0.030000000000000002  ID:ID:  prog33031_v1prog45977

[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
  



TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:Yes, UPDATED_PROGRAM STEP: 20 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  1920  , ACTION:, ACTION:  insert{insert(  REWARD:REWARD:  -0.030000000000000002-0.030000000000000002  ID:ID:  prog45977prog33031_v1

[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
  



TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:Yes, UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] /*CURSOR*/ if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  2021  , ACTION:, ACTION:  insert{insert}  REWARD:REWARD:  -0.030000000000000002-0.030000000000000002  ID:ID: prog33031_v1 
prog45977[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11

 [1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7

 


TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:Yes, UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: 0.97 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: move_down REWARD: -0.005 ID:TF:No ,  prog33031_v1UPDATED_PROGRAM
 [1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
STEP:  
21
 , ACTION: delete REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  2122  , ACTION:, ACTION:  move_rightinsert)  REWARD:REWARD:  -0.005-0.030000000000000002  ID:ID:  prog27879_v1prog45977

[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
  



TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: move_down REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float /*CURSOR*/ h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( /*CURSOR*/ "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  UPDATED_PROGRAM
 
STEP: 22 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h /*CURSOR*/ , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( /*CURSOR*/ "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h /*CURSOR*/ , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 



-----------------------| Started logging at: Jun 23 2021 23:55:21 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++){ 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" );} 
[11] else { printf ( "String" );} 
[12] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog24441
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++){ 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog45977
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 5, T: 2, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: move_right REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 6, T: 3, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 7, T: 4, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf ( "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:Yes, UPDATED_PROGRAM STEP: 2 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long /*CURSOR*/ fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 3 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if /*CURSOR*/ ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 4 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return /*CURSOR*/ 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return /*CURSOR*/ i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long /*CURSOR*/ catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num /*CURSOR*/ ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: move_down REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( /*CURSOR*/ int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: delete REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int /*CURSOR*/ i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: delete REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 10 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i /*CURSOR*/ , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
TF:No ,  
UPDATED_PROGRAM
 STEP: 8 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: move_down REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , /*CURSOR*/ int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] /*CURSOR*/ int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: move_down REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int /*CURSOR*/ n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_down REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int /*CURSOR*/ j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] /*CURSOR*/ int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n /*CURSOR*/ , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: delete REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j /*CURSOR*/ , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n /*CURSOR*/ , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , /*CURSOR*/ long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main /*CURSOR*/ (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: delete REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , /*CURSOR*/ A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 15 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long /*CURSOR*/ str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main /*CURSOR*/ (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: move_down REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 16 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str /*CURSOR*/ [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: move_down REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 17 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ /*CURSOR*/ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: move_right REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 18 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 /*CURSOR*/ ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ] /*CURSOR*/ ) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 20 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] /*CURSOR*/ if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
TF:No ,  
UPDATED_PROGRAM
 STEP: 19 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: 0.97 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: move_down REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: delete REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: move_down REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float /*CURSOR*/ h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( /*CURSOR*/ "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h /*CURSOR*/ , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( /*CURSOR*/ "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h /*CURSOR*/ , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 



-----------------------| Started logging at: Jun 24 2021 00:23:32 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++){ 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" );} 
[11] else { printf ( "String" );} 
[12] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog24441
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++){ 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog45977
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 5, T: 2, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: move_right REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 6, T: 3, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 7, T: 4, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf ( "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:Yes, UPDATED_PROGRAM STEP: 2 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long /*CURSOR*/ fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 3 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if /*CURSOR*/ ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 4 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return /*CURSOR*/ 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return /*CURSOR*/ i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
TF:No ,  UPDATED_PROGRAM
 
STEP: 4 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long /*CURSOR*/ catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
TF:No ,  UPDATED_PROGRAM
 
STEP: 5 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num /*CURSOR*/ ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: move_down REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( /*CURSOR*/ int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: delete REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int /*CURSOR*/ i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: delete REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  UPDATED_PROGRAM
 
STEP: 9 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 10 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i /*CURSOR*/ , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  109  , ACTION:, ACTION:  insert;replace;)with);  REWARD:REWARD:  -0.030000000000000002-0.030000000000000002  ID:ID:  prog33031_v1prog45977

[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
  



TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: move_down REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , /*CURSOR*/ int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] /*CURSOR*/ int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 11TF:No ,  , ACTION:UPDATED_PROGRAM  replace,with;STEP:  REWARD:10  -0.030000000000000002, ACTION:  ID:move_down  prog33031_v1REWARD:
 [1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
-0.005  
ID:
 prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int /*CURSOR*/ n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_down REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int /*CURSOR*/ j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] /*CURSOR*/ int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n /*CURSOR*/ , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  UPDATED_PROGRAM
 
STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: delete REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j /*CURSOR*/ , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n /*CURSOR*/ , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , /*CURSOR*/ long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main /*CURSOR*/ (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , /*CURSOR*/ A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: delete REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 15 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long /*CURSOR*/ str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main /*CURSOR*/ (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: move_down REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
TF:No ,  UPDATED_PROGRAM
 
STEP: 13 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 16 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str /*CURSOR*/ [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
TF:No ,  
UPDATED_PROGRAM
 STEP: 14 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: move_down REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 17 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ /*CURSOR*/ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  1517  , ACTION:, ACTION:  insert;move_right  REWARD:REWARD:  -0.030000000000000002-0.005  ID:ID:  prog27879_v1prog33031_v1

[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
  



TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 18 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 /*CURSOR*/ ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
TF:No ,  UPDATED_PROGRAM
 
STEP: 18 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ] /*CURSOR*/ ) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 20 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] /*CURSOR*/ if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: 0.97 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: delete REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: move_down REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
TF:No ,  
UPDATED_PROGRAM
 STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: move_down REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float /*CURSOR*/ h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( /*CURSOR*/ "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
TF:No ,  
UPDATED_PROGRAM
 STEP: 22 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h /*CURSOR*/ , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( /*CURSOR*/ "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h /*CURSOR*/ , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 



-----------------------| Started logging at: Jun 24 2021 00:24:57 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++){ 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" );} 
[11] else { printf ( "String" );} 
[12] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog24441
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++){ 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog45977
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 5, T: 2, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: move_right REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 6, T: 3, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 7, T: 4, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf ( "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:Yes, UPDATED_PROGRAM STEP: 2 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long /*CURSOR*/ fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 3 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if /*CURSOR*/ ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 4 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return /*CURSOR*/ 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return /*CURSOR*/ i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long /*CURSOR*/ catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num /*CURSOR*/ ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: move_down REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( /*CURSOR*/ int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: delete REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int /*CURSOR*/ i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: delete REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 10 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i /*CURSOR*/ , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: move_down REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , /*CURSOR*/ int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] /*CURSOR*/ int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: move_down REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int /*CURSOR*/ n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_down REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int /*CURSOR*/ j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] /*CURSOR*/ int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n /*CURSOR*/ , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: delete REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j /*CURSOR*/ , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n /*CURSOR*/ , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , /*CURSOR*/ long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main /*CURSOR*/ (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , /*CURSOR*/ A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 14 , ACTION: delete REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 15 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long /*CURSOR*/ str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main /*CURSOR*/ (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: move_down REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 16 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str /*CURSOR*/ [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: move_down REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 17 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ /*CURSOR*/ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: move_right REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 18 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 /*CURSOR*/ ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ] /*CURSOR*/ ) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 20 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] /*CURSOR*/ if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: 0.97 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: move_down REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: delete REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: move_down REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float /*CURSOR*/ h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( /*CURSOR*/ "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 22 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h /*CURSOR*/ , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( /*CURSOR*/ "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 23 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h /*CURSOR*/ , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 



-----------------------| Started logging at: Jun 24 2021 00:30:00 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++){ 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" );} 
[11] else { printf ( "String" );} 
[12] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog24441
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++){ 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog45977
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 5, T: 2, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: move_right REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 6, T: 3, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 7, T: 4, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf ( "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:Yes, UPDATED_PROGRAM STEP: 2 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long /*CURSOR*/ fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:Yes, UPDATED_PROGRAM STEP: 3 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if /*CURSOR*/ ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:Yes, UPDATED_PROGRAM STEP: 4 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return /*CURSOR*/ 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:Yes, UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return /*CURSOR*/ i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:Yes, UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long /*CURSOR*/ catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:Yes, UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num /*CURSOR*/ ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: move_down REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No ,TF:Yes, UPDATED_PROGRAM STEP:  UPDATED_PROGRAM 6STEP:  , ACTION:8 insert(  , ACTION:REWARD: move_right REWARD:  -0.030000000000000002-0.005  ID: ID:prog17345 
prog11669[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17

 [1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( /*CURSOR*/ int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7

 


TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: delete REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  97  , ACTION:, ACTION:  move_rightdelete  REWARD:REWARD:  -0.005-0.030000000000000002  ID:ID:  prog11669prog17345

[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int /*CURSOR*/ i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
  



TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
TF:No ,  
UPDATED_PROGRAM
 STEP: 8 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 10 , ACTION: move_right REWARD: -0.005 ID: prog11669TF:No ,
 [1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i /*CURSOR*/ , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
UPDATED_PROGRAM  
STEP:
 8 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: move_down REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:Yes, UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , /*CURSOR*/ int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] /*CURSOR*/ int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: move_down REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int /*CURSOR*/ n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  UPDATED_PROGRAM
 
STEP: 11 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_down REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] /*CURSOR*/ int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:Yes, UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int /*CURSOR*/ j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n /*CURSOR*/ , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: delete REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:Yes, UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j /*CURSOR*/ , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  1312  , ACTION:, ACTION:  insert{insert{  REWARD:REWARD:  -0.030000000000000002-0.030000000000000002  ID:ID:  prog33031_v1prog45977

[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n /*CURSOR*/ , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
  



TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main /*CURSOR*/ (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:Yes, UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , /*CURSOR*/ long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , /*CURSOR*/ A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 14 , ACTION: delete REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main /*CURSOR*/ (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
TF:Yes,  
UPDATED_PROGRAM
 STEP: 15 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long /*CURSOR*/ str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: move_down REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:Yes, UPDATED_PROGRAM STEP: 16 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str /*CURSOR*/ [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: move_down REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:Yes,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  1715  , ACTION:, ACTION:  move_rightreplace,with;  REWARD:REWARD:  -0.005-0.030000000000000002  ID:ID:  prog11669prog17345

[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ /*CURSOR*/ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: move_right REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
TF:Yes,  UPDATED_PROGRAM
 STEP:
 18 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 /*CURSOR*/ ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:Yes, UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ] /*CURSOR*/ ) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 19 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:Yes, UPDATED_PROGRAM STEP: 20 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
TF:No ,  UPDATED_PROGRAM
 
STEP: 19 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:Yes, UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] /*CURSOR*/ if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:Yes, UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: 0.97 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

TF:No , UPDATED_PROGRAM TF:No ,STEP:  UPDATED_PROGRAM22  STEP:, ACTION:  21move_down  , ACTION:REWARD:  delete-0.005  REWARD:ID:  -0.030000000000000002prog33031_v1 
ID:[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
  prog45977


[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

([[3, 1, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 1, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 1, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 1, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 1, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 1, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 1, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 1, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 1, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 1, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 1, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 1, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 1, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 1, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 1, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 1, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 1, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 1, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 1, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 1, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 1, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 1, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2]], array([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]), [[3, 4, 2, 3, 1, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 1, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 1, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 1, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 1, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 1, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 1, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 1, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 1, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 1, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 1, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 1, 17, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 1, 15, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 1, 67, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 1, 18, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 1, 7, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 1, 8, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 1, 9, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 1, 21, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 1, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 2, 1, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2], [3, 4, 2, 3, 55, 2, 67, 6, 19, 5, 14, 21, 11, 2, 27, 19, 14, 42, 8, 21, 2, 30, 8, 13, 2, 30, 14, 70, 6, 19, 14, 39, 8, 21, 13, 12, 2, 67, 16, 19, 5, 14, 15, 5, 17, 15, 67, 18, 7, 8, 9, 21, 11, 1, 2, 27, 19, 14, 24, 18, 7, 17, 9, 21, 2, 11, 36, 19, 34, 15, 17, 21, 13, 2, 30, 18, 7, 17, 9, 13, 12, 2, 17, 10, 17, 26, 8, 13, 2, 30, 16, 19, 14, 15, 17, 15, 18, 21, 13, 12, 2, 5, 31, 19, 21, 11, 2, 5, 20, 15, 14, 15, 17, 13, 2, 67, 18, 7, 8, 9, 15, 22, 13, 2, 33, 19, 34, 15, 35, 20, 21, 13, 2, 5, 29, 7, 20, 9, 13, 2, 23, 19, 17, 10, 8, 13, 17, 24, 8, 13, 17, 25, 21, 11, 2, 18, 7, 17, 9, 10, 19, 19, 6, 19, 8, 70, 17, 21, 21, 72, 6, 19, 17, 21, 21, 72, 6, 19, 17, 26, 8, 21, 13, 12, 2, 23, 19, 14, 10, 8, 13, 14, 24, 20, 13, 14, 25, 21, 11, 2, 33, 19, 34, 15, 35, 29, 7, 14, 9, 21, 13, 2, 22, 10, 16, 19, 29, 7, 14, 9, 15, 8, 15, 18, 21, 13, 2, 36, 19, 34, 15, 22, 21, 13, 12, 2, 30, 8, 13, 12, 2]], array([-0.005, -0.005, -0.005, -0.005, -0.005, -0.005, -0.005, -0.005,
       -0.005, -0.005, -0.005, -0.005, -0.005, -0.005, -0.005, -0.005,
       -0.005, -0.005, -0.005, -0.005, -0.005,  0.97 ]), array([-0.0007107, -0.0007107, -0.0007107, -0.0007107, -0.0007107,
       -0.0007107, -0.0007107, -0.0007107, -0.0007107, -0.0007107,
       -0.0007107, -0.0007107, -0.0007107, -0.0007107, -0.0007107,
       -0.0007107, -0.0007107, -0.0007107, -0.0007107, -0.0007107,
       -0.0007107, -0.0007107], dtype=float32))
TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: move_down REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float /*CURSOR*/ h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No ,TF:No , UPDATED_PROGRAM  UPDATED_PROGRAMSTEP:  STEP:23  24, ACTION:  , ACTION:move_right REWARD:  replace;)with);-0.005  REWARD:ID:  -0.030000000000000002prog45977 
ID: [1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( /*CURSOR*/ "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
prog33031_v1 

[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11

 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h /*CURSOR*/ , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  2423  , ACTION:, ACTION:  insert;insert;  REWARD:REWARD:  -0.030000000000000002-0.030000000000000002  ID:ID:  prog45977prog27879_v1

[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( /*CURSOR*/ "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
  



TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h /*CURSOR*/ , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 



-----------------------| Started logging at: Jun 24 2021 00:34:07 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 8 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 8
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Model: "model_2"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_4 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_5 (LSTM)                   (None, 91, 128)      131584      lstm_4[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_5[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_2 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_3"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_6 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_7 (LSTM)                   (None, 91, 128)      131584      lstm_6[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_7[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_3 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_4"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_8 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_9 (LSTM)                   (None, 91, 128)      131584      lstm_8[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_9[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_4 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_5"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_10 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_11 (LSTM)                  (None, 91, 128)      131584      lstm_10[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_11[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_5 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_6"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_12 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_13 (LSTM)                  (None, 91, 128)      131584      lstm_12[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_13[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_6 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_7"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_14 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_15 (LSTM)                  (None, 91, 128)      131584      lstm_14[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_15[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_7 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Model: "model_8"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_16 (LSTM)                  (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_17 (LSTM)                  (None, 91, 128)      131584      lstm_16[0][0]                    
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_17[0][0]                    
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_8 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']
Starting worker: 1, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++){ 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 2, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" );} 
[11] else { printf ( "String" );} 
[12] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog24441
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 3, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++){ 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 4, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog45977
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

Starting worker: 5, T: 2, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: move_right REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

Starting worker: 6, T: 3, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

Starting worker: 7, T: 4, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf ( "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:Yes, UPDATED_PROGRAM STEP: 2 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long /*CURSOR*/ fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  UPDATED_PROGRAM
 
STEP: 2 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 3 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if /*CURSOR*/ ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  32  , ACTION:, ACTION:  insert(insert;  REWARD:REWARD:  -0.030000000000000002-0.030000000000000002  ID:ID:  prog33031_v1prog45977

[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
  



TF:No , UPDATED_PROGRAM STEP: 1 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 4 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return /*CURSOR*/ 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
TF:No ,  UPDATED_PROGRAM
 
STEP: 3 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 2 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return /*CURSOR*/ i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  UPDATED_PROGRAM
 
STEP: 5 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 3 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long /*CURSOR*/ catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] int main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  65  , ACTION:, ACTION:  insert{insert)  REWARD:REWARD:  -0.030000000000000002-0.030000000000000002 ID:  ID: prog45977
prog33031_v1
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
  



TF:No , UPDATED_PROGRAM STEP: 4 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num /*CURSOR*/ ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 7 , ACTION: move_down REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 5 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( /*CURSOR*/ int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  UPDATED_PROGRAM
 
STEP: 8 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 6 , ACTION: delete REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int /*CURSOR*/ i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: delete REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 9 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 7 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 10 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i /*CURSOR*/ , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
TF:No ,  UPDATED_PROGRAM
 
STEP: 9 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 8 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ int main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: move_down REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , /*CURSOR*/ int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] /*CURSOR*/ int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , TF:No ,UPDATED_PROGRAM  UPDATED_PROGRAMSTEP:  STEP:11  10, ACTION:  , ACTION:replace,with;  move_downREWARD:  REWARD:-0.030000000000000002  -0.005ID:  ID:prog33031_v1 
prog45977[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <math.h> 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11

[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int /*CURSOR*/ n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
  



TF:No , UPDATED_PROGRAM STEP: 9 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_down REWARD: -0.005 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int /*CURSOR*/ j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] /*CURSOR*/ int max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n /*CURSOR*/ , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 10 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: delete REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j /*CURSOR*/ , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  1312  , ACTION:, ACTION:  insert{insert{  REWARD:REWARD:  -0.030000000000000002-0.030000000000000002  ID:ID:  prog33031_v1prog45977

[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n /*CURSOR*/ , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
  



TF:No , UPDATED_PROGRAM STEP: 11 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , /*CURSOR*/ long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main /*CURSOR*/ (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  1413  , ACTION:, ACTION:  deletemove_right  REWARD:REWARD:  -0.030000000000000002-0.005  ID:ID:  prog33031_v1prog45977

[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , /*CURSOR*/ A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
  



TF:No , UPDATED_PROGRAM STEP: 12 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 15 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long /*CURSOR*/ str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main /*CURSOR*/ (){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: move_down REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 13 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 16 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str /*CURSOR*/ [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> /*CURSOR*/ 
[3 ] int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 14 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: move_down REWARD: -0.005 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 17 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ /*CURSOR*/ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: replace,with; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: move_right REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 15 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: replace.with; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 18 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 /*CURSOR*/ ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 16 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ] /*CURSOR*/ ) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 17 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 20 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 18 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
TF:No ,  
UPDATED_PROGRAM
 STEP: 18 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> /*CURSOR*/ 
[2 ] #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] /*CURSOR*/ if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ max ( int a , int b ){ 
[4 ] if ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 19 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] /*CURSOR*/ int main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , TF:No ,UPDATED_PROGRAM  UPDATED_PROGRAMSTEP:  STEP:19  20, ACTION:  , ACTION:move_right  insert{REWARD:  REWARD:-0.005  -0.030000000000000002ID:  ID:prog27879_v1 
prog45977[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5

 [1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7

 


TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: 0.97 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: move_down REWARD: -0.005 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 20 , ACTION: insert} REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: move_down REWARD: -0.005 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: delete REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No ,TF:No ,  UPDATED_PROGRAMUPDATED_PROGRAM  STEP:STEP:  2022  , ACTION:, ACTION:  replace.with;insert{  REWARD:REWARD:  -0.030000000000000002-0.030000000000000002  ID:ID:  prog27879_v1prog24441

[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
  



TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: delete REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

[[0.         0.69064755]
 [0.         0.70267078]
 [0.         0.71481546]
 [0.         0.72708281]
 [0.         0.73947407]
 [0.         0.7519905 ]
 [1.         0.76463336]
 [1.         0.77740392]
 [1.         0.79030348]
 [1.         0.80333334]
 [1.         0.81649481]
 [1.         0.82978923]
 [1.         0.84321793]
 [1.         0.85678228]
 [1.         0.87048364]
 [1.         0.8843234 ]
 [1.         0.89830295]
 [1.         0.91242371]
 [1.         0.92668711]
 [1.         0.94109458]
 [1.         0.95564758]
 [2.         0.97034758]]
TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main ( /*CURSOR*/ ){ 
[3 ] float h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf /*CURSOR*/ ( "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert( REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert) REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: move_down REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float /*CURSOR*/ h , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog33031_v1
[1 ] #include <stdio.h> 
[2 ] #include <math.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int a [ 0 ]; 
[5 ] int i , j , n , s ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i < n ; i ++){ 
[8 ] scanf ( "String" ,& a [ i ]);} 
[9 ] scanf ( "String" ,& s ); 
[10] for ( i = 0 ; i < n ; i ++){ 
[11] for ( j = i + 0 ; j < n ; j ++) 
[12] if (( a [ i ]+ a [ j ])== s ){ 
[13] printf ( "String" ,( a [ i ], a [ j ]));}}} 
[14] return 0 ;}
ERRORS:
11
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: move_right REWARD: -0.005 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( /*CURSOR*/ "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;)with); REWARD: -0.030000000000000002 ID: prog24441
[1 ] #include <stdio.h> 
[2 ] int /*CURSOR*/ main (){ 
[3 ] int m , n , i , count ; 
[4 ] scanf ( "String" ,& m ,& n ); 
[5 ] count = 0 ; 
[6 ] for ( i = 0 ; i <= n ; i = i + 0 ){ 
[7 ] if ( n % i == 0 ) 
[8 ] count = count - 0 ;} 
[9 ] if ( count == m ){ 
[10] printf ( "String" ); 
[11] else { printf ( "String" );} 
[12] return 0 ;}
ERRORS:
10
 

TF:No , UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog34248_v1
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int /*CURSOR*/ main (){ 
[4 ] int i , j , k , n , ctr ; 
[5 ] ctr = 0 ; 
[6 ] scanf ( "String" ,& n ); 
[7 ] for ( i = 0 ; i <= n ; i ++) 
[8 ] for ( j = 0 ; j <= n - i ; j ++) 
[9 ] printf ( "String" ); 
[10] printf ( "String" ); 
[11] for ( k = 0 ; k <= 0 * ctr - 0 ; k ++) 
[12] printf ( "String" ); 
[13] ctr ++; 
[14] if ( ctr >= 0 ) 
[15] printf ( "String" ); 
[16] printf ( "String" );} 
[17] if ( n - 0 ) 
[18] for ( i = 0 ; i <= 0 * n - 0 ; i ++) 
[19] printf ( "String" ); 
[20] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert{ REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: move_right REWARD: -0.005 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h /*CURSOR*/ , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog45977
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] int n , A [ 0 ], i , j , f = 0 , k = 0 ; 
[4 ] scanf ( /*CURSOR*/ "String" ,& n ); 
[5 ] for ( i = 0 ; i < n ; i ++){ 
[6 ] scanf ( "String" ,& A [ i ]);} 
[7 ] for ( i = 0 ; i < n ; i ++){{ 
[8 ] for ( j = i ; j < n ; j ++){ 
[9 ] if ( A [ j ]== A [ i ]) 
[10] f ++;} 
[11] if ( f != A [ i ]){ 
[12] k ++; 
[13] break ;}} 
[14] if ( k ) 
[15] printf ( "String" ); 
[16] else 
[17] printf ( "String" ); 
[18] return 0 ;}
ERRORS:
7
 

TF:No , UPDATED_PROGRAM STEP: 23 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert, REWARD: -0.030000000000000002 ID: prog32785
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] int max ( int a , int b ){ 
[4 ] if /*CURSOR*/ ( a < b ) 
[5 ] return b ; 
[6 ] else 
[7 ] return a ;} 
[8 ] int main (){ 
[9 ] int h ; 
[10] scanf ( "String" ,& h ); 
[11] int i , j ; 
[12] for ( i = 0 ; i <= h ; i ++){{ 
[13] printf ( "String" ); 
[14] for ( j = 0 ; j <= max ( h - i , i )- 0 ; j ++){ 
[15] printf ( "String" );} 
[16] printf ( "String" );} 
[17] return 0 ;}
ERRORS:
12
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: replace;with, REWARD: -0.030000000000000002 ID: prog17345
[1 ] #include <stdio.h> 
[2 ] int main (){ 
[3 ] float h /*CURSOR*/ , w ; 
[4 ] scanf ( "String" ,& h ,& w ); 
[5 ] float H = h / 0 ; 
[6 ] float B =( w /( H * H )); 
[7 ] if ( B < 0 ){ printf ( "String" , H , w , B ); 
[8 ] printf ( "String" );} 
[9 ] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[10] printf ( "String" );} 
[11] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[12] printf ( "String" );} 
[13] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[14] printf ( "String" );} 
[15] if ( B >= 0 && B < 0 ){ printf ( "String" , H , w , B ); 
[16] printf ( "String" );} 
[17] if ( B >= 0 ){{ printf ( "String" , H , w , B ); 
[18] printf ( "String" );} 
[19] return 0 ;}
ERRORS:
17
 

TF:No , UPDATED_PROGRAM STEP: 24 , ACTION: insert; REWARD: -0.030000000000000002 ID: prog27879_v1
[1 ] #include <stdio.h> 
[2 ] /*CURSOR*/ #include <stdlib.h> 
[3 ] int main (){ 
[4 ] int h , m , n , p ; 
[5 ] scanf "String" ,& h ); 
[6 ] int k , i , j , l ; 
[7 ] k =( h + 0 )/ 0 ; 
[8 ] for ( i = k ; i >= 0 ; i --){ 
[9 ] for ( l = i - 0 ; l >= 0 ; l --){ 
[10] printf ( "String" );} 
[11] for ( j = i ; j <= k ; j ++){ 
[12] printf ( "String" , j % 0 );} 
[13] printf ( "String" );} 
[14] for ( m = k - 0 ; m >= 0 ; m --){ 
[15] for ( p = 0 ; p <= k - m - 0 ; p ++){ 
[16] printf ( "String" );} 
[17] for ( n = p ; n <= k - 0 ; n ++){ 
[18] printf ( "String" , n % 0 );} 
[19] printf ( "String" );} 
[20] return 0 ;}
ERRORS:
5
 



-----------------------| Started logging at: Jun 24 2021 00:37:46 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 1 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 1
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']
TF:Yes, UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 2 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long /*CURSOR*/ fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 3 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if /*CURSOR*/ ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 4 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return /*CURSOR*/ 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return /*CURSOR*/ i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long /*CURSOR*/ catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num /*CURSOR*/ ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( /*CURSOR*/ int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int /*CURSOR*/ i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 10 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i /*CURSOR*/ , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , /*CURSOR*/ int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int /*CURSOR*/ j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j /*CURSOR*/ , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , /*CURSOR*/ long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 15 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long /*CURSOR*/ str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 16 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str /*CURSOR*/ [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 17 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ /*CURSOR*/ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 18 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 /*CURSOR*/ ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ] /*CURSOR*/ ) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 20 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] /*CURSOR*/ if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: 0.97 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

[[0.         0.68990727]
 [0.         0.7019305 ]
 [0.         0.71407518]
 [0.         0.72634254]
 [0.         0.7387338 ]
 [0.         0.75125023]
 [1.         0.76389309]
 [1.         0.77666365]
 [1.         0.78956321]
 [1.         0.80259307]
 [1.         0.81575454]
 [1.         0.82904896]
 [1.         0.84247766]
 [1.         0.85604201]
 [1.         0.86974337]
 [1.         0.88358313]
 [1.         0.89756268]
 [1.         0.91168344]
 [1.         0.92594684]
 [1.         0.94035431]
 [1.         0.95490731]
 [2.         0.96960731]]


-----------------------| Started logging at: Jun 24 2021 00:43:21 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 1 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 1
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']
TF:Yes, UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 2 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long /*CURSOR*/ fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 3 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if /*CURSOR*/ ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 4 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return /*CURSOR*/ 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return /*CURSOR*/ i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long /*CURSOR*/ catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num /*CURSOR*/ ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( /*CURSOR*/ int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int /*CURSOR*/ i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 10 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i /*CURSOR*/ , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , /*CURSOR*/ int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int /*CURSOR*/ j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j /*CURSOR*/ , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , /*CURSOR*/ long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 15 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long /*CURSOR*/ str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 16 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str /*CURSOR*/ [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 17 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ /*CURSOR*/ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 18 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 /*CURSOR*/ ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ] /*CURSOR*/ ) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 20 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] /*CURSOR*/ if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: 0.97 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

[[15  1 19 ... 66 81  2]
 [15 19  2 ... 66 81  2]
 [15 19  2 ... 66 81  2]
 ...
 [15 19  2 ... 66 81  2]
 [15 19  2 ... 66 81  2]
 [15 19  2 ... 66 81  2]]
[[0.         0.69057031]
 [0.         0.70259355]
 [0.         0.71473822]
 [0.         0.72700558]
 [0.         0.73939684]
 [0.         0.75191327]
 [1.         0.76455613]
 [1.         0.77732669]
 [1.         0.79022625]
 [1.         0.80325611]
 [1.         0.81641758]
 [1.         0.829712  ]
 [1.         0.8431407 ]
 [1.         0.85670505]
 [1.         0.87040641]
 [1.         0.88424617]
 [1.         0.89822572]
 [1.         0.91234648]
 [1.         0.92660988]
 [1.         0.94101735]
 [1.         0.95557035]
 [2.         0.97027035]]


-----------------------| Started logging at: Jun 24 2021 00:44:56 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 1 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 1
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']
TF:Yes, UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 2 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long /*CURSOR*/ fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 3 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if /*CURSOR*/ ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 4 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return /*CURSOR*/ 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return /*CURSOR*/ i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long /*CURSOR*/ catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num /*CURSOR*/ ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( /*CURSOR*/ int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int /*CURSOR*/ i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 10 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i /*CURSOR*/ , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , /*CURSOR*/ int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int /*CURSOR*/ j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j /*CURSOR*/ , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , /*CURSOR*/ long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 15 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long /*CURSOR*/ str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 16 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str /*CURSOR*/ [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 17 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ /*CURSOR*/ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 18 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 /*CURSOR*/ ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ] /*CURSOR*/ ) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 20 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] /*CURSOR*/ if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: 0.97 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

22
22
[[0.         0.68994709]
 [0.         0.70197033]
 [0.         0.714115  ]
 [0.         0.72638236]
 [0.         0.73877362]
 [0.         0.75129005]
 [1.         0.76393291]
 [1.         0.77670347]
 [1.         0.78960303]
 [1.         0.80263289]
 [1.         0.81579436]
 [1.         0.82908878]
 [1.         0.84251748]
 [1.         0.85608183]
 [1.         0.86978319]
 [1.         0.88362295]
 [1.         0.8976025 ]
 [1.         0.91172326]
 [1.         0.92598666]
 [1.         0.94039413]
 [1.         0.95494713]
 [2.         0.96964713]]


-----------------------| Started logging at: Jun 24 2021 00:46:46 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 1 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 1
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']
TF:Yes, UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 2 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long /*CURSOR*/ fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 3 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if /*CURSOR*/ ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 4 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return /*CURSOR*/ 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return /*CURSOR*/ i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long /*CURSOR*/ catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num /*CURSOR*/ ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( /*CURSOR*/ int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int /*CURSOR*/ i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 10 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i /*CURSOR*/ , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , /*CURSOR*/ int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int /*CURSOR*/ j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j /*CURSOR*/ , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , /*CURSOR*/ long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 15 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long /*CURSOR*/ str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 16 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str /*CURSOR*/ [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 17 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ /*CURSOR*/ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 18 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 /*CURSOR*/ ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ] /*CURSOR*/ ) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 20 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] /*CURSOR*/ if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: 0.97 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

22
22
[[0.         0.69025846]
 [0.         0.7022817 ]
 [0.         0.71442638]
 [0.         0.72669373]
 [0.         0.73908499]
 [0.         0.75160142]
 [1.         0.76424428]
 [1.         0.77701484]
 [1.         0.7899144 ]
 [1.         0.80294426]
 [1.         0.81610573]
 [1.         0.82940015]
 [1.         0.84282885]
 [1.         0.8563932 ]
 [1.         0.87009456]
 [1.         0.88393432]
 [1.         0.89791387]
 [1.         0.91203463]
 [1.         0.92629803]
 [1.         0.9407055 ]
 [1.         0.9552585 ]
 [2.         0.9699585 ]]


-----------------------| Started logging at: Jun 24 2021 01:04:29 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 1 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None


-----------------------| Started logging at: Jun 24 2021 01:05:23 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 1 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None


-----------------------| Started logging at: Jun 24 2021 01:05:38 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 1 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None


-----------------------| Started logging at: Jun 24 2021 01:05:56 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 1 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None


-----------------------| Started logging at: Jun 24 2021 01:08:29 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 1 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None


-----------------------| Started logging at: Jun 24 2021 01:13:56 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 1 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None


-----------------------| Started logging at: Jun 24 2021 01:15:57 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 1 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 1
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']
TF:Yes, UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 2 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long /*CURSOR*/ fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 3 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if /*CURSOR*/ ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 4 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return /*CURSOR*/ 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return /*CURSOR*/ i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long /*CURSOR*/ catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num /*CURSOR*/ ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( /*CURSOR*/ int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int /*CURSOR*/ i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 10 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i /*CURSOR*/ , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , /*CURSOR*/ int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int /*CURSOR*/ j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j /*CURSOR*/ , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , /*CURSOR*/ long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 15 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long /*CURSOR*/ str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 16 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str /*CURSOR*/ [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 17 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ /*CURSOR*/ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 18 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 /*CURSOR*/ ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ] /*CURSOR*/ ) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 20 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] /*CURSOR*/ if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: 0.97 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

22
22
[[0.         0.69105   ]
 [0.         0.70307323]
 [0.         0.71521791]
 [0.         0.72748527]
 [0.         0.73987653]
 [0.         0.75239296]
 [1.         0.76503582]
 [1.         0.77780638]
 [1.         0.79070594]
 [1.         0.8037358 ]
 [1.         0.81689727]
 [1.         0.83019169]
 [1.         0.84362039]
 [1.         0.85718474]
 [1.         0.8708861 ]
 [1.         0.88472586]
 [1.         0.89870541]
 [1.         0.91282617]
 [1.         0.92708957]
 [1.         0.94149704]
 [1.         0.95605004]
 [2.         0.97075004]]


-----------------------| Started logging at: Jun 24 2021 01:17:05 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 1 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 91, 128)      131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 1
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 91, 24)       2184        State[0][0]                      
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 91, 128)      78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 91, 128)      131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']
TF:Yes, UPDATED_PROGRAM STEP: 1 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include /*CURSOR*/ <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 2 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long /*CURSOR*/ fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 3 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if /*CURSOR*/ ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 4 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return /*CURSOR*/ 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 5 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return /*CURSOR*/ i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 6 , ACTION: move_down REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long /*CURSOR*/ catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 7 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num /*CURSOR*/ ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 8 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( /*CURSOR*/ int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 9 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int /*CURSOR*/ i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 10 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i /*CURSOR*/ , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 11 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , /*CURSOR*/ int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 12 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int /*CURSOR*/ j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 13 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j /*CURSOR*/ , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 14 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , /*CURSOR*/ long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 15 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long /*CURSOR*/ str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 16 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str /*CURSOR*/ [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 17 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ /*CURSOR*/ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 18 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 /*CURSOR*/ ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 19 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ] /*CURSOR*/ ) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 20 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 21 , ACTION: move_right REWARD: -0.005 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] /*CURSOR*/ if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

TF:Yes, UPDATED_PROGRAM STEP: 22 , ACTION: insert{ REWARD: 0.97 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ /*CURSOR*/ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

22
22
[[0.         0.69019937]
 [0.         0.7022226 ]
 [0.         0.71436728]
 [0.         0.72663463]
 [0.         0.7390259 ]
 [0.         0.75154233]
 [1.         0.76418519]
 [1.         0.77695575]
 [1.         0.78985531]
 [1.         0.80288517]
 [1.         0.81604664]
 [1.         0.82934106]
 [1.         0.84276976]
 [1.         0.85633411]
 [1.         0.87003547]
 [1.         0.88387522]
 [1.         0.89785478]
 [1.         0.91197554]
 [1.         0.92623894]
 [1.         0.94064641]
 [1.         0.95519941]
 [2.         0.96989941]]


-----------------------| Started logging at: Jun 24 2021 01:39:49 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 1 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 24 2021 01:40:36 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 1 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 24 2021 01:41:04 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 1 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 24 2021 01:41:40 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 1 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
CompilerErrors (InputLayer)     [(None, 91)]         0                                            
__________________________________________________________________________________________________
StateWithCompilerErrors (Concat (None, 182)          0           CompilerErrors[0][0]             
                                                                 CompilerErrors[0][0]             
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 182, 24)      2184        StateWithCompilerErrors[0][0]    
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 182, 128)     78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 182, 128)     131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 1
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
CompilerErrors (InputLayer)     [(None, 91)]         0                                            
__________________________________________________________________________________________________
StateWithCompilerErrors (Concat (None, 182)          0           CompilerErrors[0][0]             
                                                                 CompilerErrors[0][0]             
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 182, 24)      2184        StateWithCompilerErrors[0][0]    
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 182, 128)     78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 182, 128)     131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']


-----------------------| Started logging at: Jun 24 2021 01:43:20 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 1 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
CompilerErrors (InputLayer)     [(None, 91)]         0                                            
__________________________________________________________________________________________________
StateWithCompilerErrors (Concat (None, 182)          0           State[0][0]                      
                                                                 CompilerErrors[0][0]             
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 182, 24)      2184        StateWithCompilerErrors[0][0]    
__________________________________________________________________________________________________
lstm (LSTM)                     (None, 182, 128)     78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_1 (LSTM)                   (None, 182, 128)     131584      lstm[0][0]                       
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_1[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 1
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
CompilerErrors (InputLayer)     [(None, 91)]         0                                            
__________________________________________________________________________________________________
StateWithCompilerErrors (Concat (None, 182)          0           State[0][0]                      
                                                                 CompilerErrors[0][0]             
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 182, 24)      2184        StateWithCompilerErrors[0][0]    
__________________________________________________________________________________________________
lstm_2 (LSTM)                   (None, 182, 128)     78336       EncodedState[0][0]               
__________________________________________________________________________________________________
lstm_3 (LSTM)                   (None, 182, 128)     131584      lstm_2[0][0]                     
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 128)          0           lstm_3[0][0]                     
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           1677        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            129         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 213,910
Trainable params: 213,910
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']


-----------------------| Started logging at: Jun 24 2021 02:05:42 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 1 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/


-----------------------| Started logging at: Jun 24 2021 02:06:13 |----------------------- 

COMMAND: neural_net/agent.py data/network_inputs/RLAssist-seed-2030/bin_0/ data/checkpoints/RLAssist-seed-2030/bin_0/ --workers 1 --verbose
normalized vocab size: 91 num_actions: 13

Original-Dataset-size- | TRAIN:60510 | VALID:10121 | TEST:3015
Controlled-Dataset-size- | TRAIN:60510 | REAL-TEST:0 | TEST:500 | GE_TRAIN:6051

ckpt_dir: data/checkpoints/RLAssist-seed-2030-ge_01/bin_0/
Model: "model"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
CompilerErrors (InputLayer)     [(None, 91)]         0                                            
__________________________________________________________________________________________________
StateWithCompilerErrors (Concat (None, 182)          0           State[0][0]                      
                                                                 CompilerErrors[0][0]             
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 182, 24)      2184        StateWithCompilerErrors[0][0]    
__________________________________________________________________________________________________
bidirectional (Bidirectional)   (None, 182, 256)     156672      EncodedState[0][0]               
__________________________________________________________________________________________________
bidirectional_1 (Bidirectional) (None, 182, 256)     394240      bidirectional[0][0]              
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 256)          0           bidirectional_1[0][0]            
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           3341        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value (TFOpLambda)   (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            257         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 556,694
Trainable params: 556,694
Non-trainable params: 0
__________________________________________________________________________________________________
None
num_workers: 1
GE_selection_probability: 1
Model: "model_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
State (InputLayer)              [(None, 91)]         0                                            
__________________________________________________________________________________________________
CompilerErrors (InputLayer)     [(None, 91)]         0                                            
__________________________________________________________________________________________________
StateWithCompilerErrors (Concat (None, 182)          0           State[0][0]                      
                                                                 CompilerErrors[0][0]             
__________________________________________________________________________________________________
EncodedState (Embedding)        (None, 182, 24)      2184        StateWithCompilerErrors[0][0]    
__________________________________________________________________________________________________
bidirectional_2 (Bidirectional) (None, 182, 256)     156672      EncodedState[0][0]               
__________________________________________________________________________________________________
bidirectional_3 (Bidirectional) (None, 182, 256)     394240      bidirectional_2[0][0]            
__________________________________________________________________________________________________
MeanPoolingLayer (GlobalAverage (None, 256)          0           bidirectional_3[0][0]            
__________________________________________________________________________________________________
PolicyLayer (Dense)             (None, 13)           3341        MeanPoolingLayer[0][0]           
__________________________________________________________________________________________________
tf.clip_by_value_1 (TFOpLambda) (None, 13)           0           PolicyLayer[0][0]                
__________________________________________________________________________________________________
ValueLayer (Dense)              (None, 1)            257         MeanPoolingLayer[0][0]           
==================================================================================================
Total params: 556,694
Trainable params: 556,694
Non-trainable params: 0
__________________________________________________________________________________________________
None
will train for 605100 max_episodes
Starting worker: 0, T: 0, GE: 0.000000, labelled_data: 6051
ORIGINAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]){ 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
**NO ERRORS**
 

INITIAL_PROGRAM STEP: 0 ID: prog11669
[1 ] #include /*CURSOR*/ <stdio.h> 
[2 ] #include <stdlib.h> 
[3 ] long fact ( int i ){ 
[4 ] if ( i == 0 ) 
[5 ] return 0 ; 
[6 ] return i * fact ( i - 0 );} 
[7 ] long catalan_num ( int i , int j , long str [ 0 ]) 
[8 ] if ( i < str [ j ]) 
[9 ] { printf ( "String" , j ); 
[10] return str [ j ];} 
[11] j = j + 0 ; 
[12] return catalan_num ( i , j , str );} 
[13] int main (){ 
[14] int a , i , j ; 
[15] long str [ 0 ], b ; 
[16] scanf ( "String" ,& a ); 
[17] int num [ a ]; 
[18] for ( j = 0 ; j < 0 ; j ++){ 
[19] str [ j ]=(( fact ( 0 * j ))/ fact ( j ))/ fact ( j + 0 );} 
[20] for ( i = 0 ; i < a ; i ++){ 
[21] scanf ( "String" ,& num [ i ]); 
[22] b = catalan_num ( num [ i ], 0 , str ); 
[23] printf ( "String" , b );} 
[24] return 0 ;}
ERRORS:
7
 

suggested_actions: ['move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_down', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'move_right', 'insert{']
